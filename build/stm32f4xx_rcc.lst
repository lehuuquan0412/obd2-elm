ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.data.APBAHBPrescTable,"aw"
  20              		.align	2
  23              	APBAHBPrescTable:
  24 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
  24      01020304 
  24      01020304 
  24      06
  25 000d 070809   		.ascii	"\007\010\011"
  26              		.section	.text.RCC_DeInit,"ax",%progbits
  27              		.align	1
  28              		.global	RCC_DeInit
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	RCC_DeInit:
  34              	.LFB130:
  35              		.file 1 "Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c"
   1:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
   2:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @file    stm32f4xx_rcc.c
   4:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @version V1.8.0
   6:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @date    04-November-2016
   7:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:
   9:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + Internal/external clocks, PLL, CSS and MCO configuration
  10:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + System, AHB and APB busses clocks configuration
  11:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + Peripheral clocks configuration
  12:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + Interrupts and flags management
  13:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  14:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  @verbatim
  15:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
  16:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                       ##### RCC specific features #####
  17:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
  18:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]  
  19:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       After reset the device is running from Internal High Speed oscillator 
  20:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache 
  21:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  22:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       SRAM, Flash and JTAG.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 2


  23:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  24:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  25:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  26:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  27:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           are assigned to be used for debug purpose.
  28:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]          
  29:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       Once the device started from reset, the user application has to:
  30:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  31:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           (if the application needs higher frequency/performance)
  32:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  33:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  34:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  35:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  36:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  37:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  @endverbatim    
  38:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
  39:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @attention
  40:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  41:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  42:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  43:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  44:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * You may not use this file except in compliance with the License.
  45:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * You may obtain a copy of the License at:
  46:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  47:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  48:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  49:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  50:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  51:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  52:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * See the License for the specific language governing permissions and
  53:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * limitations under the License.
  54:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  55:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
  56:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
  57:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  58:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Includes ------------------------------------------------------------------*/
  59:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #include "stm32f4xx_rcc.h"
  60:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  61:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  62:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
  63:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
  64:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  65:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC 
  66:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief RCC driver modules
  67:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
  68:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */ 
  69:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  70:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  71:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private define ------------------------------------------------------------*/
  72:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  73:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  74:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CR Register ---*/
  75:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of HSION bit */
  76:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  77:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define HSION_BitNumber           0x00
  78:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  79:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of CSSON bit */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 3


  80:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CSSON_BitNumber           0x13
  81:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  82:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLON bit */
  83:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define PLLON_BitNumber           0x18
  84:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  85:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLI2SON bit */
  86:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define PLLI2SON_BitNumber        0x1A
  87:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_PLLI2SON_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLI2SON_BitNumber * 4))
  88:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  89:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLSAION bit */
  90:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define PLLSAION_BitNumber        0x1C
  91:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_PLLSAION_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLSAION_BitNumber * 4))
  92:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  93:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
  94:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of I2SSRC bit */
  95:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x08)
  96:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define I2SSRC_BitNumber          0x17
  97:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_I2SSRC_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (I2SSRC_BitNumber * 4))
  98:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  99:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- BDCR Register ---*/
 100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of RTCEN bit */
 101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x70)
 102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RTCEN_BitNumber           0x0F
 103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
 104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of BDRST bit */
 105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDRST_BitNumber           0x10
 106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CSR Register ---*/
 109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of LSION bit */
 110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x74)
 111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define LSION_BitNumber           0x00
 112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- DCKCFGR Register ---*/
 115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of TIMPRE bit */
 116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define DCKCFGR_OFFSET            (RCC_OFFSET + 0x8C)
 117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define TIMPRE_BitNumber          0x18
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define DCKCFGR_TIMPRE_BB         (PERIPH_BB_BASE + (DCKCFGR_OFFSET * 32) + (TIMPRE_BitNumber * 4))
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
 120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
 121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_OFFSET            (RCC_OFFSET + 0x08)
 122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  #if defined(STM32F410xx)
 123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of MCO1EN bit */
 124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_MCO1EN_BIT_NUMBER      0x8
 125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO1EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO1EN_BIT_NUMBE
 126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of MCO2EN bit */
 128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_MCO2EN_BIT_NUMBER      0x9
 129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO2EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO2EN_BIT_NUMBE
 130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
 131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CFGR register bit mask */
 133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_MCO2_RESET_MASK      ((uint32_t)0x07FFFFFF)
 134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_MCO1_RESET_MASK      ((uint32_t)0xF89FFFFF)
 135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* RCC Flag Mask */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 4


 137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
 138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CR register byte 3 (Bits[23:16]) base address */
 140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_BYTE3_ADDRESS          ((uint32_t)0x40023802)
 141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x01))
 144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x02))
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* BDCR register base address */
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private macro -------------------------------------------------------------*/
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private variables ---------------------------------------------------------*/
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private functions ---------------------------------------------------------*/
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Private_Functions
 159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */ 
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
 165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
 166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===================================================================================
 167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ##### Internal and  external clocks, PLL, CSS and MCO configuration functions #####
 168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===================================================================================
 169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]
 170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the internal/external clocks,
 171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       PLLs, CSS and MCO pins.
 172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           the PLL as System clock source.
 175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           clock source.
 178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) PLLI2S (clocked by HSI or HSE), used to generate an accurate clock to achieve 
 190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           high-quality audio performance on the I2S interface or SAI interface in case 
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           of STM32F429x/439x devices.
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      
 193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) PLLSAI clocked by (HSI or HSE), used to generate an accurate clock to SAI 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 5


 194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           interface and LCD TFT controller available only for STM32F42xxx/43xxx/446xx/469xx/479xx d
 195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) CSS (Clock security system), once enable and if a HSE clock failure occurs 
 197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          (HSE used directly or through PLL as System clock source), the System clock
 198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          is automatically switched to HSI and an interrupt is generated if enabled. 
 199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt) 
 200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          exception vector.   
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PA8 pin.
 204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PC9 pin.
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  @endverbatim
 208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
 209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - HSI ON and used as system clock source
 215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - HSE, PLL and PLLI2S OFF
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - All interrupts disabled
 219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function doesn't modify the configuration of the
 220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - Peripheral clocks  
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - LSI, LSE and RTC clocks 
 222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
 223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_DeInit(void)
 226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
  36              		.loc 1 226 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40              		@ link register save eliminated.
  41 0000 80B4     		push	{r7}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 7, -4
  45 0002 00AF     		add	r7, sp, #0
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
 227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set HSION bit */
 228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  48              		.loc 1 228 11
  49 0004 164B     		ldr	r3, .L2
  50 0006 1B68     		ldr	r3, [r3]
  51 0008 154A     		ldr	r2, .L2
  52 000a 43F00103 		orr	r3, r3, #1
  53 000e 1360     		str	r3, [r2]
 229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset CFGR register */
 231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = 0x00000000;
  54              		.loc 1 231 6
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 6


  55 0010 134B     		ldr	r3, .L2
  56              		.loc 1 231 13
  57 0012 0022     		movs	r2, #0
  58 0014 9A60     		str	r2, [r3, #8]
 232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset HSEON, CSSON, PLLON, PLLI2S and PLLSAI(STM32F42xxx/43xxx/446xx/469xx/479xx devices) bits
 234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xEAF6FFFF;
  59              		.loc 1 234 11
  60 0016 124B     		ldr	r3, .L2
  61 0018 1B68     		ldr	r3, [r3]
  62 001a 114A     		ldr	r2, .L2
  63 001c 23F0A853 		bic	r3, r3, #352321536
  64 0020 23F41023 		bic	r3, r3, #589824
  65 0024 1360     		str	r3, [r2]
 235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset PLLCFGR register */
 237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = 0x24003010;
  66              		.loc 1 237 6
  67 0026 0E4B     		ldr	r3, .L2
  68              		.loc 1 237 16
  69 0028 0E4A     		ldr	r2, .L2+4
  70 002a 5A60     		str	r2, [r3, #4]
 238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset PLLI2SCFGR register */
 241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = 0x20003000;
  71              		.loc 1 241 6
  72 002c 0C4B     		ldr	r3, .L2
  73              		.loc 1 241 19
  74 002e 0E4A     		ldr	r2, .L2+8
  75 0030 C3F88420 		str	r2, [r3, #132]
 242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
 243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset PLLSAICFGR register, only available for STM32F42xxx/43xxx/446xx/469xx/479xx devices */
 246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = 0x24003000;
  76              		.loc 1 246 6
  77 0034 0A4B     		ldr	r3, .L2
  78              		.loc 1 246 19
  79 0036 0D4A     		ldr	r2, .L2+12
  80 0038 C3F88820 		str	r2, [r3, #136]
 247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F446xx || STM32F469_479xx */
 248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset HSEBYP bit */
 250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  81              		.loc 1 250 11
  82 003c 084B     		ldr	r3, .L2
  83 003e 1B68     		ldr	r3, [r3]
  84 0040 074A     		ldr	r2, .L2
  85 0042 23F48023 		bic	r3, r3, #262144
  86 0046 1360     		str	r3, [r2]
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Disable all interrupts */
 253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CIR = 0x00000000;
  87              		.loc 1 253 6
  88 0048 054B     		ldr	r3, .L2
  89              		.loc 1 253 12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 7


  90 004a 0022     		movs	r2, #0
  91 004c DA60     		str	r2, [r3, #12]
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Disable Timers clock prescalers selection, only available for STM32F42/43xxx and STM32F413_423
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = 0x00000000;
  92              		.loc 1 256 6
  93 004e 044B     		ldr	r3, .L2
  94              		.loc 1 256 16
  95 0050 0022     		movs	r2, #0
  96 0052 C3F88C20 		str	r2, [r3, #140]
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F413_423xx)
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Disable LPTIM and FMPI2C clock prescalers selection, only available for STM32F410xx and STM32F
 260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 = 0x00000000;
 261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F413_423xx */  
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
  97              		.loc 1 262 1
  98 0056 00BF     		nop
  99 0058 BD46     		mov	sp, r7
 100              	.LCFI2:
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 005a 5DF8047B 		ldr	r7, [sp], #4
 104              	.LCFI3:
 105              		.cfi_restore 7
 106              		.cfi_def_cfa_offset 0
 107 005e 7047     		bx	lr
 108              	.L3:
 109              		.align	2
 110              	.L2:
 111 0060 00380240 		.word	1073887232
 112 0064 10300024 		.word	603992080
 113 0068 00300020 		.word	536883200
 114 006c 00300024 		.word	603992064
 115              		.cfi_endproc
 116              	.LFE130:
 118              		.section	.text.RCC_HSEConfig,"ax",%progbits
 119              		.align	1
 120              		.global	RCC_HSEConfig
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	RCC_HSEConfig:
 126              	.LFB131:
 263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         software should wait on HSERDY flag to be set indicating that HSE clock
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the PLL and/or system clock.
 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   HSE state can not be changed if it is used directly or through the
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLL as system clock. In this case, you have to select another source
 271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of the system clock then change the HSE state (ex. disable it).
 272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The HSE is stopped by hardware when entering STOP and STANDBY modes.  
 273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function reset the CSSON bit, so if the Clock security system(CSS)
 274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         function.    
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 8


 276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                              6 HSE oscillator clock cycles.
 280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_ON: turn ON the HSE oscillator
 281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 127              		.loc 1 285 1
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 8
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              	.LCFI4:
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0002 83B0     		sub	sp, sp, #12
 137              	.LCFI5:
 138              		.cfi_def_cfa_offset 16
 139 0004 00AF     		add	r7, sp, #0
 140              	.LCFI6:
 141              		.cfi_def_cfa_register 7
 142 0006 0346     		mov	r3, r0
 143 0008 FB71     		strb	r3, [r7, #7]
 286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE_OFF;
 144              		.loc 1 290 3
 145 000a 064B     		ldr	r3, .L5
 146              		.loc 1 290 38
 147 000c 0022     		movs	r2, #0
 148 000e 1A70     		strb	r2, [r3]
 291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE;
 149              		.loc 1 293 3
 150 0010 044A     		ldr	r2, .L5
 151              		.loc 1 293 38
 152 0012 FB79     		ldrb	r3, [r7, #7]
 153 0014 1370     		strb	r3, [r2]
 294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 154              		.loc 1 294 1
 155 0016 00BF     		nop
 156 0018 0C37     		adds	r7, r7, #12
 157              	.LCFI7:
 158              		.cfi_def_cfa_offset 4
 159 001a BD46     		mov	sp, r7
 160              	.LCFI8:
 161              		.cfi_def_cfa_register 13
 162              		@ sp needed
 163 001c 5DF8047B 		ldr	r7, [sp], #4
 164              	.LCFI9:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 9


 165              		.cfi_restore 7
 166              		.cfi_def_cfa_offset 0
 167 0020 7047     		bx	lr
 168              	.L6:
 169 0022 00BF     		.align	2
 170              	.L5:
 171 0024 02380240 		.word	1073887234
 172              		.cfi_endproc
 173              	.LFE131:
 175              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 176              		.align	1
 177              		.global	RCC_WaitForHSEStartUp
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 182              	RCC_WaitForHSEStartUp:
 183              	.LFB132:
 295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Waits for HSE start-up.
 298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This functions waits on HSERDY flag to be set and return SUCCESS if 
 299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f4xx.h file. You can tailor it depending
 302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the HSE crystal used in your application. 
 303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
 304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval An ErrorStatus enumeration value:
 305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 184              		.loc 1 309 1
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188 0000 80B5     		push	{r7, lr}
 189              	.LCFI10:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 82B0     		sub	sp, sp, #8
 194              	.LCFI11:
 195              		.cfi_def_cfa_offset 16
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI12:
 198              		.cfi_def_cfa_register 7
 310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 199              		.loc 1 310 17
 200 0006 0023     		movs	r3, #0
 201 0008 3B60     		str	r3, [r7]
 311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 202              		.loc 1 311 15
 203 000a 0023     		movs	r3, #0
 204 000c FB71     		strb	r3, [r7, #7]
 312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   FlagStatus hsestatus = RESET;
 205              		.loc 1 312 14
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 10


 206 000e 0023     		movs	r3, #0
 207 0010 BB71     		strb	r3, [r7, #6]
 208              	.L9:
 313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   do
 315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     hsestatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 209              		.loc 1 316 17 discriminator 2
 210 0012 3120     		movs	r0, #49
 211 0014 FFF7FEFF 		bl	RCC_GetFlagStatus
 212 0018 0346     		mov	r3, r0
 213 001a BB71     		strb	r3, [r7, #6]
 317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     startupcounter++;
 214              		.loc 1 317 19 discriminator 2
 215 001c 3B68     		ldr	r3, [r7]
 216 001e 0133     		adds	r3, r3, #1
 217 0020 3B60     		str	r3, [r7]
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 218              		.loc 1 318 27 discriminator 2
 219 0022 3B68     		ldr	r3, [r7]
 220              		.loc 1 318 3 discriminator 2
 221 0024 B3F5A04F 		cmp	r3, #20480
 222 0028 02D0     		beq	.L8
 223              		.loc 1 318 51 discriminator 1
 224 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 225 002c 002B     		cmp	r3, #0
 226 002e F0D0     		beq	.L9
 227              	.L8:
 319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 228              		.loc 1 320 7
 229 0030 3120     		movs	r0, #49
 230 0032 FFF7FEFF 		bl	RCC_GetFlagStatus
 231 0036 0346     		mov	r3, r0
 232              		.loc 1 320 6
 233 0038 002B     		cmp	r3, #0
 234 003a 02D0     		beq	.L10
 321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     status = SUCCESS;
 235              		.loc 1 322 12
 236 003c 0123     		movs	r3, #1
 237 003e FB71     		strb	r3, [r7, #7]
 238 0040 01E0     		b	.L11
 239              	.L10:
 323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
 325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     status = ERROR;
 240              		.loc 1 326 12
 241 0042 0023     		movs	r3, #0
 242 0044 FB71     		strb	r3, [r7, #7]
 243              	.L11:
 327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return (status);
 244              		.loc 1 328 10
 245 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 11


 246              		.loc 1 329 1
 247 0048 1846     		mov	r0, r3
 248 004a 0837     		adds	r7, r7, #8
 249              	.LCFI13:
 250              		.cfi_def_cfa_offset 8
 251 004c BD46     		mov	sp, r7
 252              	.LCFI14:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 004e 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE132:
 259              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 260              		.align	1
 261              		.global	RCC_AdjustHSICalibrationValue
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	RCC_AdjustHSICalibrationValue:
 267              	.LFB133:
 330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 268              		.loc 1 340 1
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 16
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273 0000 80B4     		push	{r7}
 274              	.LCFI15:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0002 85B0     		sub	sp, sp, #20
 278              	.LCFI16:
 279              		.cfi_def_cfa_offset 24
 280 0004 00AF     		add	r7, sp, #0
 281              	.LCFI17:
 282              		.cfi_def_cfa_register 7
 283 0006 0346     		mov	r3, r0
 284 0008 FB71     		strb	r3, [r7, #7]
 341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 285              		.loc 1 341 12
 286 000a 0023     		movs	r3, #0
 287 000c FB60     		str	r3, [r7, #12]
 342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CR;
 288              		.loc 1 345 15
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 12


 289 000e 0A4B     		ldr	r3, .L14
 290              		.loc 1 345 10
 291 0010 1B68     		ldr	r3, [r3]
 292 0012 FB60     		str	r3, [r7, #12]
 346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 293              		.loc 1 348 10
 294 0014 FB68     		ldr	r3, [r7, #12]
 295 0016 23F0F803 		bic	r3, r3, #248
 296 001a FB60     		str	r3, [r7, #12]
 349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 297              		.loc 1 351 13
 298 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 299              		.loc 1 351 43
 300 001e DB00     		lsls	r3, r3, #3
 301              		.loc 1 351 10
 302 0020 FA68     		ldr	r2, [r7, #12]
 303 0022 1343     		orrs	r3, r3, r2
 304 0024 FB60     		str	r3, [r7, #12]
 352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR = tmpreg;
 305              		.loc 1 354 6
 306 0026 044A     		ldr	r2, .L14
 307              		.loc 1 354 11
 308 0028 FB68     		ldr	r3, [r7, #12]
 309 002a 1360     		str	r3, [r2]
 355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 310              		.loc 1 355 1
 311 002c 00BF     		nop
 312 002e 1437     		adds	r7, r7, #20
 313              	.LCFI18:
 314              		.cfi_def_cfa_offset 4
 315 0030 BD46     		mov	sp, r7
 316              	.LCFI19:
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 0032 5DF8047B 		ldr	r7, [sp], #4
 320              	.LCFI20:
 321              		.cfi_restore 7
 322              		.cfi_def_cfa_offset 0
 323 0036 7047     		bx	lr
 324              	.L15:
 325              		.align	2
 326              	.L14:
 327 0038 00380240 		.word	1073887232
 328              		.cfi_endproc
 329              	.LFE133:
 331              		.section	.text.RCC_HSICmd,"ax",%progbits
 332              		.align	1
 333              		.global	RCC_HSICmd
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 13


 338              	RCC_HSICmd:
 339              	.LFB134:
 356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The HSI is stopped by hardware when entering STOP and STANDBY modes.
 360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         It is used (enabled by hardware) as system clock source after startup
 361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         from Reset, wakeup from STOP and STANDBY mode, or in case of failure
 362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of the HSE used directly or indirectly as system clock (if the Clock
 363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         Security System CSS is enabled).             
 364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   HSI can not be stopped if it is used as system clock source. In this case,
 365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         you have to select another source of the system clock then stop the HSI.  
 366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSI, the application software should wait on HSIRDY
 367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         flag to be set indicating that HSI clock is stable and can be used as
 368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         system clock source.  
 369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the HSI.
 370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         clock cycles.  
 373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 340              		.loc 1 376 1
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              	.LCFI21:
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 83B0     		sub	sp, sp, #12
 350              	.LCFI22:
 351              		.cfi_def_cfa_offset 16
 352 0004 00AF     		add	r7, sp, #0
 353              	.LCFI23:
 354              		.cfi_def_cfa_register 7
 355 0006 0346     		mov	r3, r0
 356 0008 FB71     		strb	r3, [r7, #7]
 377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 357              		.loc 1 380 3
 358 000a 044A     		ldr	r2, .L17
 359              		.loc 1 380 36
 360 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 361              		.loc 1 380 34
 362 000e 1360     		str	r3, [r2]
 381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 363              		.loc 1 381 1
 364 0010 00BF     		nop
 365 0012 0C37     		adds	r7, r7, #12
 366              	.LCFI24:
 367              		.cfi_def_cfa_offset 4
 368 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 14


 369              	.LCFI25:
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 0016 5DF8047B 		ldr	r7, [sp], #4
 373              	.LCFI26:
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 001a 7047     		bx	lr
 377              	.L18:
 378              		.align	2
 379              	.L17:
 380 001c 00004742 		.word	1111949312
 381              		.cfi_endproc
 382              	.LFE134:
 384              		.section	.text.RCC_LSEConfig,"ax",%progbits
 385              		.align	1
 386              		.global	RCC_LSEConfig
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	RCC_LSEConfig:
 392              	.LFB135:
 382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   As the LSE is in the Backup domain and write access is denied to
 386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         this domain after reset, you have to enable write access using 
 387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         (to be done once after reset).  
 389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
 390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         software should wait on LSERDY flag to be set indicating that LSE clock
 391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the RTC.
 392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                              6 LSE oscillator clock cycles.
 396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_ON: turn ON the LSE oscillator
 397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 393              		.loc 1 401 1
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
 399              	.LCFI27:
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 7, -4
 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI28:
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              	.LCFI29:
 407              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 15


 408 0006 0346     		mov	r3, r0
 409 0008 FB71     		strb	r3, [r7, #7]
 402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset LSEON bit */
 407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 410              		.loc 1 407 3
 411 000a 0D4B     		ldr	r3, .L24
 412              		.loc 1 407 34
 413 000c 0022     		movs	r2, #0
 414 000e 1A70     		strb	r2, [r3]
 408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset LSEBYP bit */
 410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 415              		.loc 1 410 3
 416 0010 0B4B     		ldr	r3, .L24
 417              		.loc 1 410 34
 418 0012 0022     		movs	r2, #0
 419 0014 1A70     		strb	r2, [r3]
 411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   switch (RCC_LSE)
 420              		.loc 1 413 3
 421 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 422 0018 012B     		cmp	r3, #1
 423 001a 02D0     		beq	.L20
 424 001c 042B     		cmp	r3, #4
 425 001e 04D0     		beq	.L21
 414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     case RCC_LSE_ON:
 416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* Set LSEON bit */
 417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     case RCC_LSE_Bypass:
 420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* Set LSEBYP and LSEON bits */
 421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     default:
 424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 426              		.loc 1 424 7
 427 0020 07E0     		b	.L23
 428              	.L20:
 417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 429              		.loc 1 417 7
 430 0022 074B     		ldr	r3, .L24
 417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 431              		.loc 1 417 38
 432 0024 0122     		movs	r2, #1
 433 0026 1A70     		strb	r2, [r3]
 418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     case RCC_LSE_Bypass:
 434              		.loc 1 418 7
 435 0028 03E0     		b	.L23
 436              	.L21:
 421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 437              		.loc 1 421 7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 16


 438 002a 054B     		ldr	r3, .L24
 421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 439              		.loc 1 421 38
 440 002c 0522     		movs	r2, #5
 441 002e 1A70     		strb	r2, [r3]
 422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     default:
 442              		.loc 1 422 7
 443 0030 00BF     		nop
 444              	.L23:
 425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 445              		.loc 1 426 1
 446 0032 00BF     		nop
 447 0034 0C37     		adds	r7, r7, #12
 448              	.LCFI30:
 449              		.cfi_def_cfa_offset 4
 450 0036 BD46     		mov	sp, r7
 451              	.LCFI31:
 452              		.cfi_def_cfa_register 13
 453              		@ sp needed
 454 0038 5DF8047B 		ldr	r7, [sp], #4
 455              	.LCFI32:
 456              		.cfi_restore 7
 457              		.cfi_def_cfa_offset 0
 458 003c 7047     		bx	lr
 459              	.L25:
 460 003e 00BF     		.align	2
 461              	.L24:
 462 0040 70380240 		.word	1073887344
 463              		.cfi_endproc
 464              	.LFE135:
 466              		.section	.text.RCC_LSICmd,"ax",%progbits
 467              		.align	1
 468              		.global	RCC_LSICmd
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 473              	RCC_LSICmd:
 474              	.LFB136:
 427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSI, the application software should wait on 
 431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         LSIRDY flag to be set indicating that LSI clock is stable and can
 432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         be used to clock the IWDG and/or the RTC.
 433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.  
 434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the LSI.
 435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         clock cycles. 
 438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 475              		.loc 1 441 1
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 17


 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0000 80B4     		push	{r7}
 481              	.LCFI33:
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 0002 83B0     		sub	sp, sp, #12
 485              	.LCFI34:
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              	.LCFI35:
 489              		.cfi_def_cfa_register 7
 490 0006 0346     		mov	r3, r0
 491 0008 FB71     		strb	r3, [r7, #7]
 442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 492              		.loc 1 445 3
 493 000a 044A     		ldr	r2, .L27
 494              		.loc 1 445 37
 495 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 496              		.loc 1 445 35
 497 000e 1360     		str	r3, [r2]
 446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 498              		.loc 1 446 1
 499 0010 00BF     		nop
 500 0012 0C37     		adds	r7, r7, #12
 501              	.LCFI36:
 502              		.cfi_def_cfa_offset 4
 503 0014 BD46     		mov	sp, r7
 504              	.LCFI37:
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0016 5DF8047B 		ldr	r7, [sp], #4
 508              	.LCFI38:
 509              		.cfi_restore 7
 510              		.cfi_def_cfa_offset 0
 511 001a 7047     		bx	lr
 512              	.L28:
 513              		.align	2
 514              	.L27:
 515 001c 800E4742 		.word	1111953024
 516              		.cfi_endproc
 517              	.LFE136:
 519              		.section	.text.RCC_PLLConfig,"ax",%progbits
 520              		.align	1
 521              		.global	RCC_PLLConfig
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 526              	RCC_PLLConfig:
 527              	.LFB137:
 447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx
 449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 18


 451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLR: specifies the division factor for I2S, SAI, SYSTEM, SPDIF in STM32F446xx devices
 479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
 482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         correctly.
 485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLR_VALUE(PLLR));
 497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24) | (PLLR << 28);
 500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F412xG || STM32F413_423xx || STM32F446xx || STM32F469_479xx */
 502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 19


 508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
 533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         correctly.
 536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 528              		.loc 1 540 1
 529              		.cfi_startproc
 530              		@ args = 4, pretend = 0, frame = 16
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              	.LCFI39:
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 7, -4
 537 0002 85B0     		sub	sp, sp, #20
 538              	.LCFI40:
 539              		.cfi_def_cfa_offset 24
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI41:
 542              		.cfi_def_cfa_register 7
 543 0006 F860     		str	r0, [r7, #12]
 544 0008 B960     		str	r1, [r7, #8]
 545 000a 7A60     		str	r2, [r7, #4]
 546 000c 3B60     		str	r3, [r7]
 541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 20


 546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 547              		.loc 1 548 31
 548 000e 7B68     		ldr	r3, [r7, #4]
 549 0010 9A01     		lsls	r2, r3, #6
 550              		.loc 1 548 23
 551 0012 BB68     		ldr	r3, [r7, #8]
 552 0014 1A43     		orrs	r2, r2, r3
 553              		.loc 1 548 47
 554 0016 3B68     		ldr	r3, [r7]
 555 0018 5B08     		lsrs	r3, r3, #1
 556              		.loc 1 548 53
 557 001a 013B     		subs	r3, r3, #1
 558              		.loc 1 548 57
 559 001c 1B04     		lsls	r3, r3, #16
 560              		.loc 1 548 37
 561 001e 1A43     		orrs	r2, r2, r3
 562              		.loc 1 548 64
 563 0020 FB68     		ldr	r3, [r7, #12]
 564 0022 1A43     		orrs	r2, r2, r3
 549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24);
 565              		.loc 1 549 24
 566 0024 BB69     		ldr	r3, [r7, #24]
 567 0026 1B06     		lsls	r3, r3, #24
 548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24);
 568              		.loc 1 548 6
 569 0028 0449     		ldr	r1, .L30
 548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24);
 570              		.loc 1 548 82
 571 002a 1343     		orrs	r3, r3, r2
 548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24);
 572              		.loc 1 548 16
 573 002c 4B60     		str	r3, [r1, #4]
 550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 574              		.loc 1 550 1
 575 002e 00BF     		nop
 576 0030 1437     		adds	r7, r7, #20
 577              	.LCFI42:
 578              		.cfi_def_cfa_offset 4
 579 0032 BD46     		mov	sp, r7
 580              	.LCFI43:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 0034 5DF8047B 		ldr	r7, [sp], #4
 584              	.LCFI44:
 585              		.cfi_restore 7
 586              		.cfi_def_cfa_offset 0
 587 0038 7047     		bx	lr
 588              	.L31:
 589 003a 00BF     		.align	2
 590              	.L30:
 591 003c 00380240 		.word	1073887232
 592              		.cfi_endproc
 593              	.LFE137:
 595              		.section	.text.RCC_PLLCmd,"ax",%progbits
 596              		.align	1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 21


 597              		.global	RCC_PLLCmd
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 602              	RCC_PLLCmd:
 603              	.LFB138:
 551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the main PLL.
 555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the main PLL, the application software should wait on 
 556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLLRDY flag to be set indicating that PLL clock is stable and can
 557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         be used as system clock source.
 558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The main PLL can not be disabled if it is used as system clock source
 559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The main PLL is disabled by hardware when entering STOP and STANDBY modes.
 560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the main PLL. This parameter can be: ENABLE or DISABLE.
 561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 604              		.loc 1 564 1
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609 0000 80B4     		push	{r7}
 610              	.LCFI45:
 611              		.cfi_def_cfa_offset 4
 612              		.cfi_offset 7, -4
 613 0002 83B0     		sub	sp, sp, #12
 614              	.LCFI46:
 615              		.cfi_def_cfa_offset 16
 616 0004 00AF     		add	r7, sp, #0
 617              	.LCFI47:
 618              		.cfi_def_cfa_register 7
 619 0006 0346     		mov	r3, r0
 620 0008 FB71     		strb	r3, [r7, #7]
 565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 621              		.loc 1 567 3
 622 000a 044A     		ldr	r2, .L33
 623              		.loc 1 567 36
 624 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 625              		.loc 1 567 34
 626 000e 1360     		str	r3, [r2]
 568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 627              		.loc 1 568 1
 628 0010 00BF     		nop
 629 0012 0C37     		adds	r7, r7, #12
 630              	.LCFI48:
 631              		.cfi_def_cfa_offset 4
 632 0014 BD46     		mov	sp, r7
 633              	.LCFI49:
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed
 636 0016 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 22


 637              	.LCFI50:
 638              		.cfi_restore 7
 639              		.cfi_def_cfa_offset 0
 640 001a 7047     		bx	lr
 641              	.L34:
 642              		.align	2
 643              	.L33:
 644 001c 60004742 		.word	1111949408
 645              		.cfi_endproc
 646              	.LFE138:
 648              		.section	.text.RCC_PLLI2SConfig,"ax",%progbits
 649              		.align	1
 650              		.global	RCC_PLLI2SConfig
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 655              	RCC_PLLI2SConfig:
 656              	.LFB139:
 569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx)
 571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F405xx/407xx, STM32F415xx/417xx 
 575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         or STM32F401xx devices. 
 576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *             
 581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR)
 594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 657              		.loc 1 594 1
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0000 80B4     		push	{r7}
 663              	.LCFI51:
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 83B0     		sub	sp, sp, #12
 667              	.LCFI52:
 668              		.cfi_def_cfa_offset 16
 669 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 23


 670              	.LCFI53:
 671              		.cfi_def_cfa_register 7
 672 0006 7860     		str	r0, [r7, #4]
 673 0008 3960     		str	r1, [r7]
 595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28);
 674              		.loc 1 599 30
 675 000a 7B68     		ldr	r3, [r7, #4]
 676 000c 9A01     		lsls	r2, r3, #6
 677              		.loc 1 599 47
 678 000e 3B68     		ldr	r3, [r7]
 679 0010 1B07     		lsls	r3, r3, #28
 680              		.loc 1 599 6
 681 0012 0549     		ldr	r1, .L36
 682              		.loc 1 599 36
 683 0014 1343     		orrs	r3, r3, r2
 684              		.loc 1 599 19
 685 0016 C1F88430 		str	r3, [r1, #132]
 600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 686              		.loc 1 600 1
 687 001a 00BF     		nop
 688 001c 0C37     		adds	r7, r7, #12
 689              	.LCFI54:
 690              		.cfi_def_cfa_offset 4
 691 001e BD46     		mov	sp, r7
 692              	.LCFI55:
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 0020 5DF8047B 		ldr	r7, [sp], #4
 696              	.LCFI56:
 697              		.cfi_restore 7
 698              		.cfi_def_cfa_offset 0
 699 0024 7047     		bx	lr
 700              	.L37:
 701 0026 00BF     		.align	2
 702              	.L36:
 703 0028 00380240 		.word	1073887232
 704              		.cfi_endproc
 705              	.LFE139:
 707              		.section	.text.RCC_PLLI2SCmd,"ax",%progbits
 708              		.align	1
 709              		.global	RCC_PLLI2SCmd
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 714              	RCC_PLLI2SCmd:
 715              	.LFB140:
 601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F401xx */
 602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F411xE)
 604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F411xE devices. 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 24


 608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR, uint32_t PLLI2SM)
 632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28) | PLLI2SM;
 639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F411xE */
 641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
 643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         
 648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *             
 652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
 658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 
 660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 25


 665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SQ, uint32_t PLLI2SR)
 668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SQ << 24) | (PLLI2SR << 28);
 675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
 677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG ) || defined(STM32F413_423xx) || defined(STM32F446xx)
 679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         
 684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SP: specifies the division factor for PLL 48Mhz clock output
 700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
 703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 
 705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   the PLLI2SR parameter is only available with STM32F42xxx/43xxx devices.  
 710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SM, uint32_t PLLI2SN, uint32_t PLLI2SP, uint32_t PLLI2SQ, uint3
 714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SP_VALUE(PLLI2SP));
 719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 26


 722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR =  PLLI2SM | (PLLI2SN << 6) | (((PLLI2SP >> 1) -1) << 16) | (PLLI2SQ << 24) | (PL
 723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
 725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLI2S. 
 728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The PLLI2S is disabled by hardware when entering STOP and STANDBY modes.  
 729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLI2S. This parameter can be: ENABLE or DISABLE.
 730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SCmd(FunctionalState NewState)
 733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 716              		.loc 1 733 1
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              	.LCFI57:
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 83B0     		sub	sp, sp, #12
 726              	.LCFI58:
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              	.LCFI59:
 730              		.cfi_def_cfa_register 7
 731 0006 0346     		mov	r3, r0
 732 0008 FB71     		strb	r3, [r7, #7]
 734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLI2SON_BB = (uint32_t)NewState;
 733              		.loc 1 736 3
 734 000a 044A     		ldr	r2, .L39
 735              		.loc 1 736 39
 736 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 737              		.loc 1 736 37
 738 000e 1360     		str	r3, [r2]
 737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 739              		.loc 1 737 1
 740 0010 00BF     		nop
 741 0012 0C37     		adds	r7, r7, #12
 742              	.LCFI60:
 743              		.cfi_def_cfa_offset 4
 744 0014 BD46     		mov	sp, r7
 745              	.LCFI61:
 746              		.cfi_def_cfa_register 13
 747              		@ sp needed
 748 0016 5DF8047B 		ldr	r7, [sp], #4
 749              	.LCFI62:
 750              		.cfi_restore 7
 751              		.cfi_def_cfa_offset 0
 752 001a 7047     		bx	lr
 753              	.L40:
 754              		.align	2
 755              	.L39:
 756 001c 68004742 		.word	1111949416
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 27


 757              		.cfi_endproc
 758              	.LFE140:
 760              		.section	.text.RCC_PLLSAIConfig,"ax",%progbits
 761              		.align	1
 762              		.global	RCC_PLLSAIConfig
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	RCC_PLLSAIConfig:
 768              	.LFB141:
 738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
 740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F469_479xx devices 
 744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
 745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
 751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}..
 756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           
 757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            
 760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ, uint32_t PLLSAIR)
 766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
 772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (((PLLSAIP >> 1) -1) << 16) | (PLLSAIQ << 24) | (PLLSAIR << 28
 774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */
 776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
 778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
 783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 28


 785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIM: specifies the division factor for PLLSAI VCO input clock
 788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIM parameter correctly to ensure that the VCO input
 790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLSAI jitter.
 792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
 795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}.
 800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIM, uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ)
 807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIM_VALUE(PLLSAIM));
 810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = PLLSAIM | (PLLSAIN << 6) | (((PLLSAIP >> 1) -1) << 16)  | (PLLSAIQ << 24);
 815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
 817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
 824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *             
 828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           
 833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            
 836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIQ, uint32_t PLLSAIR)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 29


 842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 769              		.loc 1 842 1
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 16
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774 0000 80B4     		push	{r7}
 775              	.LCFI63:
 776              		.cfi_def_cfa_offset 4
 777              		.cfi_offset 7, -4
 778 0002 85B0     		sub	sp, sp, #20
 779              	.LCFI64:
 780              		.cfi_def_cfa_offset 24
 781 0004 00AF     		add	r7, sp, #0
 782              	.LCFI65:
 783              		.cfi_def_cfa_register 7
 784 0006 F860     		str	r0, [r7, #12]
 785 0008 B960     		str	r1, [r7, #8]
 786 000a 7A60     		str	r2, [r7, #4]
 843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
 846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (PLLSAIQ << 24) | (PLLSAIR << 28);
 787              		.loc 1 848 30
 788 000c FB68     		ldr	r3, [r7, #12]
 789 000e 9A01     		lsls	r2, r3, #6
 790              		.loc 1 848 47
 791 0010 BB68     		ldr	r3, [r7, #8]
 792 0012 1B06     		lsls	r3, r3, #24
 793              		.loc 1 848 36
 794 0014 1A43     		orrs	r2, r2, r3
 795              		.loc 1 848 65
 796 0016 7B68     		ldr	r3, [r7, #4]
 797 0018 1B07     		lsls	r3, r3, #28
 798              		.loc 1 848 6
 799 001a 0549     		ldr	r1, .L42
 800              		.loc 1 848 54
 801 001c 1343     		orrs	r3, r3, r2
 802              		.loc 1 848 19
 803 001e C1F88830 		str	r3, [r1, #136]
 849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 804              		.loc 1 849 1
 805 0022 00BF     		nop
 806 0024 1437     		adds	r7, r7, #20
 807              	.LCFI66:
 808              		.cfi_def_cfa_offset 4
 809 0026 BD46     		mov	sp, r7
 810              	.LCFI67:
 811              		.cfi_def_cfa_register 13
 812              		@ sp needed
 813 0028 5DF8047B 		ldr	r7, [sp], #4
 814              	.LCFI68:
 815              		.cfi_restore 7
 816              		.cfi_def_cfa_offset 0
 817 002c 7047     		bx	lr
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 30


 818              	.L43:
 819 002e 00BF     		.align	2
 820              	.L42:
 821 0030 00380240 		.word	1073887232
 822              		.cfi_endproc
 823              	.LFE141:
 825              		.section	.text.RCC_PLLSAICmd,"ax",%progbits
 826              		.align	1
 827              		.global	RCC_PLLSAICmd
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	RCC_PLLSAICmd:
 833              	.LFB142:
 850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLSAI. 
 854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices 
 856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *       
 857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The PLLSAI is disabled by hardware when entering STOP and STANDBY modes.  
 858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLSAI. This parameter can be: ENABLE or DISABLE.
 859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAICmd(FunctionalState NewState)
 862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 834              		.loc 1 862 1
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 8
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 839 0000 80B4     		push	{r7}
 840              	.LCFI69:
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 7, -4
 843 0002 83B0     		sub	sp, sp, #12
 844              	.LCFI70:
 845              		.cfi_def_cfa_offset 16
 846 0004 00AF     		add	r7, sp, #0
 847              	.LCFI71:
 848              		.cfi_def_cfa_register 7
 849 0006 0346     		mov	r3, r0
 850 0008 FB71     		strb	r3, [r7, #7]
 863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLSAION_BB = (uint32_t)NewState;
 851              		.loc 1 865 3
 852 000a 044A     		ldr	r2, .L45
 853              		.loc 1 865 39
 854 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 855              		.loc 1 865 37
 856 000e 1360     		str	r3, [r2]
 866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 857              		.loc 1 866 1
 858 0010 00BF     		nop
 859 0012 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 31


 860              	.LCFI72:
 861              		.cfi_def_cfa_offset 4
 862 0014 BD46     		mov	sp, r7
 863              	.LCFI73:
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 0016 5DF8047B 		ldr	r7, [sp], #4
 867              	.LCFI74:
 868              		.cfi_restore 7
 869              		.cfi_def_cfa_offset 0
 870 001a 7047     		bx	lr
 871              	.L46:
 872              		.align	2
 873              	.L45:
 874 001c 70004742 		.word	1111949424
 875              		.cfi_endproc
 876              	.LFE142:
 878              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 879              		.align	1
 880              		.global	RCC_ClockSecuritySystemCmd
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	RCC_ClockSecuritySystemCmd:
 886              	.LFB143:
 867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 887              		.loc 1 880 1
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 8
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892 0000 80B4     		push	{r7}
 893              	.LCFI75:
 894              		.cfi_def_cfa_offset 4
 895              		.cfi_offset 7, -4
 896 0002 83B0     		sub	sp, sp, #12
 897              	.LCFI76:
 898              		.cfi_def_cfa_offset 16
 899 0004 00AF     		add	r7, sp, #0
 900              	.LCFI77:
 901              		.cfi_def_cfa_register 7
 902 0006 0346     		mov	r3, r0
 903 0008 FB71     		strb	r3, [r7, #7]
 881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 32


 882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 904              		.loc 1 883 3
 905 000a 044A     		ldr	r2, .L48
 906              		.loc 1 883 36
 907 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 908              		.loc 1 883 34
 909 000e 1360     		str	r3, [r2]
 884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 910              		.loc 1 884 1
 911 0010 00BF     		nop
 912 0012 0C37     		adds	r7, r7, #12
 913              	.LCFI78:
 914              		.cfi_def_cfa_offset 4
 915 0014 BD46     		mov	sp, r7
 916              	.LCFI79:
 917              		.cfi_def_cfa_register 13
 918              		@ sp needed
 919 0016 5DF8047B 		ldr	r7, [sp], #4
 920              	.LCFI80:
 921              		.cfi_restore 7
 922              		.cfi_def_cfa_offset 0
 923 001a 7047     		bx	lr
 924              	.L49:
 925              		.align	2
 926              	.L48:
 927 001c 4C004742 		.word	1111949388
 928              		.cfi_endproc
 929              	.LFE143:
 931              		.section	.text.RCC_MCO1Config,"ax",%progbits
 932              		.align	1
 933              		.global	RCC_MCO1Config
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 938              	RCC_MCO1Config:
 939              	.LFB144:
 885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8).
 888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Source: specifies the clock source to output.
 890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSI: HSI clock selected as MCO1 source
 892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_LSE: LSE clock selected as MCO1 source
 893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSE: HSE clock selected as MCO1 source
 894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_PLLCLK: main PLL clock selected as MCO1 source
 895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Div: specifies the MCO1 prescaler.
 896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_1: no division applied to MCO1 clock
 898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_2: division by 2 applied to MCO1 clock
 899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_3: division by 3 applied to MCO1 clock
 900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_4: division by 4 applied to MCO1 clock
 901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_5: division by 5 applied to MCO1 clock
 902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO1Config(uint32_t RCC_MCO1Source, uint32_t RCC_MCO1Div)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 33


 905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 940              		.loc 1 905 1
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 16
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945 0000 80B4     		push	{r7}
 946              	.LCFI81:
 947              		.cfi_def_cfa_offset 4
 948              		.cfi_offset 7, -4
 949 0002 85B0     		sub	sp, sp, #20
 950              	.LCFI82:
 951              		.cfi_def_cfa_offset 24
 952 0004 00AF     		add	r7, sp, #0
 953              	.LCFI83:
 954              		.cfi_def_cfa_register 7
 955 0006 7860     		str	r0, [r7, #4]
 956 0008 3960     		str	r1, [r7]
 906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 957              		.loc 1 906 12
 958 000a 0023     		movs	r3, #0
 959 000c FB60     		str	r3, [r7, #12]
 907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCO1Source));
 910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1DIV(RCC_MCO1Div));  
 911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 960              		.loc 1 912 15
 961 000e 0B4B     		ldr	r3, .L51
 962              		.loc 1 912 10
 963 0010 9B68     		ldr	r3, [r3, #8]
 964 0012 FB60     		str	r3, [r7, #12]
 913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear MCO1[1:0] and MCO1PRE[2:0] bits */
 915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO1_RESET_MASK;
 965              		.loc 1 915 10
 966 0014 FB68     		ldr	r3, [r7, #12]
 967 0016 23F0EC63 		bic	r3, r3, #123731968
 968 001a FB60     		str	r3, [r7, #12]
 916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Select MCO1 clock source and prescaler */
 918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO1Source | RCC_MCO1Div;
 969              		.loc 1 918 28
 970 001c 7A68     		ldr	r2, [r7, #4]
 971 001e 3B68     		ldr	r3, [r7]
 972 0020 1343     		orrs	r3, r3, r2
 973              		.loc 1 918 10
 974 0022 FA68     		ldr	r2, [r7, #12]
 975 0024 1343     		orrs	r3, r3, r2
 976 0026 FB60     		str	r3, [r7, #12]
 919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 977              		.loc 1 921 6
 978 0028 044A     		ldr	r2, .L51
 979              		.loc 1 921 13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 34


 980 002a FB68     		ldr	r3, [r7, #12]
 981 002c 9360     		str	r3, [r2, #8]
 922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_MCO1Cmd(ENABLE);
 925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 982              		.loc 1 926 1
 983 002e 00BF     		nop
 984 0030 1437     		adds	r7, r7, #20
 985              	.LCFI84:
 986              		.cfi_def_cfa_offset 4
 987 0032 BD46     		mov	sp, r7
 988              	.LCFI85:
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 0034 5DF8047B 		ldr	r7, [sp], #4
 992              	.LCFI86:
 993              		.cfi_restore 7
 994              		.cfi_def_cfa_offset 0
 995 0038 7047     		bx	lr
 996              	.L52:
 997 003a 00BF     		.align	2
 998              	.L51:
 999 003c 00380240 		.word	1073887232
 1000              		.cfi_endproc
 1001              	.LFE144:
 1003              		.section	.text.RCC_MCO2Config,"ax",%progbits
 1004              		.align	1
 1005              		.global	RCC_MCO2Config
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1010              	RCC_MCO2Config:
 1011              	.LFB145:
 927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO2 pin(PC9).
 930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PC9 should be configured in alternate function mode.
 931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Source: specifies the clock source to output.
 932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 933:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 934:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 935:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 936:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_HSE: HSE clock selected as MCO2 source
 937:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_PLLCLK: main PLL clock selected as MCO2 source
 938:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Div: specifies the MCO2 prescaler.
 939:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 940:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_1: no division applied to MCO2 clock
 941:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_2: division by 2 applied to MCO2 clock
 942:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_3: division by 3 applied to MCO2 clock
 943:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_4: division by 4 applied to MCO2 clock
 944:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_5: division by 5 applied to MCO2 clock
 945:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note  For STM32F410xx devices to output I2SCLK clock on MCO2 you should have
 946:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 947:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 948:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 35


 949:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO2Config(uint32_t RCC_MCO2Source, uint32_t RCC_MCO2Div)
 950:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1012              		.loc 1 950 1
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 16
 1015              		@ frame_needed = 1, uses_anonymous_args = 0
 1016              		@ link register save eliminated.
 1017 0000 80B4     		push	{r7}
 1018              	.LCFI87:
 1019              		.cfi_def_cfa_offset 4
 1020              		.cfi_offset 7, -4
 1021 0002 85B0     		sub	sp, sp, #20
 1022              	.LCFI88:
 1023              		.cfi_def_cfa_offset 24
 1024 0004 00AF     		add	r7, sp, #0
 1025              	.LCFI89:
 1026              		.cfi_def_cfa_register 7
 1027 0006 7860     		str	r0, [r7, #4]
 1028 0008 3960     		str	r1, [r7]
 951:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1029              		.loc 1 951 12
 1030 000a 0023     		movs	r3, #0
 1031 000c FB60     		str	r3, [r7, #12]
 952:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 953:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 954:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2SOURCE(RCC_MCO2Source));
 955:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2DIV(RCC_MCO2Div));
 956:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 957:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 1032              		.loc 1 957 15
 1033 000e 0B4B     		ldr	r3, .L54
 1034              		.loc 1 957 10
 1035 0010 9B68     		ldr	r3, [r3, #8]
 1036 0012 FB60     		str	r3, [r7, #12]
 958:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 959:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear MCO2 and MCO2PRE[2:0] bits */
 960:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO2_RESET_MASK;
 1037              		.loc 1 960 10
 1038 0014 FB68     		ldr	r3, [r7, #12]
 1039 0016 23F07843 		bic	r3, r3, #-134217728
 1040 001a FB60     		str	r3, [r7, #12]
 961:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 962:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Select MCO2 clock source and prescaler */
 963:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO2Source | RCC_MCO2Div;
 1041              		.loc 1 963 28
 1042 001c 7A68     		ldr	r2, [r7, #4]
 1043 001e 3B68     		ldr	r3, [r7]
 1044 0020 1343     		orrs	r3, r3, r2
 1045              		.loc 1 963 10
 1046 0022 FA68     		ldr	r2, [r7, #12]
 1047 0024 1343     		orrs	r3, r3, r2
 1048 0026 FB60     		str	r3, [r7, #12]
 964:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 965:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 966:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 1049              		.loc 1 966 6
 1050 0028 044A     		ldr	r2, .L54
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 36


 1051              		.loc 1 966 13
 1052 002a FB68     		ldr	r3, [r7, #12]
 1053 002c 9360     		str	r3, [r2, #8]
 967:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 968:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 969:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_MCO2Cmd(ENABLE);
 970:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 971:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1054              		.loc 1 971 1
 1055 002e 00BF     		nop
 1056 0030 1437     		adds	r7, r7, #20
 1057              	.LCFI90:
 1058              		.cfi_def_cfa_offset 4
 1059 0032 BD46     		mov	sp, r7
 1060              	.LCFI91:
 1061              		.cfi_def_cfa_register 13
 1062              		@ sp needed
 1063 0034 5DF8047B 		ldr	r7, [sp], #4
 1064              	.LCFI92:
 1065              		.cfi_restore 7
 1066              		.cfi_def_cfa_offset 0
 1067 0038 7047     		bx	lr
 1068              	.L55:
 1069 003a 00BF     		.align	2
 1070              	.L54:
 1071 003c 00380240 		.word	1073887232
 1072              		.cfi_endproc
 1073              	.LFE145:
 1075              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 1076              		.align	1
 1077              		.global	RCC_SYSCLKConfig
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1082              	RCC_SYSCLKConfig:
 1083              	.LFB146:
 972:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 973:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 974:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @}
 975:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 976:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 977:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group2 System AHB and APB busses clocks configuration functions
 978:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 979:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
 980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
 981:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
 982:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       ##### System, AHB and APB busses clocks configuration functions #####
 983:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
 984:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]
 985:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the System, AHB, APB1 and 
 986:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       APB2 busses clocks.
 987:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 988:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 989:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           HSE and PLL.
 990:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable 
 991:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped 
 992:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 37


 993:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           from AHB clock through configurable prescalers and used to clock 
 994:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           the peripherals mapped on these busses. You can use 
 995:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks.  
 996:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 997:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 998:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 999:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              from an external clock mapped on the I2S_CKIN pin. 
1000:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              You have to use RCC_I2SCLKConfig() function to configure this clock. 
1001:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
1002:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              divided by 2 to 31. You have to use RCC_RTCCLKConfig() and RCC_RTCCLKCmd()
1003:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              functions to configure this clock. 
1004:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
1005:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              to work correctly, while the SDIO require a frequency equal or lower than
1006:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              to 48. This clock is derived of the main PLL through PLLQ divider.
1007:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) IWDG clock which is always the LSI clock.
1008:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****        
1009:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F405xx/407xx and STM32F415xx/417xx devices, the maximum frequency 
1010:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz. Depending 
1011:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          on the device voltage range, the maximum frequency should be adapted accordingly:
1012:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1013:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1014:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1015:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1016:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1017:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1018:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1019:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1020:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1021:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1022:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1023:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1024:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
1025:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1026:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1027:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1028:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|150< HCLK <= 168|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1029:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1030:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1031:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1032:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |      NA        |154 < HCLK <= 168|140 < HCLK <= 160|
1033:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +---------------|----------------|----------------|-----------------|-----------------+
1034:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F42xxx/43xxx/469xx/479xx devices, the maximum frequency of the SYSCLK and HCLK i
1035:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           PCLK2 90 MHz and PCLK1 45 MHz. Depending on the device voltage range, the maximum 
1036:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1037:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1038:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1039:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1040:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1041:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1042:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1044:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1045:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1046:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1047:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1048:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1049:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 38


1050:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1051:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1052:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1053:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|120< HCLK <= 180|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1054:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1055:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1056:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1057:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |168< HCLK <= 180|154 < HCLK <= 176|140 < HCLK <= 160|
1058:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1059:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |8WS(9CPU cycle)|      NA        |      NA        |176 < HCLK <= 180|160 < HCLK <= 168|
1060:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1061:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****    
1062:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F401xx devices, the maximum frequency of the SYSCLK and HCLK is 84 MHz, 
1063:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           PCLK2 84 MHz and PCLK1 42 MHz. Depending on the device voltage range, the maximum 
1064:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1065:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1066:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1067:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1068:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1069:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1070:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1071:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1072:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1073:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1074:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1075:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 84 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1076:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1077:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|      NA        |72 < HCLK <= 84 |66 < HCLK <= 84  |60 < HCLK <= 80  |
1078:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1079:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |      NA        |      NA         |80 < HCLK <= 84  |
1080:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1081:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1082:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F410xx/STM32F411xE devices, the maximum frequency of the SYSCLK and HCLK is 100 
1083:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           PCLK2 100 MHz and PCLK1 50 MHz. Depending on the device voltage range, the maximum 
1084:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1085:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1086:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1087:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1088:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1089:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1090:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1091:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
1092:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1093:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 64 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
1094:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1095:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|64 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
1096:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1097:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 100|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
1098:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1099:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 100|72 < HCLK <= 90  |64 < HCLK <= 80  |
1100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|      NA        |       NA       |90 < HCLK <= 100 |80 < HCLK <= 96  |
1102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |       NA       |        NA       |96 < HCLK <= 100 |
1104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       -@- On STM32F405xx/407xx and STM32F415xx/417xx devices: 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 39


1107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS = '0', the maximum value of fHCLK = 144MHz. 
1108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS = '1', the maximum value of fHCLK = 168MHz. 
1109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           [..] 
1110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           On STM32F42xxx/43xxx/469xx/479xx devices:
1111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 120MHz.
1112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 144MHz.
1113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11', the maximum value of f  is 168MHz 
1114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           [..]  
1115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           On STM32F401x devices:
1116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 64MHz.
1117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 84MHz.
1118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           On STM32F410xx/STM32F411xE devices:
1119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01' the maximum value of fHCLK is 64MHz.
1120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10' the maximum value of fHCLK is 84MHz.
1121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11' the maximum value of fHCLK is 100MHz.
1122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****        You can use PWR_MainRegulatorModeConfig() function to control VOS bits.
1124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @endverbatim
1126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
1127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
1131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
1132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
1133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
1134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         (if the Clock Security System CSS is enabled).
1135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked). 
1137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         occur when the clock source will be ready. 
1139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         You can use RCC_GetSYSCLKSource() function to know which clock is
1140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         currently used as system clock source. 
1141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
1142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSI: HSI selected as system clock source
1144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSE: HSE selected as system clock source
1145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source (RCC_SYSCLKSource_
1146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLRCLK: PLL R selected as system clock source only for STM32F
1147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
1150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1084              		.loc 1 1150 1
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 16
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089 0000 80B4     		push	{r7}
 1090              	.LCFI93:
 1091              		.cfi_def_cfa_offset 4
 1092              		.cfi_offset 7, -4
 1093 0002 85B0     		sub	sp, sp, #20
 1094              	.LCFI94:
 1095              		.cfi_def_cfa_offset 24
 1096 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 40


 1097              	.LCFI95:
 1098              		.cfi_def_cfa_register 7
 1099 0006 7860     		str	r0, [r7, #4]
1151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1100              		.loc 1 1151 12
 1101 0008 0023     		movs	r3, #0
 1102 000a FB60     		str	r3, [r7, #12]
1152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
1155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 1103              		.loc 1 1156 15
 1104 000c 094B     		ldr	r3, .L57
 1105              		.loc 1 1156 10
 1106 000e 9B68     		ldr	r3, [r3, #8]
 1107 0010 FB60     		str	r3, [r7, #12]
1157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear SW[1:0] bits */
1159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 1108              		.loc 1 1159 10
 1109 0012 FB68     		ldr	r3, [r7, #12]
 1110 0014 23F00303 		bic	r3, r3, #3
 1111 0018 FB60     		str	r3, [r7, #12]
1160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
1162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 1112              		.loc 1 1162 10
 1113 001a FA68     		ldr	r2, [r7, #12]
 1114 001c 7B68     		ldr	r3, [r7, #4]
 1115 001e 1343     		orrs	r3, r3, r2
 1116 0020 FB60     		str	r3, [r7, #12]
1163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 1117              		.loc 1 1165 6
 1118 0022 044A     		ldr	r2, .L57
 1119              		.loc 1 1165 13
 1120 0024 FB68     		ldr	r3, [r7, #12]
 1121 0026 9360     		str	r3, [r2, #8]
1166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1122              		.loc 1 1166 1
 1123 0028 00BF     		nop
 1124 002a 1437     		adds	r7, r7, #20
 1125              	.LCFI96:
 1126              		.cfi_def_cfa_offset 4
 1127 002c BD46     		mov	sp, r7
 1128              	.LCFI97:
 1129              		.cfi_def_cfa_register 13
 1130              		@ sp needed
 1131 002e 5DF8047B 		ldr	r7, [sp], #4
 1132              	.LCFI98:
 1133              		.cfi_restore 7
 1134              		.cfi_def_cfa_offset 0
 1135 0032 7047     		bx	lr
 1136              	.L58:
 1137              		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 41


 1138              	.L57:
 1139 0034 00380240 		.word	1073887232
 1140              		.cfi_endproc
 1141              	.LFE146:
 1143              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 1144              		.align	1
 1145              		.global	RCC_GetSYSCLKSource
 1146              		.syntax unified
 1147              		.thumb
 1148              		.thumb_func
 1150              	RCC_GetSYSCLKSource:
 1151              	.LFB147:
1167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Returns the clock source used as system clock.
1170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
1171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one
1172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of the following:
1173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x00: HSI used as system clock
1174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x04: HSE used as system clock
1175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x08: PLL used as system clock (PLL P for STM32F446xx devices)
1176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x0C: PLL R used as system clock (only for STM32F412xG, STM32F413_423xx and STM3
1177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
1179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1152              		.loc 1 1179 1
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157 0000 80B4     		push	{r7}
 1158              	.LCFI99:
 1159              		.cfi_def_cfa_offset 4
 1160              		.cfi_offset 7, -4
 1161 0002 00AF     		add	r7, sp, #0
 1162              	.LCFI100:
 1163              		.cfi_def_cfa_register 7
1180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 1164              		.loc 1 1180 24
 1165 0004 054B     		ldr	r3, .L61
 1166 0006 9B68     		ldr	r3, [r3, #8]
 1167              		.loc 1 1180 11
 1168 0008 DBB2     		uxtb	r3, r3
 1169 000a 03F00C03 		and	r3, r3, #12
 1170 000e DBB2     		uxtb	r3, r3
1181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1171              		.loc 1 1181 1
 1172 0010 1846     		mov	r0, r3
 1173 0012 BD46     		mov	sp, r7
 1174              	.LCFI101:
 1175              		.cfi_def_cfa_register 13
 1176              		@ sp needed
 1177 0014 5DF8047B 		ldr	r7, [sp], #4
 1178              	.LCFI102:
 1179              		.cfi_restore 7
 1180              		.cfi_def_cfa_offset 0
 1181 0018 7047     		bx	lr
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 42


 1182              	.L62:
 1183 001a 00BF     		.align	2
 1184              	.L61:
 1185 001c 00380240 		.word	1073887232
 1186              		.cfi_endproc
 1187              	.LFE147:
 1189              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 1190              		.align	1
 1191              		.global	RCC_HCLKConfig
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1196              	RCC_HCLKConfig:
 1197              	.LFB148:
1182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
1185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         these bits to ensure that HCLK not exceed the maximum allowed frequency
1187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         (for more details refer to section above
1188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           "CPU, AHB and APB busses clocks configuration functions")
1189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
1190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the system clock (SYSCLK).
1191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
1193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
1194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
1195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
1196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
1197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
1198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
1199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
1200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
1201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
1204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1198              		.loc 1 1204 1
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 16
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203 0000 80B4     		push	{r7}
 1204              	.LCFI103:
 1205              		.cfi_def_cfa_offset 4
 1206              		.cfi_offset 7, -4
 1207 0002 85B0     		sub	sp, sp, #20
 1208              	.LCFI104:
 1209              		.cfi_def_cfa_offset 24
 1210 0004 00AF     		add	r7, sp, #0
 1211              	.LCFI105:
 1212              		.cfi_def_cfa_register 7
 1213 0006 7860     		str	r0, [r7, #4]
1205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1214              		.loc 1 1205 12
 1215 0008 0023     		movs	r3, #0
 1216 000a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 43


1206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
1209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 1217              		.loc 1 1210 15
 1218 000c 094B     		ldr	r3, .L64
 1219              		.loc 1 1210 10
 1220 000e 9B68     		ldr	r3, [r3, #8]
 1221 0010 FB60     		str	r3, [r7, #12]
1211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear HPRE[3:0] bits */
1213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 1222              		.loc 1 1213 10
 1223 0012 FB68     		ldr	r3, [r7, #12]
 1224 0014 23F0F003 		bic	r3, r3, #240
 1225 0018 FB60     		str	r3, [r7, #12]
1214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
1216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLK;
 1226              		.loc 1 1216 10
 1227 001a FA68     		ldr	r2, [r7, #12]
 1228 001c 7B68     		ldr	r3, [r7, #4]
 1229 001e 1343     		orrs	r3, r3, r2
 1230 0020 FB60     		str	r3, [r7, #12]
1217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 1231              		.loc 1 1219 6
 1232 0022 044A     		ldr	r2, .L64
 1233              		.loc 1 1219 13
 1234 0024 FB68     		ldr	r3, [r7, #12]
 1235 0026 9360     		str	r3, [r2, #8]
1220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1236              		.loc 1 1220 1
 1237 0028 00BF     		nop
 1238 002a 1437     		adds	r7, r7, #20
 1239              	.LCFI106:
 1240              		.cfi_def_cfa_offset 4
 1241 002c BD46     		mov	sp, r7
 1242              	.LCFI107:
 1243              		.cfi_def_cfa_register 13
 1244              		@ sp needed
 1245 002e 5DF8047B 		ldr	r7, [sp], #4
 1246              	.LCFI108:
 1247              		.cfi_restore 7
 1248              		.cfi_def_cfa_offset 0
 1249 0032 7047     		bx	lr
 1250              	.L65:
 1251              		.align	2
 1252              	.L64:
 1253 0034 00380240 		.word	1073887232
 1254              		.cfi_endproc
 1255              	.LFE148:
 1257              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 1258              		.align	1
 1259              		.global	RCC_PCLK1Config
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 44


 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	RCC_PCLK1Config:
 1265              	.LFB149:
1221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
1224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
1225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
1226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB1 clock = HCLK
1228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB1 clock = HCLK/2
1229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB1 clock = HCLK/4
1230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB1 clock = HCLK/8
1231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
1232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
1235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1266              		.loc 1 1235 1
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 16
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270              		@ link register save eliminated.
 1271 0000 80B4     		push	{r7}
 1272              	.LCFI109:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 7, -4
 1275 0002 85B0     		sub	sp, sp, #20
 1276              	.LCFI110:
 1277              		.cfi_def_cfa_offset 24
 1278 0004 00AF     		add	r7, sp, #0
 1279              	.LCFI111:
 1280              		.cfi_def_cfa_register 7
 1281 0006 7860     		str	r0, [r7, #4]
1236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1282              		.loc 1 1236 12
 1283 0008 0023     		movs	r3, #0
 1284 000a FB60     		str	r3, [r7, #12]
1237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
1240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 1285              		.loc 1 1241 15
 1286 000c 094B     		ldr	r3, .L67
 1287              		.loc 1 1241 10
 1288 000e 9B68     		ldr	r3, [r3, #8]
 1289 0010 FB60     		str	r3, [r7, #12]
1242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PPRE1[2:0] bits */
1244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE1;
 1290              		.loc 1 1244 10
 1291 0012 FB68     		ldr	r3, [r7, #12]
 1292 0014 23F4E053 		bic	r3, r3, #7168
 1293 0018 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 45


1245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
1247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK;
 1294              		.loc 1 1247 10
 1295 001a FA68     		ldr	r2, [r7, #12]
 1296 001c 7B68     		ldr	r3, [r7, #4]
 1297 001e 1343     		orrs	r3, r3, r2
 1298 0020 FB60     		str	r3, [r7, #12]
1248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 1299              		.loc 1 1250 6
 1300 0022 044A     		ldr	r2, .L67
 1301              		.loc 1 1250 13
 1302 0024 FB68     		ldr	r3, [r7, #12]
 1303 0026 9360     		str	r3, [r2, #8]
1251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1304              		.loc 1 1251 1
 1305 0028 00BF     		nop
 1306 002a 1437     		adds	r7, r7, #20
 1307              	.LCFI112:
 1308              		.cfi_def_cfa_offset 4
 1309 002c BD46     		mov	sp, r7
 1310              	.LCFI113:
 1311              		.cfi_def_cfa_register 13
 1312              		@ sp needed
 1313 002e 5DF8047B 		ldr	r7, [sp], #4
 1314              	.LCFI114:
 1315              		.cfi_restore 7
 1316              		.cfi_def_cfa_offset 0
 1317 0032 7047     		bx	lr
 1318              	.L68:
 1319              		.align	2
 1320              	.L67:
 1321 0034 00380240 		.word	1073887232
 1322              		.cfi_endproc
 1323              	.LFE149:
 1325              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 1326              		.align	1
 1327              		.global	RCC_PCLK2Config
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1332              	RCC_PCLK2Config:
 1333              	.LFB150:
1252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
1255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
1256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
1257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB2 clock = HCLK
1259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB2 clock = HCLK/2
1260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB2 clock = HCLK/4
1261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB2 clock = HCLK/8
1262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
1263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 46


1264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
1266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1334              		.loc 1 1266 1
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 16
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 1339 0000 80B4     		push	{r7}
 1340              	.LCFI115:
 1341              		.cfi_def_cfa_offset 4
 1342              		.cfi_offset 7, -4
 1343 0002 85B0     		sub	sp, sp, #20
 1344              	.LCFI116:
 1345              		.cfi_def_cfa_offset 24
 1346 0004 00AF     		add	r7, sp, #0
 1347              	.LCFI117:
 1348              		.cfi_def_cfa_register 7
 1349 0006 7860     		str	r0, [r7, #4]
1267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1350              		.loc 1 1267 12
 1351 0008 0023     		movs	r3, #0
 1352 000a FB60     		str	r3, [r7, #12]
1268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
1271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 1353              		.loc 1 1272 15
 1354 000c 0A4B     		ldr	r3, .L70
 1355              		.loc 1 1272 10
 1356 000e 9B68     		ldr	r3, [r3, #8]
 1357 0010 FB60     		str	r3, [r7, #12]
1273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PPRE2[2:0] bits */
1275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE2;
 1358              		.loc 1 1275 10
 1359 0012 FB68     		ldr	r3, [r7, #12]
 1360 0014 23F46043 		bic	r3, r3, #57344
 1361 0018 FB60     		str	r3, [r7, #12]
1276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
1278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 1362              		.loc 1 1278 22
 1363 001a 7B68     		ldr	r3, [r7, #4]
 1364 001c DB00     		lsls	r3, r3, #3
 1365              		.loc 1 1278 10
 1366 001e FA68     		ldr	r2, [r7, #12]
 1367 0020 1343     		orrs	r3, r3, r2
 1368 0022 FB60     		str	r3, [r7, #12]
1279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 1369              		.loc 1 1281 6
 1370 0024 044A     		ldr	r2, .L70
 1371              		.loc 1 1281 13
 1372 0026 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 47


 1373 0028 9360     		str	r3, [r2, #8]
1282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1374              		.loc 1 1282 1
 1375 002a 00BF     		nop
 1376 002c 1437     		adds	r7, r7, #20
 1377              	.LCFI118:
 1378              		.cfi_def_cfa_offset 4
 1379 002e BD46     		mov	sp, r7
 1380              	.LCFI119:
 1381              		.cfi_def_cfa_register 13
 1382              		@ sp needed
 1383 0030 5DF8047B 		ldr	r7, [sp], #4
 1384              	.LCFI120:
 1385              		.cfi_restore 7
 1386              		.cfi_def_cfa_offset 0
 1387 0034 7047     		bx	lr
 1388              	.L71:
 1389 0036 00BF     		.align	2
 1390              	.L70:
 1391 0038 00380240 		.word	1073887232
 1392              		.cfi_endproc
 1393              	.LFE150:
 1395              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 1396              		.align	1
 1397              		.global	RCC_GetClocksFreq
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1402              	RCC_GetClocksFreq:
 1403              	.LFB151:
1283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks; SYSCLK, HCLK, 
1286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PCLK1 and PCLK2.
1287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         constant and the selected clock source:
1291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**) 
1294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.         
1295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
1296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *               in voltage and temperature.
1298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
1299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
1300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                have wrong result.
1302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                
1303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         value for HSE crystal.
1305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
1307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          the clocks frequencies.
1308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *     
1309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used by the user application to compute the 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 48


1310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function
1312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         must be called to update the structure's field. Otherwise, any
1313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         configuration based on this function will be incorrect.
1314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
1315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
1318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1404              		.loc 1 1318 1
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 32
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408              		@ link register save eliminated.
 1409 0000 80B4     		push	{r7}
 1410              	.LCFI121:
 1411              		.cfi_def_cfa_offset 4
 1412              		.cfi_offset 7, -4
 1413 0002 89B0     		sub	sp, sp, #36
 1414              	.LCFI122:
 1415              		.cfi_def_cfa_offset 40
 1416 0004 00AF     		add	r7, sp, #0
 1417              	.LCFI123:
 1418              		.cfi_def_cfa_register 7
 1419 0006 7860     		str	r0, [r7, #4]
1319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 1420              		.loc 1 1319 12
 1421 0008 0023     		movs	r3, #0
 1422 000a BB61     		str	r3, [r7, #24]
 1423              		.loc 1 1319 21
 1424 000c 0023     		movs	r3, #0
 1425 000e 7B61     		str	r3, [r7, #20]
 1426              		.loc 1 1319 32
 1427 0010 0023     		movs	r3, #0
 1428 0012 FB61     		str	r3, [r7, #28]
 1429              		.loc 1 1319 44
 1430 0014 0223     		movs	r3, #2
 1431 0016 3B61     		str	r3, [r7, #16]
 1432              		.loc 1 1319 54
 1433 0018 0023     		movs	r3, #0
 1434 001a FB60     		str	r3, [r7, #12]
 1435              		.loc 1 1319 69
 1436 001c 0223     		movs	r3, #2
 1437 001e BB60     		str	r3, [r7, #8]
1320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)  
1321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t pllr = 2;
1322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 1438              		.loc 1 1325 12
 1439 0020 4A4B     		ldr	r3, .L80
 1440 0022 9B68     		ldr	r3, [r3, #8]
 1441              		.loc 1 1325 7
 1442 0024 03F00C03 		and	r3, r3, #12
 1443 0028 BB61     		str	r3, [r7, #24]
1326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 49


1327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   switch (tmp)
 1444              		.loc 1 1327 3
 1445 002a BB69     		ldr	r3, [r7, #24]
 1446 002c 082B     		cmp	r3, #8
 1447 002e 11D0     		beq	.L73
 1448 0030 BB69     		ldr	r3, [r7, #24]
 1449 0032 082B     		cmp	r3, #8
 1450 0034 44D8     		bhi	.L74
 1451 0036 BB69     		ldr	r3, [r7, #24]
 1452 0038 002B     		cmp	r3, #0
 1453 003a 03D0     		beq	.L75
 1454 003c BB69     		ldr	r3, [r7, #24]
 1455 003e 042B     		cmp	r3, #4
 1456 0040 04D0     		beq	.L76
 1457 0042 3DE0     		b	.L74
 1458              	.L75:
1328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x00:  /* HSI used as system clock source */
1330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1459              		.loc 1 1330 34
 1460 0044 7B68     		ldr	r3, [r7, #4]
 1461 0046 424A     		ldr	r2, .L80+4
 1462 0048 1A60     		str	r2, [r3]
1331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 1463              		.loc 1 1331 5
 1464 004a 3DE0     		b	.L77
 1465              	.L76:
1332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x04:  /* HSE used as system clock  source */
1333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1466              		.loc 1 1333 34
 1467 004c 7B68     		ldr	r3, [r7, #4]
 1468 004e 414A     		ldr	r2, .L80+8
 1469 0050 1A60     		str	r2, [r3]
1334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 1470              		.loc 1 1334 5
 1471 0052 39E0     		b	.L77
 1472              	.L73:
1335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x08:  /* PLL P used as system clock  source */
1336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLP
1339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     */    
1340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 1473              		.loc 1 1340 21
 1474 0054 3D4B     		ldr	r3, .L80
 1475 0056 5B68     		ldr	r3, [r3, #4]
 1476              		.loc 1 1340 53
 1477 0058 9B0D     		lsrs	r3, r3, #22
 1478              		.loc 1 1340 15
 1479 005a 03F00103 		and	r3, r3, #1
 1480 005e FB60     		str	r3, [r7, #12]
1341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1481              		.loc 1 1341 15
 1482 0060 3A4B     		ldr	r3, .L80
 1483 0062 5B68     		ldr	r3, [r3, #4]
 1484              		.loc 1 1341 10
 1485 0064 03F03F03 		and	r3, r3, #63
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 50


 1486 0068 BB60     		str	r3, [r7, #8]
1342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
 1487              		.loc 1 1343 8
 1488 006a FB68     		ldr	r3, [r7, #12]
 1489 006c 002B     		cmp	r3, #0
 1490 006e 0CD0     		beq	.L78
1344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 1491              		.loc 1 1346 27
 1492 0070 384A     		ldr	r2, .L80+8
 1493 0072 BB68     		ldr	r3, [r7, #8]
 1494 0074 B2FBF3F3 		udiv	r3, r2, r3
 1495              		.loc 1 1346 42
 1496 0078 344A     		ldr	r2, .L80
 1497 007a 5268     		ldr	r2, [r2, #4]
 1498              		.loc 1 1346 72
 1499 007c 9209     		lsrs	r2, r2, #6
 1500 007e C2F30802 		ubfx	r2, r2, #0, #9
 1501              		.loc 1 1346 14
 1502 0082 02FB03F3 		mul	r3, r2, r3
 1503 0086 FB61     		str	r3, [r7, #28]
 1504 0088 0BE0     		b	.L79
 1505              	.L78:
1347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
1348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     else
1349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 1506              		.loc 1 1351 27
 1507 008a 314A     		ldr	r2, .L80+4
 1508 008c BB68     		ldr	r3, [r7, #8]
 1509 008e B2FBF3F3 		udiv	r3, r2, r3
 1510              		.loc 1 1351 42
 1511 0092 2E4A     		ldr	r2, .L80
 1512 0094 5268     		ldr	r2, [r2, #4]
 1513              		.loc 1 1351 72
 1514 0096 9209     		lsrs	r2, r2, #6
 1515 0098 C2F30802 		ubfx	r2, r2, #0, #9
 1516              		.loc 1 1351 14
 1517 009c 02FB03F3 		mul	r3, r2, r3
 1518 00a0 FB61     		str	r3, [r7, #28]
 1519              	.L79:
1352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
1353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 1520              		.loc 1 1354 18
 1521 00a2 2A4B     		ldr	r3, .L80
 1522 00a4 5B68     		ldr	r3, [r3, #4]
 1523              		.loc 1 1354 48
 1524 00a6 1B0C     		lsrs	r3, r3, #16
 1525 00a8 03F00303 		and	r3, r3, #3
 1526              		.loc 1 1354 54
 1527 00ac 0133     		adds	r3, r3, #1
 1528              		.loc 1 1354 10
 1529 00ae 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 51


 1530 00b0 3B61     		str	r3, [r7, #16]
1355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 1531              		.loc 1 1355 42
 1532 00b2 FA69     		ldr	r2, [r7, #28]
 1533 00b4 3B69     		ldr	r3, [r7, #16]
 1534 00b6 B2FBF3F2 		udiv	r2, r2, r3
 1535              		.loc 1 1355 34
 1536 00ba 7B68     		ldr	r3, [r7, #4]
 1537 00bc 1A60     		str	r2, [r3]
1356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 1538              		.loc 1 1356 5
 1539 00be 03E0     		b	.L77
 1540              	.L74:
1357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
1359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x0C:  /* PLL R used as system clock  source */
1360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     */    
1363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
1364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
1367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
1371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     else
1372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
1375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
1376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >>28) + 1 ) *2;
1378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllr;    
1379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
1380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   default:
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1541              		.loc 1 1383 34
 1542 00c0 7B68     		ldr	r3, [r7, #4]
 1543 00c2 234A     		ldr	r2, .L80+4
 1544 00c4 1A60     		str	r2, [r3]
1384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 1545              		.loc 1 1384 5
 1546 00c6 00BF     		nop
 1547              	.L77:
1385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get HCLK prescaler */
1389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 1548              		.loc 1 1389 12
 1549 00c8 204B     		ldr	r3, .L80
 1550 00ca 9B68     		ldr	r3, [r3, #8]
 1551              		.loc 1 1389 7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 52


 1552 00cc 03F0F003 		and	r3, r3, #240
 1553 00d0 BB61     		str	r3, [r7, #24]
1390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 4;
 1554              		.loc 1 1390 7
 1555 00d2 BB69     		ldr	r3, [r7, #24]
 1556 00d4 1B09     		lsrs	r3, r3, #4
 1557 00d6 BB61     		str	r3, [r7, #24]
1391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1558              		.loc 1 1391 27
 1559 00d8 1F4A     		ldr	r2, .L80+12
 1560 00da BB69     		ldr	r3, [r7, #24]
 1561 00dc 1344     		add	r3, r3, r2
 1562 00de 1B78     		ldrb	r3, [r3]
 1563 00e0 DBB2     		uxtb	r3, r3
 1564              		.loc 1 1391 9
 1565 00e2 7B61     		str	r3, [r7, #20]
1392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* HCLK clock frequency */
1393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1566              		.loc 1 1393 42
 1567 00e4 7B68     		ldr	r3, [r7, #4]
 1568 00e6 1A68     		ldr	r2, [r3]
 1569              		.loc 1 1393 61
 1570 00e8 7B69     		ldr	r3, [r7, #20]
 1571 00ea DA40     		lsrs	r2, r2, r3
 1572              		.loc 1 1393 30
 1573 00ec 7B68     		ldr	r3, [r7, #4]
 1574 00ee 5A60     		str	r2, [r3, #4]
1394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get PCLK1 prescaler */
1396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 1575              		.loc 1 1396 12
 1576 00f0 164B     		ldr	r3, .L80
 1577 00f2 9B68     		ldr	r3, [r3, #8]
 1578              		.loc 1 1396 7
 1579 00f4 03F4E053 		and	r3, r3, #7168
 1580 00f8 BB61     		str	r3, [r7, #24]
1397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 10;
 1581              		.loc 1 1397 7
 1582 00fa BB69     		ldr	r3, [r7, #24]
 1583 00fc 9B0A     		lsrs	r3, r3, #10
 1584 00fe BB61     		str	r3, [r7, #24]
1398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1585              		.loc 1 1398 27
 1586 0100 154A     		ldr	r2, .L80+12
 1587 0102 BB69     		ldr	r3, [r7, #24]
 1588 0104 1344     		add	r3, r3, r2
 1589 0106 1B78     		ldrb	r3, [r3]
 1590 0108 DBB2     		uxtb	r3, r3
 1591              		.loc 1 1398 9
 1592 010a 7B61     		str	r3, [r7, #20]
1399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* PCLK1 clock frequency */
1400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1593              		.loc 1 1400 43
 1594 010c 7B68     		ldr	r3, [r7, #4]
 1595 010e 5A68     		ldr	r2, [r3, #4]
 1596              		.loc 1 1400 60
 1597 0110 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 53


 1598 0112 DA40     		lsrs	r2, r2, r3
 1599              		.loc 1 1400 31
 1600 0114 7B68     		ldr	r3, [r7, #4]
 1601 0116 9A60     		str	r2, [r3, #8]
1401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get PCLK2 prescaler */
1403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 1602              		.loc 1 1403 12
 1603 0118 0C4B     		ldr	r3, .L80
 1604 011a 9B68     		ldr	r3, [r3, #8]
 1605              		.loc 1 1403 7
 1606 011c 03F46043 		and	r3, r3, #57344
 1607 0120 BB61     		str	r3, [r7, #24]
1404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 13;
 1608              		.loc 1 1404 7
 1609 0122 BB69     		ldr	r3, [r7, #24]
 1610 0124 5B0B     		lsrs	r3, r3, #13
 1611 0126 BB61     		str	r3, [r7, #24]
1405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1612              		.loc 1 1405 27
 1613 0128 0B4A     		ldr	r2, .L80+12
 1614 012a BB69     		ldr	r3, [r7, #24]
 1615 012c 1344     		add	r3, r3, r2
 1616 012e 1B78     		ldrb	r3, [r3]
 1617 0130 DBB2     		uxtb	r3, r3
 1618              		.loc 1 1405 9
 1619 0132 7B61     		str	r3, [r7, #20]
1406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* PCLK2 clock frequency */
1407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1620              		.loc 1 1407 43
 1621 0134 7B68     		ldr	r3, [r7, #4]
 1622 0136 5A68     		ldr	r2, [r3, #4]
 1623              		.loc 1 1407 60
 1624 0138 7B69     		ldr	r3, [r7, #20]
 1625 013a DA40     		lsrs	r2, r2, r3
 1626              		.loc 1 1407 31
 1627 013c 7B68     		ldr	r3, [r7, #4]
 1628 013e DA60     		str	r2, [r3, #12]
1408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1629              		.loc 1 1408 1
 1630 0140 00BF     		nop
 1631 0142 2437     		adds	r7, r7, #36
 1632              	.LCFI124:
 1633              		.cfi_def_cfa_offset 4
 1634 0144 BD46     		mov	sp, r7
 1635              	.LCFI125:
 1636              		.cfi_def_cfa_register 13
 1637              		@ sp needed
 1638 0146 5DF8047B 		ldr	r7, [sp], #4
 1639              	.LCFI126:
 1640              		.cfi_restore 7
 1641              		.cfi_def_cfa_offset 0
 1642 014a 7047     		bx	lr
 1643              	.L81:
 1644              		.align	2
 1645              	.L80:
 1646 014c 00380240 		.word	1073887232
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 54


 1647 0150 0024F400 		.word	16000000
 1648 0154 00127A00 		.word	8000000
 1649 0158 00000000 		.word	APBAHBPrescTable
 1650              		.cfi_endproc
 1651              	.LFE151:
 1653              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1654              		.align	1
 1655              		.global	RCC_RTCCLKConfig
 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1660              	RCC_RTCCLKConfig:
 1661              	.LFB152:
1409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @}
1412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
1415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
1416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
1417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
1418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
1419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****               ##### Peripheral clocks configuration functions #####
1420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
1421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..] This section provide functions allowing to configure the Peripheral clocks. 
1422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) The RTC clock which is derived from the LSI, LSE or HSE clock divided 
1424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           by 2 to 31.
1425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      
1426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) After restart from Reset or wakeup from STANDBY, all peripherals are off
1427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           except internal SRAM, Flash and JTAG. Before to start using a peripheral 
1428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           you have to enable its interface clock. You can do this using 
1429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           RCC_AHBPeriphClockCmd(), RCC_APB2PeriphClockCmd() and RCC_APB1PeriphClockCmd() functions.
1430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) To reset the peripherals configuration (to the default state after device reset)
1432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() and 
1433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           RCC_APB1PeriphResetCmd() functions.
1434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      
1435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) To further reduce power consumption in SLEEP mode the peripheral clocks 
1436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           can be disabled prior to executing the WFI or WFE instructions. 
1437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           You can do this using RCC_AHBPeriphClockLPModeCmd(), 
1438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           RCC_APB2PeriphClockLPModeCmd() and RCC_APB1PeriphClockLPModeCmd() functions.  
1439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @endverbatim
1441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
1442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
1446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   As the RTC clock configuration bits are in the Backup domain and write
1447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         access is denied to this domain after reset, you have to enable write
1448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         access using PWR_BackupAccessCmd(ENABLE) function before to configure
1449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the RTC clock source (to be done once after reset).    
1450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Once the RTC clock is configured it can't be changed unless the  
1451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         Backup domain is reset using RCC_BackupResetCmd() function, or by
1452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         a Power On Reset (POR).
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 55


1453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
1454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
1455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
1457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
1458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_HSE_Divx: HSE clock divided by x selected
1459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                            as RTC clock, where x:[2,31]
1460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
1461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If the LSE or LSI is used as RTC clock source, the RTC continues to
1462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         work in STOP and STANDBY modes, and can be used as wakeup source.
1463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         However, when the HSE clock is used as RTC clock source, the RTC
1464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         cannot be used in STOP and STANDBY modes.    
1465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The maximum input clock frequency for RTC is 1MHz (when using HSE as
1466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RTC clock source).
1467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
1468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
1471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1662              		.loc 1 1471 1
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 16
 1665              		@ frame_needed = 1, uses_anonymous_args = 0
 1666              		@ link register save eliminated.
 1667 0000 80B4     		push	{r7}
 1668              	.LCFI127:
 1669              		.cfi_def_cfa_offset 4
 1670              		.cfi_offset 7, -4
 1671 0002 85B0     		sub	sp, sp, #20
 1672              	.LCFI128:
 1673              		.cfi_def_cfa_offset 24
 1674 0004 00AF     		add	r7, sp, #0
 1675              	.LCFI129:
 1676              		.cfi_def_cfa_register 7
 1677 0006 7860     		str	r0, [r7, #4]
1472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1678              		.loc 1 1472 12
 1679 0008 0023     		movs	r3, #0
 1680 000a FB60     		str	r3, [r7, #12]
1473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
1476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if ((RCC_RTCCLKSource & 0x00000300) == 0x00000300)
 1681              		.loc 1 1477 25
 1682 000c 7B68     		ldr	r3, [r7, #4]
 1683 000e 03F44073 		and	r3, r3, #768
 1684              		.loc 1 1477 6
 1685 0012 B3F5407F 		cmp	r3, #768
 1686 0016 11D1     		bne	.L83
1478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   { /* If HSE is selected as RTC clock source, configure HSE division factor for RTC clock */
1479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     tmpreg = RCC->CFGR;
 1687              		.loc 1 1479 17
 1688 0018 0F4B     		ldr	r3, .L84
 1689              		.loc 1 1479 12
 1690 001a 9B68     		ldr	r3, [r3, #8]
 1691 001c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 56


1480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear RTCPRE[4:0] bits */
1482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     tmpreg &= ~RCC_CFGR_RTCPRE;
 1692              		.loc 1 1482 12
 1693 001e FB68     		ldr	r3, [r7, #12]
 1694 0020 23F4F813 		bic	r3, r3, #2031616
 1695 0024 FB60     		str	r3, [r7, #12]
1483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Configure HSE division factor for RTC clock */
1485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     tmpreg |= (RCC_RTCCLKSource & 0xFFFFCFF);
 1696              		.loc 1 1485 33
 1697 0026 7B68     		ldr	r3, [r7, #4]
 1698 0028 23F07043 		bic	r3, r3, #-268435456
 1699 002c 23F44073 		bic	r3, r3, #768
 1700              		.loc 1 1485 12
 1701 0030 FA68     		ldr	r2, [r7, #12]
 1702 0032 1343     		orrs	r3, r3, r2
 1703 0034 FB60     		str	r3, [r7, #12]
1486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Store the new value */
1488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->CFGR = tmpreg;
 1704              		.loc 1 1488 8
 1705 0036 084A     		ldr	r2, .L84
 1706              		.loc 1 1488 15
 1707 0038 FB68     		ldr	r3, [r7, #12]
 1708 003a 9360     		str	r3, [r2, #8]
 1709              	.L83:
1489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Select the RTC clock source */
1492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->BDCR |= (RCC_RTCCLKSource & 0x00000FFF);
 1710              		.loc 1 1492 13
 1711 003c 064B     		ldr	r3, .L84
 1712 003e 1A6F     		ldr	r2, [r3, #112]
 1713              		.loc 1 1492 34
 1714 0040 7B68     		ldr	r3, [r7, #4]
 1715 0042 C3F30B03 		ubfx	r3, r3, #0, #12
 1716              		.loc 1 1492 13
 1717 0046 0449     		ldr	r1, .L84
 1718 0048 1343     		orrs	r3, r3, r2
 1719 004a 0B67     		str	r3, [r1, #112]
1493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1720              		.loc 1 1493 1
 1721 004c 00BF     		nop
 1722 004e 1437     		adds	r7, r7, #20
 1723              	.LCFI130:
 1724              		.cfi_def_cfa_offset 4
 1725 0050 BD46     		mov	sp, r7
 1726              	.LCFI131:
 1727              		.cfi_def_cfa_register 13
 1728              		@ sp needed
 1729 0052 5DF8047B 		ldr	r7, [sp], #4
 1730              	.LCFI132:
 1731              		.cfi_restore 7
 1732              		.cfi_def_cfa_offset 0
 1733 0056 7047     		bx	lr
 1734              	.L85:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 57


 1735              		.align	2
 1736              	.L84:
 1737 0058 00380240 		.word	1073887232
 1738              		.cfi_endproc
 1739              	.LFE152:
 1741              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1742              		.align	1
 1743              		.global	RCC_RTCCLKCmd
 1744              		.syntax unified
 1745              		.thumb
 1746              		.thumb_func
 1748              	RCC_RTCCLKCmd:
 1749              	.LFB153:
1494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the RTC clock.
1497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
1500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1750              		.loc 1 1503 1
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 8
 1753              		@ frame_needed = 1, uses_anonymous_args = 0
 1754              		@ link register save eliminated.
 1755 0000 80B4     		push	{r7}
 1756              	.LCFI133:
 1757              		.cfi_def_cfa_offset 4
 1758              		.cfi_offset 7, -4
 1759 0002 83B0     		sub	sp, sp, #12
 1760              	.LCFI134:
 1761              		.cfi_def_cfa_offset 16
 1762 0004 00AF     		add	r7, sp, #0
 1763              	.LCFI135:
 1764              		.cfi_def_cfa_register 7
 1765 0006 0346     		mov	r3, r0
 1766 0008 FB71     		strb	r3, [r7, #7]
1504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1767              		.loc 1 1507 3
 1768 000a 044A     		ldr	r2, .L87
 1769              		.loc 1 1507 38
 1770 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1771              		.loc 1 1507 36
 1772 000e 1360     		str	r3, [r2]
1508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1773              		.loc 1 1508 1
 1774 0010 00BF     		nop
 1775 0012 0C37     		adds	r7, r7, #12
 1776              	.LCFI136:
 1777              		.cfi_def_cfa_offset 4
 1778 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 58


 1779              	.LCFI137:
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 0016 5DF8047B 		ldr	r7, [sp], #4
 1783              	.LCFI138:
 1784              		.cfi_restore 7
 1785              		.cfi_def_cfa_offset 0
 1786 001a 7047     		bx	lr
 1787              	.L88:
 1788              		.align	2
 1789              	.L87:
 1790 001c 3C0E4742 		.word	1111952956
 1791              		.cfi_endproc
 1792              	.LFE153:
 1794              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1795              		.align	1
 1796              		.global	RCC_BackupResetCmd
 1797              		.syntax unified
 1798              		.thumb
 1799              		.thumb_func
 1801              	RCC_BackupResetCmd:
 1802              	.LFB154:
1509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         and the RTC clock source selection in RCC_CSR register.
1514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The BKPSRAM is not affected by this reset.    
1515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1803              		.loc 1 1520 1
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 8
 1806              		@ frame_needed = 1, uses_anonymous_args = 0
 1807              		@ link register save eliminated.
 1808 0000 80B4     		push	{r7}
 1809              	.LCFI139:
 1810              		.cfi_def_cfa_offset 4
 1811              		.cfi_offset 7, -4
 1812 0002 83B0     		sub	sp, sp, #12
 1813              	.LCFI140:
 1814              		.cfi_def_cfa_offset 16
 1815 0004 00AF     		add	r7, sp, #0
 1816              	.LCFI141:
 1817              		.cfi_def_cfa_register 7
 1818 0006 0346     		mov	r3, r0
 1819 0008 FB71     		strb	r3, [r7, #7]
1521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1820              		.loc 1 1523 3
 1821 000a 044A     		ldr	r2, .L90
 1822              		.loc 1 1523 38
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 59


 1823 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1824              		.loc 1 1523 36
 1825 000e 1360     		str	r3, [r2]
1524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1826              		.loc 1 1524 1
 1827 0010 00BF     		nop
 1828 0012 0C37     		adds	r7, r7, #12
 1829              	.LCFI142:
 1830              		.cfi_def_cfa_offset 4
 1831 0014 BD46     		mov	sp, r7
 1832              	.LCFI143:
 1833              		.cfi_def_cfa_register 13
 1834              		@ sp needed
 1835 0016 5DF8047B 		ldr	r7, [sp], #4
 1836              	.LCFI144:
 1837              		.cfi_restore 7
 1838              		.cfi_def_cfa_offset 0
 1839 001a 7047     		bx	lr
 1840              	.L91:
 1841              		.align	2
 1842              	.L90:
 1843 001c 400E4742 		.word	1111952960
 1844              		.cfi_endproc
 1845              	.LFE154:
 1847              		.section	.text.RCC_I2SCLKConfig,"ax",%progbits
 1848              		.align	1
 1849              		.global	RCC_I2SCLKConfig
 1850              		.syntax unified
 1851              		.thumb
 1852              		.thumb_func
 1854              	RCC_I2SCLKConfig:
 1855              	.LFB155:
1525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined (STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
1527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SAPBx: specifies the APBx I2S clock source.
1532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB1: I2S peripheral instance is on APB1 Bus
1534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB2: I2S peripheral instance is on APB2 Bus
1535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLL: PLL clock used as I2S clock source
1542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as I2S clock source
1543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SAPBx, uint32_t RCC_I2SCLKSource)
1546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2S_APBx(RCC_I2SAPBx));
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 60


1550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_I2SAPBx == RCC_I2SBus_APB1)
1552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear APB1 I2Sx clock source selection bits */
1554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S1SRC;
1555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new APB1 I2Sx clock source*/
1556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_I2SCLKSource;
1557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
1559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear APB2 I2Sx clock source selection  bits */
1561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S2SRC;
1562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new APB2 I2Sx clock source */
1563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_I2SCLKSource << 2);
1564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
1567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAIx clock source (SAIxCLK).
1569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the SAIx APB clock.
1570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIInstance: specifies the SAIx clock source.
1572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI1: SAI1 clock source selection
1574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI2: SAI2 clock source selections
1575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAICLKSource: specifies the SAI clock source.
1577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLSAI: PLLSAI clock used as SAI clock source
1579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLL: PLL clock used as SAI clock source
1581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock source
1582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAICLKConfig(uint32_t RCC_SAIInstance, uint32_t RCC_SAICLKSource)
1585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAICLK_SOURCE(RCC_SAICLKSource));
1588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAI_INSTANCE(RCC_SAIInstance));
1589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_SAIInstance == RCC_SAIInstance_SAI1)
1591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear SAI1 clock source selection bits */
1593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI1SRC;
1594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new SAI1 clock source */
1595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_SAICLKSource;
1596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
1598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear SAI2 clock source selection bits */
1600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI2SRC;
1601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new SAI2 clock source */
1602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_SAICLKSource << 2);
1603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
1606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 61


1607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
1608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockA clock source selection.      
1610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockACLKSource: specifies the SAI Block A clock source.
1613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2SR: PLLI2SR clock used as SAI clock source
1615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLL: PLL clock used as SAI clock source
1617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock sourc
1618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockACLKConfig(uint32_t RCC_SAIBlockACLKSource)
1621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIACLK_SOURCE(RCC_SAIBlockACLKSource));
1626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1ASRC;
1631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block A source selection value */
1633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockACLKSource;
1634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockB clock source selection.      
1641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockBCLKSource: specifies the SAI Block B clock source.
1644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2SR: PLLI2SR clock used as SAI clock source
1646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLL: PLL clock used as SAI clock source
1648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock sourc
1649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockBCLKConfig(uint32_t RCC_SAIBlockBCLKSource)
1652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIBCLK_SOURCE(RCC_SAIBlockBCLKSource));
1657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1BSRC;
1662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block B source selection value */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 62


1664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockBCLKSource;
1665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
1670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
1673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S clock.
1676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
1679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLR: PLL VCO output clock divided by PLLR.
1680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_EXT: External clock mapped on the I2S_CKIN pin.
1681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLSRC: HSI/HSE depends on PLLSRC.
1682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear I2Sx clock source selection bits */
1690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR &= ~RCC_DCKCFGR_I2SSRC;
1691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set new I2Sx clock source*/
1692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR |= RCC_I2SCLKSource;
1693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
1695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_Ext: External clock mapped on the I2S_CKIN pin
1704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1856              		.loc 1 1708 1
 1857              		.cfi_startproc
 1858              		@ args = 0, pretend = 0, frame = 8
 1859              		@ frame_needed = 1, uses_anonymous_args = 0
 1860              		@ link register save eliminated.
 1861 0000 80B4     		push	{r7}
 1862              	.LCFI145:
 1863              		.cfi_def_cfa_offset 4
 1864              		.cfi_offset 7, -4
 1865 0002 83B0     		sub	sp, sp, #12
 1866              	.LCFI146:
 1867              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 63


 1868 0004 00AF     		add	r7, sp, #0
 1869              	.LCFI147:
 1870              		.cfi_def_cfa_register 7
 1871 0006 7860     		str	r0, [r7, #4]
1709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CFGR_I2SSRC_BB = RCC_I2SCLKSource;  
 1872              		.loc 1 1712 3
 1873 0008 044A     		ldr	r2, .L93
 1874              		.loc 1 1712 37
 1875 000a 7B68     		ldr	r3, [r7, #4]
 1876 000c 1360     		str	r3, [r2]
1713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1877              		.loc 1 1713 1
 1878 000e 00BF     		nop
 1879 0010 0C37     		adds	r7, r7, #12
 1880              	.LCFI148:
 1881              		.cfi_def_cfa_offset 4
 1882 0012 BD46     		mov	sp, r7
 1883              	.LCFI149:
 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 0014 5DF8047B 		ldr	r7, [sp], #4
 1887              	.LCFI150:
 1888              		.cfi_restore 7
 1889              		.cfi_def_cfa_offset 0
 1890 0018 7047     		bx	lr
 1891              	.L94:
 1892 001a 00BF     		.align	2
 1893              	.L93:
 1894 001c 5C014742 		.word	1111949660
 1895              		.cfi_endproc
 1896              	.LFE155:
 1898              		.section	.text.RCC_SAIBlockACLKConfig,"ax",%progbits
 1899              		.align	1
 1900              		.global	RCC_SAIBlockACLKConfig
 1901              		.syntax unified
 1902              		.thumb
 1903              		.thumb_func
 1905              	RCC_SAIBlockACLKConfig:
 1906              	.LFB156:
1714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
1715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockA clock source selection.
1719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/469xx/479xx devices.
1721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *       
1722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockACLKSource: specifies the SAI Block A clock source.
1725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 64


1729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_Ext: External clock mapped on the I2S_CKIN pin
1731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block A clock
1732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockACLKConfig(uint32_t RCC_SAIBlockACLKSource)
1735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1907              		.loc 1 1735 1
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 16
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911              		@ link register save eliminated.
 1912 0000 80B4     		push	{r7}
 1913              	.LCFI151:
 1914              		.cfi_def_cfa_offset 4
 1915              		.cfi_offset 7, -4
 1916 0002 85B0     		sub	sp, sp, #20
 1917              	.LCFI152:
 1918              		.cfi_def_cfa_offset 24
 1919 0004 00AF     		add	r7, sp, #0
 1920              	.LCFI153:
 1921              		.cfi_def_cfa_register 7
 1922 0006 7860     		str	r0, [r7, #4]
1736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1923              		.loc 1 1736 12
 1924 0008 0023     		movs	r3, #0
 1925 000a FB60     		str	r3, [r7, #12]
1737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIACLK_SOURCE(RCC_SAIBlockACLKSource));
1740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1926              		.loc 1 1741 15
 1927 000c 0A4B     		ldr	r3, .L96
 1928              		.loc 1 1741 10
 1929 000e D3F88C30 		ldr	r3, [r3, #140]
 1930 0012 FB60     		str	r3, [r7, #12]
1742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1ASRC;
 1931              		.loc 1 1744 10
 1932 0014 FB68     		ldr	r3, [r7, #12]
 1933 0016 23F44013 		bic	r3, r3, #3145728
 1934 001a FB60     		str	r3, [r7, #12]
1745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block A source selection value */
1747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockACLKSource;
 1935              		.loc 1 1747 10
 1936 001c FA68     		ldr	r2, [r7, #12]
 1937 001e 7B68     		ldr	r3, [r7, #4]
 1938 0020 1343     		orrs	r3, r3, r2
 1939 0022 FB60     		str	r3, [r7, #12]
1748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1940              		.loc 1 1750 6
 1941 0024 044A     		ldr	r2, .L96
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 65


 1942              		.loc 1 1750 16
 1943 0026 FB68     		ldr	r3, [r7, #12]
 1944 0028 C2F88C30 		str	r3, [r2, #140]
1751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1945              		.loc 1 1751 1
 1946 002c 00BF     		nop
 1947 002e 1437     		adds	r7, r7, #20
 1948              	.LCFI154:
 1949              		.cfi_def_cfa_offset 4
 1950 0030 BD46     		mov	sp, r7
 1951              	.LCFI155:
 1952              		.cfi_def_cfa_register 13
 1953              		@ sp needed
 1954 0032 5DF8047B 		ldr	r7, [sp], #4
 1955              	.LCFI156:
 1956              		.cfi_restore 7
 1957              		.cfi_def_cfa_offset 0
 1958 0036 7047     		bx	lr
 1959              	.L97:
 1960              		.align	2
 1961              	.L96:
 1962 0038 00380240 		.word	1073887232
 1963              		.cfi_endproc
 1964              	.LFE156:
 1966              		.section	.text.RCC_SAIBlockBCLKConfig,"ax",%progbits
 1967              		.align	1
 1968              		.global	RCC_SAIBlockBCLKConfig
 1969              		.syntax unified
 1970              		.thumb
 1971              		.thumb_func
 1973              	RCC_SAIBlockBCLKConfig:
 1974              	.LFB157:
1752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockB clock source selection.
1755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/469xx/479xx devices.
1757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *       
1758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockBCLKSource: specifies the SAI Block B clock source.
1761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
1765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block B clock
1768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockBCLKConfig(uint32_t RCC_SAIBlockBCLKSource)
1771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1975              		.loc 1 1771 1
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 16
 1978              		@ frame_needed = 1, uses_anonymous_args = 0
 1979              		@ link register save eliminated.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 66


 1980 0000 80B4     		push	{r7}
 1981              	.LCFI157:
 1982              		.cfi_def_cfa_offset 4
 1983              		.cfi_offset 7, -4
 1984 0002 85B0     		sub	sp, sp, #20
 1985              	.LCFI158:
 1986              		.cfi_def_cfa_offset 24
 1987 0004 00AF     		add	r7, sp, #0
 1988              	.LCFI159:
 1989              		.cfi_def_cfa_register 7
 1990 0006 7860     		str	r0, [r7, #4]
1772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1991              		.loc 1 1772 12
 1992 0008 0023     		movs	r3, #0
 1993 000a FB60     		str	r3, [r7, #12]
1773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIBCLK_SOURCE(RCC_SAIBlockBCLKSource));
1776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1994              		.loc 1 1777 15
 1995 000c 0A4B     		ldr	r3, .L99
 1996              		.loc 1 1777 10
 1997 000e D3F88C30 		ldr	r3, [r3, #140]
 1998 0012 FB60     		str	r3, [r7, #12]
1778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1BSRC[1:0] bits */
1780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1BSRC;
 1999              		.loc 1 1780 10
 2000 0014 FB68     		ldr	r3, [r7, #12]
 2001 0016 23F44003 		bic	r3, r3, #12582912
 2002 001a FB60     		str	r3, [r7, #12]
1781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block B source selection value */
1783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockBCLKSource;
 2003              		.loc 1 1783 10
 2004 001c FA68     		ldr	r2, [r7, #12]
 2005 001e 7B68     		ldr	r3, [r7, #4]
 2006 0020 1343     		orrs	r3, r3, r2
 2007 0022 FB60     		str	r3, [r7, #12]
1784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 2008              		.loc 1 1786 6
 2009 0024 044A     		ldr	r2, .L99
 2010              		.loc 1 1786 16
 2011 0026 FB68     		ldr	r3, [r7, #12]
 2012 0028 C2F88C30 		str	r3, [r2, #140]
1787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2013              		.loc 1 1787 1
 2014 002c 00BF     		nop
 2015 002e 1437     		adds	r7, r7, #20
 2016              	.LCFI160:
 2017              		.cfi_def_cfa_offset 4
 2018 0030 BD46     		mov	sp, r7
 2019              	.LCFI161:
 2020              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 67


 2021              		@ sp needed
 2022 0032 5DF8047B 		ldr	r7, [sp], #4
 2023              	.LCFI162:
 2024              		.cfi_restore 7
 2025              		.cfi_def_cfa_offset 0
 2026 0036 7047     		bx	lr
 2027              	.L100:
 2028              		.align	2
 2029              	.L99:
 2030 0038 00380240 		.word	1073887232
 2031              		.cfi_endproc
 2032              	.LFE157:
 2034              		.section	.text.RCC_SAIPLLI2SClkDivConfig,"ax",%progbits
 2035              		.align	1
 2036              		.global	RCC_SAIPLLI2SClkDivConfig
 2037              		.syntax unified
 2038              		.thumb
 2039              		.thumb_func
 2041              	RCC_SAIPLLI2SClkDivConfig:
 2042              	.LFB158:
1788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
1789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLI2S.
1792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLI2S.
1796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              
1797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLI2SDivQ: specifies the PLLI2S division factor for SAI1 clock .
1798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLI2S_Q) / RCC_PLLI2SDivQ 
1800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              
1801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLI2SClkDivConfig(uint32_t RCC_PLLI2SDivQ)  
1804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2043              		.loc 1 1804 1
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 16
 2046              		@ frame_needed = 1, uses_anonymous_args = 0
 2047              		@ link register save eliminated.
 2048 0000 80B4     		push	{r7}
 2049              	.LCFI163:
 2050              		.cfi_def_cfa_offset 4
 2051              		.cfi_offset 7, -4
 2052 0002 85B0     		sub	sp, sp, #20
 2053              	.LCFI164:
 2054              		.cfi_def_cfa_offset 24
 2055 0004 00AF     		add	r7, sp, #0
 2056              	.LCFI165:
 2057              		.cfi_def_cfa_register 7
 2058 0006 7860     		str	r0, [r7, #4]
1805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 2059              		.loc 1 1805 12
 2060 0008 0023     		movs	r3, #0
 2061 000a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 68


1806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(RCC_PLLI2SDivQ));
1809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 2062              		.loc 1 1810 15
 2063 000c 0B4B     		ldr	r3, .L102
 2064              		.loc 1 1810 10
 2065 000e D3F88C30 		ldr	r3, [r3, #140]
 2066 0012 FB60     		str	r3, [r7, #12]
1811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] bits */
1813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLI2SDIVQ);
 2067              		.loc 1 1813 10
 2068 0014 FB68     		ldr	r3, [r7, #12]
 2069 0016 23F01F03 		bic	r3, r3, #31
 2070 001a FB60     		str	r3, [r7, #12]
1814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLI2SDIVQ values */
1816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_PLLI2SDivQ - 1);
 2071              		.loc 1 1816 29
 2072 001c 7B68     		ldr	r3, [r7, #4]
 2073 001e 013B     		subs	r3, r3, #1
 2074              		.loc 1 1816 10
 2075 0020 FA68     		ldr	r2, [r7, #12]
 2076 0022 1343     		orrs	r3, r3, r2
 2077 0024 FB60     		str	r3, [r7, #12]
1817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 2078              		.loc 1 1819 6
 2079 0026 054A     		ldr	r2, .L102
 2080              		.loc 1 1819 16
 2081 0028 FB68     		ldr	r3, [r7, #12]
 2082 002a C2F88C30 		str	r3, [r2, #140]
1820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2083              		.loc 1 1820 1
 2084 002e 00BF     		nop
 2085 0030 1437     		adds	r7, r7, #20
 2086              	.LCFI166:
 2087              		.cfi_def_cfa_offset 4
 2088 0032 BD46     		mov	sp, r7
 2089              	.LCFI167:
 2090              		.cfi_def_cfa_register 13
 2091              		@ sp needed
 2092 0034 5DF8047B 		ldr	r7, [sp], #4
 2093              	.LCFI168:
 2094              		.cfi_restore 7
 2095              		.cfi_def_cfa_offset 0
 2096 0038 7047     		bx	lr
 2097              	.L103:
 2098 003a 00BF     		.align	2
 2099              	.L102:
 2100 003c 00380240 		.word	1073887232
 2101              		.cfi_endproc
 2102              	.LFE158:
 2104              		.section	.text.RCC_SAIPLLSAIClkDivConfig,"ax",%progbits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 69


 2105              		.align	1
 2106              		.global	RCC_SAIPLLSAIClkDivConfig
 2107              		.syntax unified
 2108              		.thumb
 2109              		.thumb_func
 2111              	RCC_SAIPLLSAIClkDivConfig:
 2112              	.LFB159:
1821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLSAI.
1824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
1827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivQ: specifies the PLLSAI division factor for SAI1 clock .
1830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLSAI_Q) / RCC_PLLSAIDivQ  
1832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              
1833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLSAIClkDivConfig(uint32_t RCC_PLLSAIDivQ)  
1836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2113              		.loc 1 1836 1
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 16
 2116              		@ frame_needed = 1, uses_anonymous_args = 0
 2117              		@ link register save eliminated.
 2118 0000 80B4     		push	{r7}
 2119              	.LCFI169:
 2120              		.cfi_def_cfa_offset 4
 2121              		.cfi_offset 7, -4
 2122 0002 85B0     		sub	sp, sp, #20
 2123              	.LCFI170:
 2124              		.cfi_def_cfa_offset 24
 2125 0004 00AF     		add	r7, sp, #0
 2126              	.LCFI171:
 2127              		.cfi_def_cfa_register 7
 2128 0006 7860     		str	r0, [r7, #4]
1837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 2129              		.loc 1 1837 12
 2130 0008 0023     		movs	r3, #0
 2131 000a FB60     		str	r3, [r7, #12]
1838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(RCC_PLLSAIDivQ));
1841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 2132              		.loc 1 1842 15
 2133 000c 0B4B     		ldr	r3, .L105
 2134              		.loc 1 1842 10
 2135 000e D3F88C30 		ldr	r3, [r3, #140]
 2136 0012 FB60     		str	r3, [r7, #12]
1843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] and PLLSAIDIVQ[4:0] bits */
1845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLSAIDIVQ);
 2137              		.loc 1 1845 10
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 70


 2138 0014 FB68     		ldr	r3, [r7, #12]
 2139 0016 23F4F853 		bic	r3, r3, #7936
 2140 001a FB60     		str	r3, [r7, #12]
1846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVQ values */
1848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= ((RCC_PLLSAIDivQ - 1) << 8);
 2141              		.loc 1 1848 30
 2142 001c 7B68     		ldr	r3, [r7, #4]
 2143 001e 013B     		subs	r3, r3, #1
 2144              		.loc 1 1848 35
 2145 0020 1B02     		lsls	r3, r3, #8
 2146              		.loc 1 1848 10
 2147 0022 FA68     		ldr	r2, [r7, #12]
 2148 0024 1343     		orrs	r3, r3, r2
 2149 0026 FB60     		str	r3, [r7, #12]
1849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 2150              		.loc 1 1851 6
 2151 0028 044A     		ldr	r2, .L105
 2152              		.loc 1 1851 16
 2153 002a FB68     		ldr	r3, [r7, #12]
 2154 002c C2F88C30 		str	r3, [r2, #140]
1852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2155              		.loc 1 1852 1
 2156 0030 00BF     		nop
 2157 0032 1437     		adds	r7, r7, #20
 2158              	.LCFI172:
 2159              		.cfi_def_cfa_offset 4
 2160 0034 BD46     		mov	sp, r7
 2161              	.LCFI173:
 2162              		.cfi_def_cfa_register 13
 2163              		@ sp needed
 2164 0036 5DF8047B 		ldr	r7, [sp], #4
 2165              	.LCFI174:
 2166              		.cfi_restore 7
 2167              		.cfi_def_cfa_offset 0
 2168 003a 7047     		bx	lr
 2169              	.L106:
 2170              		.align	2
 2171              	.L105:
 2172 003c 00380240 		.word	1073887232
 2173              		.cfi_endproc
 2174              	.LFE159:
 2176              		.section	.text.RCC_LTDCCLKDivConfig,"ax",%progbits
 2177              		.align	1
 2178              		.global	RCC_LTDCCLKDivConfig
 2179              		.syntax unified
 2180              		.thumb
 2181              		.thumb_func
 2183              	RCC_LTDCCLKDivConfig:
 2184              	.LFB160:
1853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
1855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLI2S.
1857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 71


1858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F413_423xx
1859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param   RCC_PLLI2SDivR: specifies the PLLI2S division factor for SAI1 clock.
1861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLI2SR) / RCC_PLLI2SDivR 
1863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLI2SRClkDivConfig(uint32_t RCC_PLLI2SDivR)  
1866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2S_DIVR_VALUE(RCC_PLLI2SDivR));
1871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVR[4:0] bits */
1875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLI2SDIVR);
1876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLI2SDIVR values */
1878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_PLLI2SDivR-1);
1879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLL.
1886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F413_423xx
1888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
1889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLDivR: specifies the PLL division factor for SAI1 clock.
1892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLR) / RCC_PLLDivR 
1894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              
1895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLRClkDivConfig(uint32_t RCC_PLLDivR)  
1898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_DIVR_VALUE(RCC_PLLDivR));
1903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLDIVR[12:8] */
1907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLDIVR);
1908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLDivR values */
1910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= ((RCC_PLLDivR - 1 ) << 8);
1911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 72


1915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
1916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the LTDC clock Divider coming from PLLSAI.
1919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The LTDC peripheral is only available with STM32F42xxx/43xxx/446xx/469xx/479xx Devices.
1921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *      
1922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivR: specifies the PLLSAI division factor for LTDC clock .
1925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          LTDC clock frequency = f(PLLSAI_R) / RCC_PLLSAIDivR  
1926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div2: LTDC clock = f(PLLSAI_R)/2
1928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div4: LTDC clock = f(PLLSAI_R)/4
1929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div8: LTDC clock = f(PLLSAI_R)/8
1930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div16: LTDC clock = f(PLLSAI_R)/16
1931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            
1932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1933:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1934:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LTDCCLKDivConfig(uint32_t RCC_PLLSAIDivR)
1935:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2185              		.loc 1 1935 1
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 16
 2188              		@ frame_needed = 1, uses_anonymous_args = 0
 2189              		@ link register save eliminated.
 2190 0000 80B4     		push	{r7}
 2191              	.LCFI175:
 2192              		.cfi_def_cfa_offset 4
 2193              		.cfi_offset 7, -4
 2194 0002 85B0     		sub	sp, sp, #20
 2195              	.LCFI176:
 2196              		.cfi_def_cfa_offset 24
 2197 0004 00AF     		add	r7, sp, #0
 2198              	.LCFI177:
 2199              		.cfi_def_cfa_register 7
 2200 0006 7860     		str	r0, [r7, #4]
1936:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 2201              		.loc 1 1936 12
 2202 0008 0023     		movs	r3, #0
 2203 000a FB60     		str	r3, [r7, #12]
1937:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1938:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1939:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVR_VALUE(RCC_PLLSAIDivR));
1940:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1941:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 2204              		.loc 1 1941 15
 2205 000c 0A4B     		ldr	r3, .L108
 2206              		.loc 1 1941 10
 2207 000e D3F88C30 		ldr	r3, [r3, #140]
 2208 0012 FB60     		str	r3, [r7, #12]
1942:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1943:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLSAIDIVR[2:0] bits */
1944:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_PLLSAIDIVR;
 2209              		.loc 1 1944 10
 2210 0014 FB68     		ldr	r3, [r7, #12]
 2211 0016 23F44033 		bic	r3, r3, #196608
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 73


 2212 001a FB60     		str	r3, [r7, #12]
1945:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1946:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVR values */
1947:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_PLLSAIDivR;
 2213              		.loc 1 1947 10
 2214 001c FA68     		ldr	r2, [r7, #12]
 2215 001e 7B68     		ldr	r3, [r7, #4]
 2216 0020 1343     		orrs	r3, r3, r2
 2217 0022 FB60     		str	r3, [r7, #12]
1948:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1949:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1950:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 2218              		.loc 1 1950 6
 2219 0024 044A     		ldr	r2, .L108
 2220              		.loc 1 1950 16
 2221 0026 FB68     		ldr	r3, [r7, #12]
 2222 0028 C2F88C30 		str	r3, [r2, #140]
1951:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2223              		.loc 1 1951 1
 2224 002c 00BF     		nop
 2225 002e 1437     		adds	r7, r7, #20
 2226              	.LCFI178:
 2227              		.cfi_def_cfa_offset 4
 2228 0030 BD46     		mov	sp, r7
 2229              	.LCFI179:
 2230              		.cfi_def_cfa_register 13
 2231              		@ sp needed
 2232 0032 5DF8047B 		ldr	r7, [sp], #4
 2233              	.LCFI180:
 2234              		.cfi_restore 7
 2235              		.cfi_def_cfa_offset 0
 2236 0036 7047     		bx	lr
 2237              	.L109:
 2238              		.align	2
 2239              	.L108:
 2240 0038 00380240 		.word	1073887232
 2241              		.cfi_endproc
 2242              	.LFE160:
 2244              		.section	.text.RCC_TIMCLKPresConfig,"ax",%progbits
 2245              		.align	1
 2246              		.global	RCC_TIMCLKPresConfig
 2247              		.syntax unified
 2248              		.thumb
 2249              		.thumb_func
 2251              	RCC_TIMCLKPresConfig:
 2252              	.LFB161:
1952:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1953:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx)
1954:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1955:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM clock source (DFSDMCLK).
1956:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
1957:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDMCLKSource: specifies the DFSDM clock source.
1958:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1959:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDMCLKSource_APB: APB clock used as DFSDM clock source.
1960:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDMCLKSource_SYS: System clock used as DFSDM clock source.
1961:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        
1962:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 74


1963:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1964:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_DFSDM1CLKConfig(uint32_t RCC_DFSDMCLKSource)
1965:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1966:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1967:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1968:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1969:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDM1CLK_SOURCE(RCC_DFSDMCLKSource));
1970:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1971:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1972:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1973:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDM-SEL  bit */
1974:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1SEL;
1975:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1976:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL bit according to RCC_DFSDMCLKSource value */
1977:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_DFSDMCLKSource << 31) ;
1978:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1979:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1981:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1982:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1983:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1984:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM Audio clock source (DFSDMACLK).
1985:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
1986:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDM1ACLKSource: specifies the DFSDM clock source.
1987:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1988:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB1: APB clock used as DFSDM clock source.
1989:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB2: System clock used as DFSDM clock source.
1990:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        
1991:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1992:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1993:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_DFSDM1ACLKConfig(uint32_t RCC_DFSDM1ACLKSource)
1994:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1995:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1996:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1997:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1998:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDMACLK_SOURCE(RCC_DFSDM1ACLKSource));
1999:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2000:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
2001:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2002:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDMA SEL  bit */
2003:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1ASEL;
2004:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2005:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL   bt according to RCC_DFSDMCLKSource value */
2006:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_DFSDM1ACLKSource;
2007:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2008:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
2009:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
2010:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2011:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2012:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
2013:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2014:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM Audio clock source (DFSDMACLK).
2015:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
2016:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDM2ACLKSource: specifies the DFSDM clock source.
2017:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2018:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB1: APB clock used as DFSDM clock source.
2019:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB2: System clock used as DFSDM clock source.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 75


2020:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        
2021:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2022:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2023:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_DFSDM2ACLKConfig(uint32_t RCC_DFSDMACLKSource)
2024:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2025:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
2026:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2027:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2028:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDMCLK_SOURCE(RCC_DFSDMACLKSource));
2029:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2030:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
2031:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2032:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDMA SEL  bit */
2033:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1ASEL;
2034:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2035:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL   bt according to RCC_DFSDMCLKSource value */
2036:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_DFSDMACLKSource;
2037:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2038:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
2039:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
2040:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2041:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
2042:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx */
2043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2044:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2045:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the Timers clocks prescalers selection.
2046:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
2047:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx and STM32F401xx/411xE devices. 
2048:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
2049:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_TIMCLKPrescaler : specifies the Timers clocks prescalers selection
2050:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
2051:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescDesactivated: The Timers kernels clocks prescaler is 
2052:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1 or 2, 
2053:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 2] if PPREx is corresponding to 
2054:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 division by 4 or more.
2055:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                   
2056:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescActivated: The Timers kernels clocks prescaler is 
2057:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1, 2 or 4, 
2058:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 4] if PPREx is corresponding 
2059:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 to division by 8 or more.
2060:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2061:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2062:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_TIMCLKPresConfig(uint32_t RCC_TIMCLKPrescaler)
2063:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2253              		.loc 1 2063 1
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 8
 2256              		@ frame_needed = 1, uses_anonymous_args = 0
 2257              		@ link register save eliminated.
 2258 0000 80B4     		push	{r7}
 2259              	.LCFI181:
 2260              		.cfi_def_cfa_offset 4
 2261              		.cfi_offset 7, -4
 2262 0002 83B0     		sub	sp, sp, #12
 2263              	.LCFI182:
 2264              		.cfi_def_cfa_offset 16
 2265 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 76


 2266              	.LCFI183:
 2267              		.cfi_def_cfa_register 7
 2268 0006 7860     		str	r0, [r7, #4]
2064:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2065:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_TIMCLK_PRESCALER(RCC_TIMCLKPrescaler));
2066:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2067:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) DCKCFGR_TIMPRE_BB = RCC_TIMCLKPrescaler;
 2269              		.loc 1 2067 3
 2270 0008 044A     		ldr	r2, .L111
 2271              		.loc 1 2067 40
 2272 000a 7B68     		ldr	r3, [r7, #4]
 2273 000c 1360     		str	r3, [r2]
2068:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2274              		.loc 1 2068 1
 2275 000e 00BF     		nop
 2276 0010 0C37     		adds	r7, r7, #12
 2277              	.LCFI184:
 2278              		.cfi_def_cfa_offset 4
 2279 0012 BD46     		mov	sp, r7
 2280              	.LCFI185:
 2281              		.cfi_def_cfa_register 13
 2282              		@ sp needed
 2283 0014 5DF8047B 		ldr	r7, [sp], #4
 2284              	.LCFI186:
 2285              		.cfi_restore 7
 2286              		.cfi_def_cfa_offset 0
 2287 0018 7047     		bx	lr
 2288              	.L112:
 2289 001a 00BF     		.align	2
 2290              	.L111:
 2291 001c E0114742 		.word	1111953888
 2292              		.cfi_endproc
 2293              	.LFE161:
 2295              		.section	.text.RCC_AHB1PeriphClockCmd,"ax",%progbits
 2296              		.align	1
 2297              		.global	RCC_AHB1PeriphClockCmd
 2298              		.syntax unified
 2299              		.thumb
 2300              		.thumb_func
 2302              	RCC_AHB1PeriphClockCmd:
 2303              	.LFB162:
2069:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2070:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2071:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock.
2072:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2073:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2074:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it.   
2075:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
2076:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2077:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
2078:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
2079:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
2080:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
2081:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
2082:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
2083:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2084:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 77


2085:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
2086:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
2087:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)  
2088:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
2089:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
2090:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CCMDATARAMEN CCM data RAM interface clock
2091:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
2092:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
2093:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices)  
2094:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
2095:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
2096:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
2097:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
2098:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
2099:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
2100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2304              		.loc 1 2105 1
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 8
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308              		@ link register save eliminated.
 2309 0000 80B4     		push	{r7}
 2310              	.LCFI187:
 2311              		.cfi_def_cfa_offset 4
 2312              		.cfi_offset 7, -4
 2313 0002 83B0     		sub	sp, sp, #12
 2314              	.LCFI188:
 2315              		.cfi_def_cfa_offset 16
 2316 0004 00AF     		add	r7, sp, #0
 2317              	.LCFI189:
 2318              		.cfi_def_cfa_register 7
 2319 0006 7860     		str	r0, [r7, #4]
 2320 0008 0B46     		mov	r3, r1
 2321 000a FB70     		strb	r3, [r7, #3]
2106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
2108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2322              		.loc 1 2110 6
 2323 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2324 000e 002B     		cmp	r3, #0
 2325 0010 06D0     		beq	.L114
2111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR |= RCC_AHB1Periph;
 2326              		.loc 1 2112 18
 2327 0012 0A4B     		ldr	r3, .L117
 2328 0014 1A6B     		ldr	r2, [r3, #48]
 2329 0016 0949     		ldr	r1, .L117
 2330 0018 7B68     		ldr	r3, [r7, #4]
 2331 001a 1343     		orrs	r3, r3, r2
 2332 001c 0B63     		str	r3, [r1, #48]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 78


2113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR &= ~RCC_AHB1Periph;
2117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2333              		.loc 1 2118 1
 2334 001e 06E0     		b	.L116
 2335              	.L114:
2116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2336              		.loc 1 2116 18
 2337 0020 064B     		ldr	r3, .L117
 2338 0022 1A6B     		ldr	r2, [r3, #48]
2116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2339              		.loc 1 2116 21
 2340 0024 7B68     		ldr	r3, [r7, #4]
 2341 0026 DB43     		mvns	r3, r3
2116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2342              		.loc 1 2116 18
 2343 0028 0449     		ldr	r1, .L117
 2344 002a 1340     		ands	r3, r3, r2
 2345 002c 0B63     		str	r3, [r1, #48]
 2346              	.L116:
 2347              		.loc 1 2118 1
 2348 002e 00BF     		nop
 2349 0030 0C37     		adds	r7, r7, #12
 2350              	.LCFI190:
 2351              		.cfi_def_cfa_offset 4
 2352 0032 BD46     		mov	sp, r7
 2353              	.LCFI191:
 2354              		.cfi_def_cfa_register 13
 2355              		@ sp needed
 2356 0034 5DF8047B 		ldr	r7, [sp], #4
 2357              	.LCFI192:
 2358              		.cfi_restore 7
 2359              		.cfi_def_cfa_offset 0
 2360 0038 7047     		bx	lr
 2361              	.L118:
 2362 003a 00BF     		.align	2
 2363              	.L117:
 2364 003c 00380240 		.word	1073887232
 2365              		.cfi_endproc
 2366              	.LFE162:
 2368              		.section	.text.RCC_AHB2PeriphClockCmd,"ax",%progbits
 2369              		.align	1
 2370              		.global	RCC_AHB2PeriphClockCmd
 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2375              	RCC_AHB2PeriphClockCmd:
 2376              	.LFB163:
2119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock.
2122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it. 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 79


2125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
2126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
2131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
2132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2377              		.loc 1 2137 1
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 8
 2380              		@ frame_needed = 1, uses_anonymous_args = 0
 2381              		@ link register save eliminated.
 2382 0000 80B4     		push	{r7}
 2383              	.LCFI193:
 2384              		.cfi_def_cfa_offset 4
 2385              		.cfi_offset 7, -4
 2386 0002 83B0     		sub	sp, sp, #12
 2387              	.LCFI194:
 2388              		.cfi_def_cfa_offset 16
 2389 0004 00AF     		add	r7, sp, #0
 2390              	.LCFI195:
 2391              		.cfi_def_cfa_register 7
 2392 0006 7860     		str	r0, [r7, #4]
 2393 0008 0B46     		mov	r3, r1
 2394 000a FB70     		strb	r3, [r7, #3]
2138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
2140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2395              		.loc 1 2142 6
 2396 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2397 000e 002B     		cmp	r3, #0
 2398 0010 06D0     		beq	.L120
2143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR |= RCC_AHB2Periph;
 2399              		.loc 1 2144 18
 2400 0012 0A4B     		ldr	r3, .L123
 2401 0014 5A6B     		ldr	r2, [r3, #52]
 2402 0016 0949     		ldr	r1, .L123
 2403 0018 7B68     		ldr	r3, [r7, #4]
 2404 001a 1343     		orrs	r3, r3, r2
 2405 001c 4B63     		str	r3, [r1, #52]
2145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR &= ~RCC_AHB2Periph;
2149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2406              		.loc 1 2150 1
 2407 001e 06E0     		b	.L122
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 80


 2408              	.L120:
2148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2409              		.loc 1 2148 18
 2410 0020 064B     		ldr	r3, .L123
 2411 0022 5A6B     		ldr	r2, [r3, #52]
2148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2412              		.loc 1 2148 21
 2413 0024 7B68     		ldr	r3, [r7, #4]
 2414 0026 DB43     		mvns	r3, r3
2148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2415              		.loc 1 2148 18
 2416 0028 0449     		ldr	r1, .L123
 2417 002a 1340     		ands	r3, r3, r2
 2418 002c 4B63     		str	r3, [r1, #52]
 2419              	.L122:
 2420              		.loc 1 2150 1
 2421 002e 00BF     		nop
 2422 0030 0C37     		adds	r7, r7, #12
 2423              	.LCFI196:
 2424              		.cfi_def_cfa_offset 4
 2425 0032 BD46     		mov	sp, r7
 2426              	.LCFI197:
 2427              		.cfi_def_cfa_register 13
 2428              		@ sp needed
 2429 0034 5DF8047B 		ldr	r7, [sp], #4
 2430              	.LCFI198:
 2431              		.cfi_restore 7
 2432              		.cfi_def_cfa_offset 0
 2433 0038 7047     		bx	lr
 2434              	.L124:
 2435 003a 00BF     		.align	2
 2436              	.L123:
 2437 003c 00380240 		.word	1073887232
 2438              		.cfi_endproc
 2439              	.LFE163:
 2441              		.section	.text.RCC_AHB3PeriphClockCmd,"ax",%progbits
 2442              		.align	1
 2443              		.global	RCC_AHB3PeriphClockCmd
 2444              		.syntax unified
 2445              		.thumb
 2446              		.thumb_func
 2448              	RCC_AHB3PeriphClockCmd:
 2449              	.LFB164:
2151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock.
2155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it. 
2158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
2159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG/STM32F413_423xx/STM32F429x/4
2161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F413_423xx/STM32F446xx/STM32F469_479xx device
2162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 81


2165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2450              		.loc 1 2167 1
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 8
 2453              		@ frame_needed = 1, uses_anonymous_args = 0
 2454              		@ link register save eliminated.
 2455 0000 80B4     		push	{r7}
 2456              	.LCFI199:
 2457              		.cfi_def_cfa_offset 4
 2458              		.cfi_offset 7, -4
 2459 0002 83B0     		sub	sp, sp, #12
 2460              	.LCFI200:
 2461              		.cfi_def_cfa_offset 16
 2462 0004 00AF     		add	r7, sp, #0
 2463              	.LCFI201:
 2464              		.cfi_def_cfa_register 7
 2465 0006 7860     		str	r0, [r7, #4]
 2466 0008 0B46     		mov	r3, r1
 2467 000a FB70     		strb	r3, [r7, #3]
2168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));  
2170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2468              		.loc 1 2172 6
 2469 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2470 000e 002B     		cmp	r3, #0
 2471 0010 06D0     		beq	.L126
2173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR |= RCC_AHB3Periph;
 2472              		.loc 1 2174 18
 2473 0012 0A4B     		ldr	r3, .L129
 2474 0014 9A6B     		ldr	r2, [r3, #56]
 2475 0016 0949     		ldr	r1, .L129
 2476 0018 7B68     		ldr	r3, [r7, #4]
 2477 001a 1343     		orrs	r3, r3, r2
 2478 001c 8B63     		str	r3, [r1, #56]
2175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR &= ~RCC_AHB3Periph;
2179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2479              		.loc 1 2180 1
 2480 001e 06E0     		b	.L128
 2481              	.L126:
2178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2482              		.loc 1 2178 18
 2483 0020 064B     		ldr	r3, .L129
 2484 0022 9A6B     		ldr	r2, [r3, #56]
2178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2485              		.loc 1 2178 21
 2486 0024 7B68     		ldr	r3, [r7, #4]
 2487 0026 DB43     		mvns	r3, r3
2178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 82


 2488              		.loc 1 2178 18
 2489 0028 0449     		ldr	r1, .L129
 2490 002a 1340     		ands	r3, r3, r2
 2491 002c 8B63     		str	r3, [r1, #56]
 2492              	.L128:
 2493              		.loc 1 2180 1
 2494 002e 00BF     		nop
 2495 0030 0C37     		adds	r7, r7, #12
 2496              	.LCFI202:
 2497              		.cfi_def_cfa_offset 4
 2498 0032 BD46     		mov	sp, r7
 2499              	.LCFI203:
 2500              		.cfi_def_cfa_register 13
 2501              		@ sp needed
 2502 0034 5DF8047B 		ldr	r7, [sp], #4
 2503              	.LCFI204:
 2504              		.cfi_restore 7
 2505              		.cfi_def_cfa_offset 0
 2506 0038 7047     		bx	lr
 2507              	.L130:
 2508 003a 00BF     		.align	2
 2509              	.L129:
 2510 003c 00380240 		.word	1073887232
 2511              		.cfi_endproc
 2512              	.LFE164:
 2514              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 2515              		.align	1
 2516              		.global	RCC_APB1PeriphClockCmd
 2517              		.syntax unified
 2518              		.thumb
 2519              		.thumb_func
 2521              	RCC_APB1PeriphClockCmd:
 2522              	.LFB165:
2181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
2185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it. 
2188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
2189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:  SPDIF RX clock (STM32F446xx devices) 
2204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 83


2205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:FMPI2C1 clock
2212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
2215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2523              		.loc 1 2224 1
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 8
 2526              		@ frame_needed = 1, uses_anonymous_args = 0
 2527              		@ link register save eliminated.
 2528 0000 80B4     		push	{r7}
 2529              	.LCFI205:
 2530              		.cfi_def_cfa_offset 4
 2531              		.cfi_offset 7, -4
 2532 0002 83B0     		sub	sp, sp, #12
 2533              	.LCFI206:
 2534              		.cfi_def_cfa_offset 16
 2535 0004 00AF     		add	r7, sp, #0
 2536              	.LCFI207:
 2537              		.cfi_def_cfa_register 7
 2538 0006 7860     		str	r0, [r7, #4]
 2539 0008 0B46     		mov	r3, r1
 2540 000a FB70     		strb	r3, [r7, #3]
2225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));  
2227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2541              		.loc 1 2229 6
 2542 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2543 000e 002B     		cmp	r3, #0
 2544 0010 06D0     		beq	.L132
2230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 2545              		.loc 1 2231 18
 2546 0012 0A4B     		ldr	r3, .L135
 2547 0014 1A6C     		ldr	r2, [r3, #64]
 2548 0016 0949     		ldr	r1, .L135
 2549 0018 7B68     		ldr	r3, [r7, #4]
 2550 001a 1343     		orrs	r3, r3, r2
 2551 001c 0B64     		str	r3, [r1, #64]
2232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 84


2233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
2236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2552              		.loc 1 2237 1
 2553 001e 06E0     		b	.L134
 2554              	.L132:
2235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2555              		.loc 1 2235 18
 2556 0020 064B     		ldr	r3, .L135
 2557 0022 1A6C     		ldr	r2, [r3, #64]
2235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2558              		.loc 1 2235 21
 2559 0024 7B68     		ldr	r3, [r7, #4]
 2560 0026 DB43     		mvns	r3, r3
2235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2561              		.loc 1 2235 18
 2562 0028 0449     		ldr	r1, .L135
 2563 002a 1340     		ands	r3, r3, r2
 2564 002c 0B64     		str	r3, [r1, #64]
 2565              	.L134:
 2566              		.loc 1 2237 1
 2567 002e 00BF     		nop
 2568 0030 0C37     		adds	r7, r7, #12
 2569              	.LCFI208:
 2570              		.cfi_def_cfa_offset 4
 2571 0032 BD46     		mov	sp, r7
 2572              	.LCFI209:
 2573              		.cfi_def_cfa_register 13
 2574              		@ sp needed
 2575 0034 5DF8047B 		ldr	r7, [sp], #4
 2576              	.LCFI210:
 2577              		.cfi_restore 7
 2578              		.cfi_def_cfa_offset 0
 2579 0038 7047     		bx	lr
 2580              	.L136:
 2581 003a 00BF     		.align	2
 2582              	.L135:
 2583 003c 00380240 		.word	1073887232
 2584              		.cfi_endproc
 2585              	.LFE165:
 2587              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 2588              		.align	1
 2589              		.global	RCC_APB2PeriphClockCmd
 2590              		.syntax unified
 2591              		.thumb
 2592              		.thumb_func
 2594              	RCC_APB2PeriphClockCmd:
 2595              	.LFB166:
2238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
2241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it.
2244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 85


2245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_EXTIT:  EXTIIT clock
2258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2596              		.loc 1 2276 1
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 8
 2599              		@ frame_needed = 1, uses_anonymous_args = 0
 2600              		@ link register save eliminated.
 2601 0000 80B4     		push	{r7}
 2602              	.LCFI211:
 2603              		.cfi_def_cfa_offset 4
 2604              		.cfi_offset 7, -4
 2605 0002 83B0     		sub	sp, sp, #12
 2606              	.LCFI212:
 2607              		.cfi_def_cfa_offset 16
 2608 0004 00AF     		add	r7, sp, #0
 2609              	.LCFI213:
 2610              		.cfi_def_cfa_register 7
 2611 0006 7860     		str	r0, [r7, #4]
 2612 0008 0B46     		mov	r3, r1
 2613 000a FB70     		strb	r3, [r7, #3]
2277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
2279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2614              		.loc 1 2281 6
 2615 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 86


 2616 000e 002B     		cmp	r3, #0
 2617 0010 06D0     		beq	.L138
2282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 2618              		.loc 1 2283 18
 2619 0012 0A4B     		ldr	r3, .L141
 2620 0014 5A6C     		ldr	r2, [r3, #68]
 2621 0016 0949     		ldr	r1, .L141
 2622 0018 7B68     		ldr	r3, [r7, #4]
 2623 001a 1343     		orrs	r3, r3, r2
 2624 001c 4B64     		str	r3, [r1, #68]
2284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
2288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2625              		.loc 1 2289 1
 2626 001e 06E0     		b	.L140
 2627              	.L138:
2287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2628              		.loc 1 2287 18
 2629 0020 064B     		ldr	r3, .L141
 2630 0022 5A6C     		ldr	r2, [r3, #68]
2287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2631              		.loc 1 2287 21
 2632 0024 7B68     		ldr	r3, [r7, #4]
 2633 0026 DB43     		mvns	r3, r3
2287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2634              		.loc 1 2287 18
 2635 0028 0449     		ldr	r1, .L141
 2636 002a 1340     		ands	r3, r3, r2
 2637 002c 4B64     		str	r3, [r1, #68]
 2638              	.L140:
 2639              		.loc 1 2289 1
 2640 002e 00BF     		nop
 2641 0030 0C37     		adds	r7, r7, #12
 2642              	.LCFI214:
 2643              		.cfi_def_cfa_offset 4
 2644 0032 BD46     		mov	sp, r7
 2645              	.LCFI215:
 2646              		.cfi_def_cfa_register 13
 2647              		@ sp needed
 2648 0034 5DF8047B 		ldr	r7, [sp], #4
 2649              	.LCFI216:
 2650              		.cfi_restore 7
 2651              		.cfi_def_cfa_offset 0
 2652 0038 7047     		bx	lr
 2653              	.L142:
 2654 003a 00BF     		.align	2
 2655              	.L141:
 2656 003c 00380240 		.word	1073887232
 2657              		.cfi_endproc
 2658              	.LFE166:
 2660              		.section	.text.RCC_AHB1PeriphResetCmd,"ax",%progbits
 2661              		.align	1
 2662              		.global	RCC_AHB1PeriphResetCmd
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 87


 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2667              	RCC_AHB1PeriphResetCmd:
 2668              	.LFB167:
2290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB1 peripheral reset.
2293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1Periph: specifies the AHB1 peripheral to reset.
2294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:   GPIOA clock
2296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:   GPIOB clock 
2297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:   GPIOC clock
2298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:   GPIOD clock
2299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:   GPIOE clock
2300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:   GPIOF clock
2301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
2302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
2303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:   GPIOI clock
2304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:   GPIOJ clock (STM32F42xxx/43xxx devices) 
2305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:   GPIOK clock (STM32F42xxx/43xxxdevices)   
2306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:     CRC clock
2307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:    DMA1 clock
2308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:    DMA2 clock
2309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:   DMA2D clock (STM32F429xx/439xx devices)   
2310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC: Ethernet MAC clock
2311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:  USB OTG HS clock
2312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_RNG:     RNG clock for STM32F410xx devices   
2313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphResetCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2669              		.loc 1 2318 1
 2670              		.cfi_startproc
 2671              		@ args = 0, pretend = 0, frame = 8
 2672              		@ frame_needed = 1, uses_anonymous_args = 0
 2673              		@ link register save eliminated.
 2674 0000 80B4     		push	{r7}
 2675              	.LCFI217:
 2676              		.cfi_def_cfa_offset 4
 2677              		.cfi_offset 7, -4
 2678 0002 83B0     		sub	sp, sp, #12
 2679              	.LCFI218:
 2680              		.cfi_def_cfa_offset 16
 2681 0004 00AF     		add	r7, sp, #0
 2682              	.LCFI219:
 2683              		.cfi_def_cfa_register 7
 2684 0006 7860     		str	r0, [r7, #4]
 2685 0008 0B46     		mov	r3, r1
 2686 000a FB70     		strb	r3, [r7, #3]
2319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_RESET_PERIPH(RCC_AHB1Periph));
2321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 88


 2687              		.loc 1 2323 6
 2688 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2689 000e 002B     		cmp	r3, #0
 2690 0010 06D0     		beq	.L144
2324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR |= RCC_AHB1Periph;
 2691              		.loc 1 2325 19
 2692 0012 0A4B     		ldr	r3, .L147
 2693 0014 1A69     		ldr	r2, [r3, #16]
 2694 0016 0949     		ldr	r1, .L147
 2695 0018 7B68     		ldr	r3, [r7, #4]
 2696 001a 1343     		orrs	r3, r3, r2
 2697 001c 0B61     		str	r3, [r1, #16]
2326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR &= ~RCC_AHB1Periph;
2330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2698              		.loc 1 2331 1
 2699 001e 06E0     		b	.L146
 2700              	.L144:
2329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2701              		.loc 1 2329 19
 2702 0020 064B     		ldr	r3, .L147
 2703 0022 1A69     		ldr	r2, [r3, #16]
2329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2704              		.loc 1 2329 22
 2705 0024 7B68     		ldr	r3, [r7, #4]
 2706 0026 DB43     		mvns	r3, r3
2329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2707              		.loc 1 2329 19
 2708 0028 0449     		ldr	r1, .L147
 2709 002a 1340     		ands	r3, r3, r2
 2710 002c 0B61     		str	r3, [r1, #16]
 2711              	.L146:
 2712              		.loc 1 2331 1
 2713 002e 00BF     		nop
 2714 0030 0C37     		adds	r7, r7, #12
 2715              	.LCFI220:
 2716              		.cfi_def_cfa_offset 4
 2717 0032 BD46     		mov	sp, r7
 2718              	.LCFI221:
 2719              		.cfi_def_cfa_register 13
 2720              		@ sp needed
 2721 0034 5DF8047B 		ldr	r7, [sp], #4
 2722              	.LCFI222:
 2723              		.cfi_restore 7
 2724              		.cfi_def_cfa_offset 0
 2725 0038 7047     		bx	lr
 2726              	.L148:
 2727 003a 00BF     		.align	2
 2728              	.L147:
 2729 003c 00380240 		.word	1073887232
 2730              		.cfi_endproc
 2731              	.LFE167:
 2733              		.section	.text.RCC_AHB2PeriphResetCmd,"ax",%progbits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 89


 2734              		.align	1
 2735              		.global	RCC_AHB2PeriphResetCmd
 2736              		.syntax unified
 2737              		.thumb
 2738              		.thumb_func
 2740              	RCC_AHB2PeriphResetCmd:
 2741              	.LFB168:
2332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB2 peripheral reset.
2335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB2Periph: specifies the AHB2 peripheral to reset.
2336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock for STM32F40_41xxx/STM32F412xG/STM32F413_423xx
2341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
2342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphResetCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2742              		.loc 1 2347 1
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 8
 2745              		@ frame_needed = 1, uses_anonymous_args = 0
 2746              		@ link register save eliminated.
 2747 0000 80B4     		push	{r7}
 2748              	.LCFI223:
 2749              		.cfi_def_cfa_offset 4
 2750              		.cfi_offset 7, -4
 2751 0002 83B0     		sub	sp, sp, #12
 2752              	.LCFI224:
 2753              		.cfi_def_cfa_offset 16
 2754 0004 00AF     		add	r7, sp, #0
 2755              	.LCFI225:
 2756              		.cfi_def_cfa_register 7
 2757 0006 7860     		str	r0, [r7, #4]
 2758 0008 0B46     		mov	r3, r1
 2759 000a FB70     		strb	r3, [r7, #3]
2348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
2350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2760              		.loc 1 2352 6
 2761 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2762 000e 002B     		cmp	r3, #0
 2763 0010 06D0     		beq	.L150
2353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR |= RCC_AHB2Periph;
 2764              		.loc 1 2354 19
 2765 0012 0A4B     		ldr	r3, .L153
 2766 0014 5A69     		ldr	r2, [r3, #20]
 2767 0016 0949     		ldr	r1, .L153
 2768 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 90


 2769 001a 1343     		orrs	r3, r3, r2
 2770 001c 4B61     		str	r3, [r1, #20]
2355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR &= ~RCC_AHB2Periph;
2359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2771              		.loc 1 2360 1
 2772 001e 06E0     		b	.L152
 2773              	.L150:
2358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2774              		.loc 1 2358 19
 2775 0020 064B     		ldr	r3, .L153
 2776 0022 5A69     		ldr	r2, [r3, #20]
2358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2777              		.loc 1 2358 22
 2778 0024 7B68     		ldr	r3, [r7, #4]
 2779 0026 DB43     		mvns	r3, r3
2358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2780              		.loc 1 2358 19
 2781 0028 0449     		ldr	r1, .L153
 2782 002a 1340     		ands	r3, r3, r2
 2783 002c 4B61     		str	r3, [r1, #20]
 2784              	.L152:
 2785              		.loc 1 2360 1
 2786 002e 00BF     		nop
 2787 0030 0C37     		adds	r7, r7, #12
 2788              	.LCFI226:
 2789              		.cfi_def_cfa_offset 4
 2790 0032 BD46     		mov	sp, r7
 2791              	.LCFI227:
 2792              		.cfi_def_cfa_register 13
 2793              		@ sp needed
 2794 0034 5DF8047B 		ldr	r7, [sp], #4
 2795              	.LCFI228:
 2796              		.cfi_restore 7
 2797              		.cfi_def_cfa_offset 0
 2798 0038 7047     		bx	lr
 2799              	.L154:
 2800 003a 00BF     		.align	2
 2801              	.L153:
 2802 003c 00380240 		.word	1073887232
 2803              		.cfi_endproc
 2804              	.LFE168:
 2806              		.section	.text.RCC_AHB3PeriphResetCmd,"ax",%progbits
 2807              		.align	1
 2808              		.global	RCC_AHB3PeriphResetCmd
 2809              		.syntax unified
 2810              		.thumb
 2811              		.thumb_func
 2813              	RCC_AHB3PeriphResetCmd:
 2814              	.LFB169:
2361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB3 peripheral reset.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 91


2365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB3Periph: specifies the AHB3 peripheral to reset.
2366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG, STM32F413_423xx and STM32F4
2368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F446xx/STM32F469_479xx devices)
2369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphResetCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2815              		.loc 1 2374 1
 2816              		.cfi_startproc
 2817              		@ args = 0, pretend = 0, frame = 8
 2818              		@ frame_needed = 1, uses_anonymous_args = 0
 2819              		@ link register save eliminated.
 2820 0000 80B4     		push	{r7}
 2821              	.LCFI229:
 2822              		.cfi_def_cfa_offset 4
 2823              		.cfi_offset 7, -4
 2824 0002 83B0     		sub	sp, sp, #12
 2825              	.LCFI230:
 2826              		.cfi_def_cfa_offset 16
 2827 0004 00AF     		add	r7, sp, #0
 2828              	.LCFI231:
 2829              		.cfi_def_cfa_register 7
 2830 0006 7860     		str	r0, [r7, #4]
 2831 0008 0B46     		mov	r3, r1
 2832 000a FB70     		strb	r3, [r7, #3]
2375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
2377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2833              		.loc 1 2379 6
 2834 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2835 000e 002B     		cmp	r3, #0
 2836 0010 06D0     		beq	.L156
2380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR |= RCC_AHB3Periph;
 2837              		.loc 1 2381 19
 2838 0012 0A4B     		ldr	r3, .L159
 2839 0014 9A69     		ldr	r2, [r3, #24]
 2840 0016 0949     		ldr	r1, .L159
 2841 0018 7B68     		ldr	r3, [r7, #4]
 2842 001a 1343     		orrs	r3, r3, r2
 2843 001c 8B61     		str	r3, [r1, #24]
2382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR &= ~RCC_AHB3Periph;
2386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2844              		.loc 1 2387 1
 2845 001e 06E0     		b	.L158
 2846              	.L156:
2385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2847              		.loc 1 2385 19
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 92


 2848 0020 064B     		ldr	r3, .L159
 2849 0022 9A69     		ldr	r2, [r3, #24]
2385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2850              		.loc 1 2385 22
 2851 0024 7B68     		ldr	r3, [r7, #4]
 2852 0026 DB43     		mvns	r3, r3
2385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2853              		.loc 1 2385 19
 2854 0028 0449     		ldr	r1, .L159
 2855 002a 1340     		ands	r3, r3, r2
 2856 002c 8B61     		str	r3, [r1, #24]
 2857              	.L158:
 2858              		.loc 1 2387 1
 2859 002e 00BF     		nop
 2860 0030 0C37     		adds	r7, r7, #12
 2861              	.LCFI232:
 2862              		.cfi_def_cfa_offset 4
 2863 0032 BD46     		mov	sp, r7
 2864              	.LCFI233:
 2865              		.cfi_def_cfa_register 13
 2866              		@ sp needed
 2867 0034 5DF8047B 		ldr	r7, [sp], #4
 2868              	.LCFI234:
 2869              		.cfi_restore 7
 2870              		.cfi_def_cfa_offset 0
 2871 0038 7047     		bx	lr
 2872              	.L160:
 2873 003a 00BF     		.align	2
 2874              	.L159:
 2875 003c 00380240 		.word	1073887232
 2876              		.cfi_endproc
 2877              	.LFE169:
 2879              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 2880              		.align	1
 2881              		.global	RCC_APB1PeriphResetCmd
 2882              		.syntax unified
 2883              		.thumb
 2884              		.thumb_func
 2886              	RCC_APB1PeriphResetCmd:
 2887              	.LFB170:
2388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
2392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
2393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 93


2405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:  SPDIF RX clock (STM32F446xx devices) 
2408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:FMPI2C1 clock
2416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock(STM32F446xx devices)
2419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock  
2423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2888              		.loc 1 2428 1
 2889              		.cfi_startproc
 2890              		@ args = 0, pretend = 0, frame = 8
 2891              		@ frame_needed = 1, uses_anonymous_args = 0
 2892              		@ link register save eliminated.
 2893 0000 80B4     		push	{r7}
 2894              	.LCFI235:
 2895              		.cfi_def_cfa_offset 4
 2896              		.cfi_offset 7, -4
 2897 0002 83B0     		sub	sp, sp, #12
 2898              	.LCFI236:
 2899              		.cfi_def_cfa_offset 16
 2900 0004 00AF     		add	r7, sp, #0
 2901              	.LCFI237:
 2902              		.cfi_def_cfa_register 7
 2903 0006 7860     		str	r0, [r7, #4]
 2904 0008 0B46     		mov	r3, r1
 2905 000a FB70     		strb	r3, [r7, #3]
2429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
2431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2906              		.loc 1 2432 6
 2907 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2908 000e 002B     		cmp	r3, #0
 2909 0010 06D0     		beq	.L162
2433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 2910              		.loc 1 2434 19
 2911 0012 0A4B     		ldr	r3, .L165
 2912 0014 1A6A     		ldr	r2, [r3, #32]
 2913 0016 0949     		ldr	r1, .L165
 2914 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 94


 2915 001a 1343     		orrs	r3, r3, r2
 2916 001c 0B62     		str	r3, [r1, #32]
2435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
2439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2917              		.loc 1 2440 1
 2918 001e 06E0     		b	.L164
 2919              	.L162:
2438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2920              		.loc 1 2438 19
 2921 0020 064B     		ldr	r3, .L165
 2922 0022 1A6A     		ldr	r2, [r3, #32]
2438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2923              		.loc 1 2438 22
 2924 0024 7B68     		ldr	r3, [r7, #4]
 2925 0026 DB43     		mvns	r3, r3
2438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2926              		.loc 1 2438 19
 2927 0028 0449     		ldr	r1, .L165
 2928 002a 1340     		ands	r3, r3, r2
 2929 002c 0B62     		str	r3, [r1, #32]
 2930              	.L164:
 2931              		.loc 1 2440 1
 2932 002e 00BF     		nop
 2933 0030 0C37     		adds	r7, r7, #12
 2934              	.LCFI238:
 2935              		.cfi_def_cfa_offset 4
 2936 0032 BD46     		mov	sp, r7
 2937              	.LCFI239:
 2938              		.cfi_def_cfa_register 13
 2939              		@ sp needed
 2940 0034 5DF8047B 		ldr	r7, [sp], #4
 2941              	.LCFI240:
 2942              		.cfi_restore 7
 2943              		.cfi_def_cfa_offset 0
 2944 0038 7047     		bx	lr
 2945              	.L166:
 2946 003a 00BF     		.align	2
 2947              	.L165:
 2948 003c 00380240 		.word	1073887232
 2949              		.cfi_endproc
 2950              	.LFE170:
 2952              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 2953              		.align	1
 2954              		.global	RCC_APB2PeriphResetCmd
 2955              		.syntax unified
 2956              		.thumb
 2957              		.thumb_func
 2959              	RCC_APB2PeriphResetCmd:
 2960              	.LFB171:
2441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
2444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 95


2445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock  
2456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2961              		.loc 1 2475 1
 2962              		.cfi_startproc
 2963              		@ args = 0, pretend = 0, frame = 8
 2964              		@ frame_needed = 1, uses_anonymous_args = 0
 2965              		@ link register save eliminated.
 2966 0000 80B4     		push	{r7}
 2967              	.LCFI241:
 2968              		.cfi_def_cfa_offset 4
 2969              		.cfi_offset 7, -4
 2970 0002 83B0     		sub	sp, sp, #12
 2971              	.LCFI242:
 2972              		.cfi_def_cfa_offset 16
 2973 0004 00AF     		add	r7, sp, #0
 2974              	.LCFI243:
 2975              		.cfi_def_cfa_register 7
 2976 0006 7860     		str	r0, [r7, #4]
 2977 0008 0B46     		mov	r3, r1
 2978 000a FB70     		strb	r3, [r7, #3]
2476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_RESET_PERIPH(RCC_APB2Periph));
2478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2979              		.loc 1 2479 6
 2980 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2981 000e 002B     		cmp	r3, #0
 2982 0010 06D0     		beq	.L168
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 96


2480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 2983              		.loc 1 2481 19
 2984 0012 0A4B     		ldr	r3, .L171
 2985 0014 5A6A     		ldr	r2, [r3, #36]
 2986 0016 0949     		ldr	r1, .L171
 2987 0018 7B68     		ldr	r3, [r7, #4]
 2988 001a 1343     		orrs	r3, r3, r2
 2989 001c 4B62     		str	r3, [r1, #36]
2482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
2486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2990              		.loc 1 2487 1
 2991 001e 06E0     		b	.L170
 2992              	.L168:
2485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2993              		.loc 1 2485 19
 2994 0020 064B     		ldr	r3, .L171
 2995 0022 5A6A     		ldr	r2, [r3, #36]
2485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2996              		.loc 1 2485 22
 2997 0024 7B68     		ldr	r3, [r7, #4]
 2998 0026 DB43     		mvns	r3, r3
2485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2999              		.loc 1 2485 19
 3000 0028 0449     		ldr	r1, .L171
 3001 002a 1340     		ands	r3, r3, r2
 3002 002c 4B62     		str	r3, [r1, #36]
 3003              	.L170:
 3004              		.loc 1 2487 1
 3005 002e 00BF     		nop
 3006 0030 0C37     		adds	r7, r7, #12
 3007              	.LCFI244:
 3008              		.cfi_def_cfa_offset 4
 3009 0032 BD46     		mov	sp, r7
 3010              	.LCFI245:
 3011              		.cfi_def_cfa_register 13
 3012              		@ sp needed
 3013 0034 5DF8047B 		ldr	r7, [sp], #4
 3014              	.LCFI246:
 3015              		.cfi_restore 7
 3016              		.cfi_def_cfa_offset 0
 3017 0038 7047     		bx	lr
 3018              	.L172:
 3019 003a 00BF     		.align	2
 3020              	.L171:
 3021 003c 00380240 		.word	1073887232
 3022              		.cfi_endproc
 3023              	.LFE171:
 3025              		.section	.text.RCC_AHB1PeriphClockLPModeCmd,"ax",%progbits
 3026              		.align	1
 3027              		.global	RCC_AHB1PeriphClockLPModeCmd
 3028              		.syntax unified
 3029              		.thumb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 97


 3030              		.thumb_func
 3032              	RCC_AHB1PeriphClockLPModeCmd:
 3033              	.LFB172:
2488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock during Low Power (Sleep) mode.
2491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
2496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
2498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
2499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
2500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
2501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
2502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
2503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
2506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
2507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)   
2508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
2509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
2510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
2511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
2512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices) 
2513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
2514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
2515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
2516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
2517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
2518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
2519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockLPModeCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3034              		.loc 1 2524 1
 3035              		.cfi_startproc
 3036              		@ args = 0, pretend = 0, frame = 8
 3037              		@ frame_needed = 1, uses_anonymous_args = 0
 3038              		@ link register save eliminated.
 3039 0000 80B4     		push	{r7}
 3040              	.LCFI247:
 3041              		.cfi_def_cfa_offset 4
 3042              		.cfi_offset 7, -4
 3043 0002 83B0     		sub	sp, sp, #12
 3044              	.LCFI248:
 3045              		.cfi_def_cfa_offset 16
 3046 0004 00AF     		add	r7, sp, #0
 3047              	.LCFI249:
 3048              		.cfi_def_cfa_register 7
 3049 0006 7860     		str	r0, [r7, #4]
 3050 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 98


 3051 000a FB70     		strb	r3, [r7, #3]
2525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_LPMODE_PERIPH(RCC_AHB1Periph));
2527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 3052              		.loc 1 2528 6
 3053 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3054 000e 002B     		cmp	r3, #0
 3055 0010 06D0     		beq	.L174
2529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR |= RCC_AHB1Periph;
 3056              		.loc 1 2530 20
 3057 0012 0A4B     		ldr	r3, .L177
 3058 0014 1A6D     		ldr	r2, [r3, #80]
 3059 0016 0949     		ldr	r1, .L177
 3060 0018 7B68     		ldr	r3, [r7, #4]
 3061 001a 1343     		orrs	r3, r3, r2
 3062 001c 0B65     		str	r3, [r1, #80]
2531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR &= ~RCC_AHB1Periph;
2535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3063              		.loc 1 2536 1
 3064 001e 06E0     		b	.L176
 3065              	.L174:
2534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3066              		.loc 1 2534 20
 3067 0020 064B     		ldr	r3, .L177
 3068 0022 1A6D     		ldr	r2, [r3, #80]
2534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3069              		.loc 1 2534 23
 3070 0024 7B68     		ldr	r3, [r7, #4]
 3071 0026 DB43     		mvns	r3, r3
2534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3072              		.loc 1 2534 20
 3073 0028 0449     		ldr	r1, .L177
 3074 002a 1340     		ands	r3, r3, r2
 3075 002c 0B65     		str	r3, [r1, #80]
 3076              	.L176:
 3077              		.loc 1 2536 1
 3078 002e 00BF     		nop
 3079 0030 0C37     		adds	r7, r7, #12
 3080              	.LCFI250:
 3081              		.cfi_def_cfa_offset 4
 3082 0032 BD46     		mov	sp, r7
 3083              	.LCFI251:
 3084              		.cfi_def_cfa_register 13
 3085              		@ sp needed
 3086 0034 5DF8047B 		ldr	r7, [sp], #4
 3087              	.LCFI252:
 3088              		.cfi_restore 7
 3089              		.cfi_def_cfa_offset 0
 3090 0038 7047     		bx	lr
 3091              	.L178:
 3092 003a 00BF     		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 99


 3093              	.L177:
 3094 003c 00380240 		.word	1073887232
 3095              		.cfi_endproc
 3096              	.LFE172:
 3098              		.section	.text.RCC_AHB2PeriphClockLPModeCmd,"ax",%progbits
 3099              		.align	1
 3100              		.global	RCC_AHB2PeriphClockLPModeCmd
 3101              		.syntax unified
 3102              		.thumb
 3103              		.thumb_func
 3105              	RCC_AHB2PeriphClockLPModeCmd:
 3106              	.LFB173:
2537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock during Low Power (Sleep) mode.
2540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           power consumption.
2542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
2545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
2550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock  
2551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockLPModeCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3107              		.loc 1 2556 1
 3108              		.cfi_startproc
 3109              		@ args = 0, pretend = 0, frame = 8
 3110              		@ frame_needed = 1, uses_anonymous_args = 0
 3111              		@ link register save eliminated.
 3112 0000 80B4     		push	{r7}
 3113              	.LCFI253:
 3114              		.cfi_def_cfa_offset 4
 3115              		.cfi_offset 7, -4
 3116 0002 83B0     		sub	sp, sp, #12
 3117              	.LCFI254:
 3118              		.cfi_def_cfa_offset 16
 3119 0004 00AF     		add	r7, sp, #0
 3120              	.LCFI255:
 3121              		.cfi_def_cfa_register 7
 3122 0006 7860     		str	r0, [r7, #4]
 3123 0008 0B46     		mov	r3, r1
 3124 000a FB70     		strb	r3, [r7, #3]
2557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
2559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 3125              		.loc 1 2560 6
 3126 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3127 000e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 100


 3128 0010 06D0     		beq	.L180
2561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR |= RCC_AHB2Periph;
 3129              		.loc 1 2562 20
 3130 0012 0A4B     		ldr	r3, .L183
 3131 0014 5A6D     		ldr	r2, [r3, #84]
 3132 0016 0949     		ldr	r1, .L183
 3133 0018 7B68     		ldr	r3, [r7, #4]
 3134 001a 1343     		orrs	r3, r3, r2
 3135 001c 4B65     		str	r3, [r1, #84]
2563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR &= ~RCC_AHB2Periph;
2567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3136              		.loc 1 2568 1
 3137 001e 06E0     		b	.L182
 3138              	.L180:
2566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3139              		.loc 1 2566 20
 3140 0020 064B     		ldr	r3, .L183
 3141 0022 5A6D     		ldr	r2, [r3, #84]
2566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3142              		.loc 1 2566 23
 3143 0024 7B68     		ldr	r3, [r7, #4]
 3144 0026 DB43     		mvns	r3, r3
2566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3145              		.loc 1 2566 20
 3146 0028 0449     		ldr	r1, .L183
 3147 002a 1340     		ands	r3, r3, r2
 3148 002c 4B65     		str	r3, [r1, #84]
 3149              	.L182:
 3150              		.loc 1 2568 1
 3151 002e 00BF     		nop
 3152 0030 0C37     		adds	r7, r7, #12
 3153              	.LCFI256:
 3154              		.cfi_def_cfa_offset 4
 3155 0032 BD46     		mov	sp, r7
 3156              	.LCFI257:
 3157              		.cfi_def_cfa_register 13
 3158              		@ sp needed
 3159 0034 5DF8047B 		ldr	r7, [sp], #4
 3160              	.LCFI258:
 3161              		.cfi_restore 7
 3162              		.cfi_def_cfa_offset 0
 3163 0038 7047     		bx	lr
 3164              	.L184:
 3165 003a 00BF     		.align	2
 3166              	.L183:
 3167 003c 00380240 		.word	1073887232
 3168              		.cfi_endproc
 3169              	.LFE173:
 3171              		.section	.text.RCC_AHB3PeriphClockLPModeCmd,"ax",%progbits
 3172              		.align	1
 3173              		.global	RCC_AHB3PeriphClockLPModeCmd
 3174              		.syntax unified
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 101


 3175              		.thumb
 3176              		.thumb_func
 3178              	RCC_AHB3PeriphClockLPModeCmd:
 3179              	.LFB174:
2569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock during Low Power (Sleep) mode.
2573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
2578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG/STM32F413_423xx/STM32F429x/4
2580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F413_423xx/STM32F446xx/STM32F469_479xx device
2581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockLPModeCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3180              		.loc 1 2586 1
 3181              		.cfi_startproc
 3182              		@ args = 0, pretend = 0, frame = 8
 3183              		@ frame_needed = 1, uses_anonymous_args = 0
 3184              		@ link register save eliminated.
 3185 0000 80B4     		push	{r7}
 3186              	.LCFI259:
 3187              		.cfi_def_cfa_offset 4
 3188              		.cfi_offset 7, -4
 3189 0002 83B0     		sub	sp, sp, #12
 3190              	.LCFI260:
 3191              		.cfi_def_cfa_offset 16
 3192 0004 00AF     		add	r7, sp, #0
 3193              	.LCFI261:
 3194              		.cfi_def_cfa_register 7
 3195 0006 7860     		str	r0, [r7, #4]
 3196 0008 0B46     		mov	r3, r1
 3197 000a FB70     		strb	r3, [r7, #3]
2587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
2589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 3198              		.loc 1 2590 6
 3199 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3200 000e 002B     		cmp	r3, #0
 3201 0010 06D0     		beq	.L186
2591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR |= RCC_AHB3Periph;
 3202              		.loc 1 2592 20
 3203 0012 0A4B     		ldr	r3, .L189
 3204 0014 9A6D     		ldr	r2, [r3, #88]
 3205 0016 0949     		ldr	r1, .L189
 3206 0018 7B68     		ldr	r3, [r7, #4]
 3207 001a 1343     		orrs	r3, r3, r2
 3208 001c 8B65     		str	r3, [r1, #88]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 102


2593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR &= ~RCC_AHB3Periph;
2597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3209              		.loc 1 2598 1
 3210 001e 06E0     		b	.L188
 3211              	.L186:
2596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3212              		.loc 1 2596 20
 3213 0020 064B     		ldr	r3, .L189
 3214 0022 9A6D     		ldr	r2, [r3, #88]
2596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3215              		.loc 1 2596 23
 3216 0024 7B68     		ldr	r3, [r7, #4]
 3217 0026 DB43     		mvns	r3, r3
2596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3218              		.loc 1 2596 20
 3219 0028 0449     		ldr	r1, .L189
 3220 002a 1340     		ands	r3, r3, r2
 3221 002c 8B65     		str	r3, [r1, #88]
 3222              	.L188:
 3223              		.loc 1 2598 1
 3224 002e 00BF     		nop
 3225 0030 0C37     		adds	r7, r7, #12
 3226              	.LCFI262:
 3227              		.cfi_def_cfa_offset 4
 3228 0032 BD46     		mov	sp, r7
 3229              	.LCFI263:
 3230              		.cfi_def_cfa_register 13
 3231              		@ sp needed
 3232 0034 5DF8047B 		ldr	r7, [sp], #4
 3233              	.LCFI264:
 3234              		.cfi_restore 7
 3235              		.cfi_def_cfa_offset 0
 3236 0038 7047     		bx	lr
 3237              	.L190:
 3238 003a 00BF     		.align	2
 3239              	.L189:
 3240 003c 00380240 		.word	1073887232
 3241              		.cfi_endproc
 3242              	.LFE174:
 3244              		.section	.text.RCC_APB1PeriphClockLPModeCmd,"ax",%progbits
 3245              		.align	1
 3246              		.global	RCC_APB1PeriphClockLPModeCmd
 3247              		.syntax unified
 3248              		.thumb
 3249              		.thumb_func
 3251              	RCC_APB1PeriphClockLPModeCmd:
 3252              	.LFB175:
2599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB1 peripheral clock during Low Power (Sleep) mode.
2603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 103


2605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
2608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:   SPDIF RX clock (STM32F446xx devices) 
2623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:   FMPI2C1 clock
2631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
2634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockLPModeCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3253              		.loc 1 2643 1
 3254              		.cfi_startproc
 3255              		@ args = 0, pretend = 0, frame = 8
 3256              		@ frame_needed = 1, uses_anonymous_args = 0
 3257              		@ link register save eliminated.
 3258 0000 80B4     		push	{r7}
 3259              	.LCFI265:
 3260              		.cfi_def_cfa_offset 4
 3261              		.cfi_offset 7, -4
 3262 0002 83B0     		sub	sp, sp, #12
 3263              	.LCFI266:
 3264              		.cfi_def_cfa_offset 16
 3265 0004 00AF     		add	r7, sp, #0
 3266              	.LCFI267:
 3267              		.cfi_def_cfa_register 7
 3268 0006 7860     		str	r0, [r7, #4]
 3269 0008 0B46     		mov	r3, r1
 3270 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 104


2644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
2646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 3271              		.loc 1 2647 6
 3272 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3273 000e 002B     		cmp	r3, #0
 3274 0010 06D0     		beq	.L192
2648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR |= RCC_APB1Periph;
 3275              		.loc 1 2649 20
 3276 0012 0A4B     		ldr	r3, .L195
 3277 0014 1A6E     		ldr	r2, [r3, #96]
 3278 0016 0949     		ldr	r1, .L195
 3279 0018 7B68     		ldr	r3, [r7, #4]
 3280 001a 1343     		orrs	r3, r3, r2
 3281 001c 0B66     		str	r3, [r1, #96]
2650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR &= ~RCC_APB1Periph;
2654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3282              		.loc 1 2655 1
 3283 001e 06E0     		b	.L194
 3284              	.L192:
2653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3285              		.loc 1 2653 20
 3286 0020 064B     		ldr	r3, .L195
 3287 0022 1A6E     		ldr	r2, [r3, #96]
2653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3288              		.loc 1 2653 23
 3289 0024 7B68     		ldr	r3, [r7, #4]
 3290 0026 DB43     		mvns	r3, r3
2653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3291              		.loc 1 2653 20
 3292 0028 0449     		ldr	r1, .L195
 3293 002a 1340     		ands	r3, r3, r2
 3294 002c 0B66     		str	r3, [r1, #96]
 3295              	.L194:
 3296              		.loc 1 2655 1
 3297 002e 00BF     		nop
 3298 0030 0C37     		adds	r7, r7, #12
 3299              	.LCFI268:
 3300              		.cfi_def_cfa_offset 4
 3301 0032 BD46     		mov	sp, r7
 3302              	.LCFI269:
 3303              		.cfi_def_cfa_register 13
 3304              		@ sp needed
 3305 0034 5DF8047B 		ldr	r7, [sp], #4
 3306              	.LCFI270:
 3307              		.cfi_restore 7
 3308              		.cfi_def_cfa_offset 0
 3309 0038 7047     		bx	lr
 3310              	.L196:
 3311 003a 00BF     		.align	2
 3312              	.L195:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 105


 3313 003c 00380240 		.word	1073887232
 3314              		.cfi_endproc
 3315              	.LFE175:
 3317              		.section	.text.RCC_APB2PeriphClockLPModeCmd,"ax",%progbits
 3318              		.align	1
 3319              		.global	RCC_APB2PeriphClockLPModeCmd
 3320              		.syntax unified
 3321              		.thumb
 3322              		.thumb_func
 3324              	RCC_APB2PeriphClockLPModeCmd:
 3325              	.LFB176:
2656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB2 peripheral clock during Low Power (Sleep) mode.
2659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
2664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_EXTIT:  EXTIIT clock
2677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices)
2684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockLPModeCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3326              		.loc 1 2695 1
 3327              		.cfi_startproc
 3328              		@ args = 0, pretend = 0, frame = 8
 3329              		@ frame_needed = 1, uses_anonymous_args = 0
 3330              		@ link register save eliminated.
 3331 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 106


 3332              	.LCFI271:
 3333              		.cfi_def_cfa_offset 4
 3334              		.cfi_offset 7, -4
 3335 0002 83B0     		sub	sp, sp, #12
 3336              	.LCFI272:
 3337              		.cfi_def_cfa_offset 16
 3338 0004 00AF     		add	r7, sp, #0
 3339              	.LCFI273:
 3340              		.cfi_def_cfa_register 7
 3341 0006 7860     		str	r0, [r7, #4]
 3342 0008 0B46     		mov	r3, r1
 3343 000a FB70     		strb	r3, [r7, #3]
2696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
2698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 3344              		.loc 1 2699 6
 3345 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3346 000e 002B     		cmp	r3, #0
 3347 0010 06D0     		beq	.L198
2700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR |= RCC_APB2Periph;
 3348              		.loc 1 2701 20
 3349 0012 0A4B     		ldr	r3, .L201
 3350 0014 5A6E     		ldr	r2, [r3, #100]
 3351 0016 0949     		ldr	r1, .L201
 3352 0018 7B68     		ldr	r3, [r7, #4]
 3353 001a 1343     		orrs	r3, r3, r2
 3354 001c 4B66     		str	r3, [r1, #100]
2702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR &= ~RCC_APB2Periph;
2706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3355              		.loc 1 2707 1
 3356 001e 06E0     		b	.L200
 3357              	.L198:
2705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3358              		.loc 1 2705 20
 3359 0020 064B     		ldr	r3, .L201
 3360 0022 5A6E     		ldr	r2, [r3, #100]
2705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3361              		.loc 1 2705 23
 3362 0024 7B68     		ldr	r3, [r7, #4]
 3363 0026 DB43     		mvns	r3, r3
2705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3364              		.loc 1 2705 20
 3365 0028 0449     		ldr	r1, .L201
 3366 002a 1340     		ands	r3, r3, r2
 3367 002c 4B66     		str	r3, [r1, #100]
 3368              	.L200:
 3369              		.loc 1 2707 1
 3370 002e 00BF     		nop
 3371 0030 0C37     		adds	r7, r7, #12
 3372              	.LCFI274:
 3373              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 107


 3374 0032 BD46     		mov	sp, r7
 3375              	.LCFI275:
 3376              		.cfi_def_cfa_register 13
 3377              		@ sp needed
 3378 0034 5DF8047B 		ldr	r7, [sp], #4
 3379              	.LCFI276:
 3380              		.cfi_restore 7
 3381              		.cfi_def_cfa_offset 0
 3382 0038 7047     		bx	lr
 3383              	.L202:
 3384 003a 00BF     		.align	2
 3385              	.L201:
 3386 003c 00380240 		.word	1073887232
 3387              		.cfi_endproc
 3388              	.LFE176:
 3390              		.section	.text.RCC_LSEModeConfig,"ax",%progbits
 3391              		.align	1
 3392              		.global	RCC_LSEModeConfig
 3393              		.syntax unified
 3394              		.thumb
 3395              		.thumb_func
 3397              	RCC_LSEModeConfig:
 3398              	.LFB177:
2708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the External Low Speed oscillator mode (LSE mode).
2711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This mode is only available for STM32F410xx/STM32F411xx/STM32F446xx/STM32F469_479xx devic
2712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  Mode: specifies the LSE mode.
2713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_LOWPOWER_MODE:  LSE oscillator in low power mode.
2715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_HIGHDRIVE_MODE: LSE oscillator in High Drive mode.
2716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LSEModeConfig(uint8_t RCC_Mode)
2719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3399              		.loc 1 2719 1
 3400              		.cfi_startproc
 3401              		@ args = 0, pretend = 0, frame = 8
 3402              		@ frame_needed = 1, uses_anonymous_args = 0
 3403              		@ link register save eliminated.
 3404 0000 80B4     		push	{r7}
 3405              	.LCFI277:
 3406              		.cfi_def_cfa_offset 4
 3407              		.cfi_offset 7, -4
 3408 0002 83B0     		sub	sp, sp, #12
 3409              	.LCFI278:
 3410              		.cfi_def_cfa_offset 16
 3411 0004 00AF     		add	r7, sp, #0
 3412              	.LCFI279:
 3413              		.cfi_def_cfa_register 7
 3414 0006 0346     		mov	r3, r0
 3415 0008 FB71     		strb	r3, [r7, #7]
2720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE_MODE(RCC_Mode));
2722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_Mode == RCC_LSE_HIGHDRIVE_MODE)
 3416              		.loc 1 2723 5
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 108


 3417 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3418 000c 012B     		cmp	r3, #1
 3419 000e 06D1     		bne	.L204
2724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
 3420              		.loc 1 2725 5
 3421 0010 094B     		ldr	r3, .L207
 3422 0012 1B6F     		ldr	r3, [r3, #112]
 3423 0014 084A     		ldr	r2, .L207
 3424 0016 43F00803 		orr	r3, r3, #8
 3425 001a 1367     		str	r3, [r2, #112]
2726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
2730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3426              		.loc 1 2731 1
 3427 001c 05E0     		b	.L206
 3428              	.L204:
2729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3429              		.loc 1 2729 5
 3430 001e 064B     		ldr	r3, .L207
 3431 0020 1B6F     		ldr	r3, [r3, #112]
 3432 0022 054A     		ldr	r2, .L207
 3433 0024 23F00803 		bic	r3, r3, #8
 3434 0028 1367     		str	r3, [r2, #112]
 3435              	.L206:
 3436              		.loc 1 2731 1
 3437 002a 00BF     		nop
 3438 002c 0C37     		adds	r7, r7, #12
 3439              	.LCFI280:
 3440              		.cfi_def_cfa_offset 4
 3441 002e BD46     		mov	sp, r7
 3442              	.LCFI281:
 3443              		.cfi_def_cfa_register 13
 3444              		@ sp needed
 3445 0030 5DF8047B 		ldr	r7, [sp], #4
 3446              	.LCFI282:
 3447              		.cfi_restore 7
 3448              		.cfi_def_cfa_offset 0
 3449 0034 7047     		bx	lr
 3450              	.L208:
 3451 0036 00BF     		.align	2
 3452              	.L207:
 3453 0038 00380240 		.word	1073887232
 3454              		.cfi_endproc
 3455              	.LFE177:
 3457              		.section	.text.RCC_ITConfig,"ax",%progbits
 3458              		.align	1
 3459              		.global	RCC_ITConfig
 3460              		.syntax unified
 3461              		.thumb
 3462              		.thumb_func
 3464              	RCC_ITConfig:
 3465              	.LFB178:
2732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 109


2733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F413_423xx)
2734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the LPTIM1 clock Source.
2736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F410xx devices.
2737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the LPTIM1 clock Source.
2738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_PCLK: LPTIM1 clock from APB1 selected.
2740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_HSI:  LPTIM1 clock from HSI selected.
2741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSI:  LPTIM1 clock from LSI selected.
2742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSE:  LPTIM1 clock from LSE selected.
2743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LPTIM1ClockSourceConfig(uint32_t RCC_ClockSource)
2746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LPTIM1_CLOCKSOURCE(RCC_ClockSource));
2749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear LPTIM1 clock source selection source bits */
2751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_LPTIM1SEL;
2752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set new LPTIM1 clock source */
2753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F413_423xx */
2756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
2758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the DSI clock Source.
2760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx devices.
2761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the DSI clock Source.
2762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PHY: DSI-PHY used as DSI byte lane clock source (usual case).
2764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PLLR: PLL_R used as DSI byte lane clock source, used in case D
2765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_DSIClockSourceConfig(uint8_t RCC_ClockSource)
2768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DSI_CLOCKSOURCE(RCC_ClockSource));
2771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_DSICLKSource_PLLR)
2773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
2775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
2779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /*  STM32F469_479xx */
2782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx) || defined(STM32F469_4
2784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the 48MHz clock Source.
2786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx/STM32F469_479xx devices.
2787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the 48MHz clock Source.
2788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLL: 48MHz from PLL selected.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 110


2790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLLSAI: 48MHz from PLLSAI selected.
2791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CK48CLKSOURCE_PLLI2SQ : 48MHz from PLLI2SQ
2792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_48MHzClockSourceConfig(uint8_t RCC_ClockSource)
2795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_48MHZ_CLOCKSOURCE(RCC_ClockSource));
2798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx) 
2799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #elif  defined(STM32F446xx)
2808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #elif defined(STM32F412xG) || defined(STM32F413_423xx)
2817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_CK48CLKSOURCE_PLLI2SQ)
2818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #else
2826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */  
2827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the SDIO clock Source.
2831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx/STM32F446xx devices.
2832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SDIO clock Source.
2833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_48MHZ: 48MHz clock selected.
2835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_SYSCLK: system clock selected.
2836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SDIOClockSourceConfig(uint8_t RCC_ClockSource)
2839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SDIO_CLOCKSOURCE(RCC_ClockSource));
2842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)   
2843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 111


2847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #elif defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
2852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #else
2861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */ 
2862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx || STM32F469_479xx */
2864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
2866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 clock gating for the specified IPs.
2868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1ClockGating: specifies the AHB1 clock gating.
2870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB1Bridge: AHB1 to APB1 clock
2872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB2Bridge: AHB1 to APB2 clock 
2873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_CM4DBG: Cortex M4 ETM clock
2874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SPARE: Spare clock
2875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SRAM: SRAM controller clock
2876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_FLITF: Flash interface clock
2877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_RCC: RCC clock
2878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1ClockGatingCmd(uint32_t RCC_AHB1ClockGating, FunctionalState NewState)
2883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCKGATING(RCC_AHB1ClockGating));
2886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
2889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->CKGATENR &= ~RCC_AHB1ClockGating;
2891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->CKGATENR |= RCC_AHB1ClockGating;
2895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the SPDIFRX clock Source.
2900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SPDIFRX clock Source.
2902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLR: SPDIFRX clock from PLL_R selected.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 112


2904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLI2SP: SPDIFRX clock from PLLI2S_P selected.
2905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SPDIFRXClockSourceConfig(uint8_t RCC_ClockSource)
2908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SPDIFRX_CLOCKSOURCE(RCC_ClockSource));
2911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SPDIFRXCLKSource_PLLI2SP)
2913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the CEC clock Source.
2924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the CEC clock Source.
2926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_HSIDiv488: CEC clock from HSI/488 selected.
2928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_LSE: CEC clock from LSE selected.
2929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_CECClockSourceConfig(uint8_t RCC_ClockSource)
2932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2933:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2934:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CEC_CLOCKSOURCE(RCC_ClockSource));
2935:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2936:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_CECCLKSource_LSE)
2937:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2938:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2939:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2940:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2941:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2942:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2943:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2944:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2945:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
2946:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2947:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx
2948:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2949:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the FMPI2C1 clock Source.
2950:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2951:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the FMPI2C1 clock Source.
2952:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2953:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_APB1: FMPI2C1 clock from APB1 selected.
2954:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_SYSCLK: FMPI2C1 clock from Sytem clock selected.
2955:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_HSI: FMPI2C1 clock from HSI selected.
2956:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2957:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2958:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_FMPI2C1ClockSourceConfig(uint32_t RCC_ClockSource)
2959:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2960:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 113


2961:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FMPI2C1_CLOCKSOURCE(RCC_ClockSource));
2962:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2963:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear FMPI2C1 clock source selection source bits */
2964:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_FMPI2C1SEL;
2965:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set new FMPI2C1 clock source */
2966:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2967:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2968:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F412xG || STM32F413_423xx || STM32F446xx */
2969:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2970:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @}
2971:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2972:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2973:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
2974:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2975:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO1.
2976:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO1.
2977:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2978:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2979:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO1Cmd(FunctionalState NewState)
2981:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2982:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2983:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2984:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2985:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO1EN_BB = (uint32_t)NewState;
2986:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2987:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2988:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2989:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO2.
2990:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO2.
2991:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2992:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2993:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2994:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO2Cmd(FunctionalState NewState)
2995:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2996:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2997:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2998:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2999:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO2EN_BB = (uint32_t)NewState;
3000:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
3001:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
3002:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3003:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
3004:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   Interrupts and flags management functions 
3005:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
3006:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
3007:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
3008:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                 ##### Interrupts and flags management functions #####
3009:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
3010:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3011:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @endverbatim
3012:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
3013:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
3014:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3015:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
3016:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
3017:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 114


3018:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
3019:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3020:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3021:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3022:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3023:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3024:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
3025:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
3026:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
3027:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
3028:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
3029:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
3030:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
3031:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3466              		.loc 1 3031 1
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 8
 3469              		@ frame_needed = 1, uses_anonymous_args = 0
 3470              		@ link register save eliminated.
 3471 0000 80B4     		push	{r7}
 3472              	.LCFI283:
 3473              		.cfi_def_cfa_offset 4
 3474              		.cfi_offset 7, -4
 3475 0002 83B0     		sub	sp, sp, #12
 3476              	.LCFI284:
 3477              		.cfi_def_cfa_offset 16
 3478 0004 00AF     		add	r7, sp, #0
 3479              	.LCFI285:
 3480              		.cfi_def_cfa_register 7
 3481 0006 0346     		mov	r3, r0
 3482 0008 0A46     		mov	r2, r1
 3483 000a FB71     		strb	r3, [r7, #7]
 3484 000c 1346     		mov	r3, r2
 3485 000e BB71     		strb	r3, [r7, #6]
3032:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3033:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
3034:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3035:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 3486              		.loc 1 3035 6
 3487 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3488 0012 002B     		cmp	r3, #0
 3489 0014 08D0     		beq	.L210
3036:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3037:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to enable the selected interrupts */
3038:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 3490              		.loc 1 3038 41
 3491 0016 0C4B     		ldr	r3, .L213
 3492 0018 1B78     		ldrb	r3, [r3]
 3493 001a DAB2     		uxtb	r2, r3
 3494 001c 0A49     		ldr	r1, .L213
 3495 001e FB79     		ldrb	r3, [r7, #7]
 3496 0020 1343     		orrs	r3, r3, r2
 3497 0022 DBB2     		uxtb	r3, r3
 3498 0024 0B70     		strb	r3, [r1]
3039:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3040:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
3041:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 115


3042:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to disable the selected interrupts */
3043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
3044:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3045:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3499              		.loc 1 3045 1
 3500 0026 09E0     		b	.L212
 3501              	.L210:
3043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3502              		.loc 1 3043 41
 3503 0028 074B     		ldr	r3, .L213
 3504 002a 1B78     		ldrb	r3, [r3]
 3505 002c DAB2     		uxtb	r2, r3
3043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3506              		.loc 1 3043 44
 3507 002e FB79     		ldrb	r3, [r7, #7]
 3508 0030 DB43     		mvns	r3, r3
 3509 0032 DBB2     		uxtb	r3, r3
3043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 3510              		.loc 1 3043 41
 3511 0034 0449     		ldr	r1, .L213
 3512 0036 1340     		ands	r3, r3, r2
 3513 0038 DBB2     		uxtb	r3, r3
 3514 003a 0B70     		strb	r3, [r1]
 3515              	.L212:
 3516              		.loc 1 3045 1
 3517 003c 00BF     		nop
 3518 003e 0C37     		adds	r7, r7, #12
 3519              	.LCFI286:
 3520              		.cfi_def_cfa_offset 4
 3521 0040 BD46     		mov	sp, r7
 3522              	.LCFI287:
 3523              		.cfi_def_cfa_register 13
 3524              		@ sp needed
 3525 0042 5DF8047B 		ldr	r7, [sp], #4
 3526              	.LCFI288:
 3527              		.cfi_restore 7
 3528              		.cfi_def_cfa_offset 0
 3529 0046 7047     		bx	lr
 3530              	.L214:
 3531              		.align	2
 3532              	.L213:
 3533 0048 0D380240 		.word	1073887245
 3534              		.cfi_endproc
 3535              	.LFE178:
 3537              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 3538              		.align	1
 3539              		.global	RCC_GetFlagStatus
 3540              		.syntax unified
 3541              		.thumb
 3542              		.thumb_func
 3544              	RCC_GetFlagStatus:
 3545              	.LFB179:
3046:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3047:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
3048:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
3049:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
3050:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 116


3051:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
3052:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
3053:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLRDY: main PLL clock ready
3054:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLI2SRDY: PLLI2S clock ready
3055:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLSAIRDY: PLLSAI clock ready (only for STM32F42xxx/43xxx/446xx/469xx/
3056:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
3057:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
3058:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_BORRST: POR/PDR or BOR reset
3059:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PINRST: Pin reset
3060:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PORRST: POR/PDR reset
3061:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_SFTRST: Software reset
3062:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
3063:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_WWDGRST: Window Watchdog reset
3064:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LPWRRST: Low Power reset
3065:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
3066:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
3067:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
3068:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3546              		.loc 1 3068 1
 3547              		.cfi_startproc
 3548              		@ args = 0, pretend = 0, frame = 24
 3549              		@ frame_needed = 1, uses_anonymous_args = 0
 3550              		@ link register save eliminated.
 3551 0000 80B4     		push	{r7}
 3552              	.LCFI289:
 3553              		.cfi_def_cfa_offset 4
 3554              		.cfi_offset 7, -4
 3555 0002 87B0     		sub	sp, sp, #28
 3556              	.LCFI290:
 3557              		.cfi_def_cfa_offset 32
 3558 0004 00AF     		add	r7, sp, #0
 3559              	.LCFI291:
 3560              		.cfi_def_cfa_register 7
 3561 0006 0346     		mov	r3, r0
 3562 0008 FB71     		strb	r3, [r7, #7]
3069:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0;
 3563              		.loc 1 3069 12
 3564 000a 0023     		movs	r3, #0
 3565 000c FB60     		str	r3, [r7, #12]
3070:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t statusreg = 0;
 3566              		.loc 1 3070 12
 3567 000e 0023     		movs	r3, #0
 3568 0010 7B61     		str	r3, [r7, #20]
3071:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   FlagStatus bitstatus = RESET;
 3569              		.loc 1 3071 14
 3570 0012 0023     		movs	r3, #0
 3571 0014 FB74     		strb	r3, [r7, #19]
3072:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3073:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3074:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
3075:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3076:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get the RCC register index */
3077:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG >> 5;
 3572              		.loc 1 3077 18
 3573 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3574 0018 5B09     		lsrs	r3, r3, #5
 3575 001a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 117


 3576              		.loc 1 3077 7
 3577 001c FB60     		str	r3, [r7, #12]
3078:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 3578              		.loc 1 3078 6
 3579 001e FB68     		ldr	r3, [r7, #12]
 3580 0020 012B     		cmp	r3, #1
 3581 0022 03D1     		bne	.L216
3079:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3080:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->CR;
 3582              		.loc 1 3080 20
 3583 0024 124B     		ldr	r3, .L222
 3584              		.loc 1 3080 15
 3585 0026 1B68     		ldr	r3, [r3]
 3586 0028 7B61     		str	r3, [r7, #20]
 3587 002a 09E0     		b	.L217
 3588              	.L216:
3081:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3082:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 3589              		.loc 1 3082 11
 3590 002c FB68     		ldr	r3, [r7, #12]
 3591 002e 022B     		cmp	r3, #2
 3592 0030 03D1     		bne	.L218
3083:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3084:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->BDCR;
 3593              		.loc 1 3084 20
 3594 0032 0F4B     		ldr	r3, .L222
 3595              		.loc 1 3084 15
 3596 0034 1B6F     		ldr	r3, [r3, #112]
 3597 0036 7B61     		str	r3, [r7, #20]
 3598 0038 02E0     		b	.L217
 3599              	.L218:
3085:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3086:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else                       /* The flag to check is in CSR register */
3087:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3088:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->CSR;
 3600              		.loc 1 3088 20
 3601 003a 0D4B     		ldr	r3, .L222
 3602              		.loc 1 3088 15
 3603 003c 5B6F     		ldr	r3, [r3, #116]
 3604 003e 7B61     		str	r3, [r7, #20]
 3605              	.L217:
3089:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3090:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3091:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get the flag position */
3092:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
 3606              		.loc 1 3092 18
 3607 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3608              		.loc 1 3092 7
 3609 0042 03F01F03 		and	r3, r3, #31
 3610 0046 FB60     		str	r3, [r7, #12]
3093:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 3611              		.loc 1 3093 42
 3612 0048 7A69     		ldr	r2, [r7, #20]
 3613 004a FB68     		ldr	r3, [r7, #12]
 3614 004c 22FA03F3 		lsr	r3, r2, r3
 3615 0050 03F00103 		and	r3, r3, #1
 3616              		.loc 1 3093 6
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 118


 3617 0054 002B     		cmp	r3, #0
 3618 0056 02D0     		beq	.L219
3094:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3095:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 3619              		.loc 1 3095 15
 3620 0058 0123     		movs	r3, #1
 3621 005a FB74     		strb	r3, [r7, #19]
 3622 005c 01E0     		b	.L220
 3623              	.L219:
3096:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3097:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
3098:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3099:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
 3624              		.loc 1 3099 15
 3625 005e 0023     		movs	r3, #0
 3626 0060 FB74     		strb	r3, [r7, #19]
 3627              	.L220:
3100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Return the flag status */
3102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return bitstatus;
 3628              		.loc 1 3102 10
 3629 0062 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3630              		.loc 1 3103 1
 3631 0064 1846     		mov	r0, r3
 3632 0066 1C37     		adds	r7, r7, #28
 3633              	.LCFI292:
 3634              		.cfi_def_cfa_offset 4
 3635 0068 BD46     		mov	sp, r7
 3636              	.LCFI293:
 3637              		.cfi_def_cfa_register 13
 3638              		@ sp needed
 3639 006a 5DF8047B 		ldr	r7, [sp], #4
 3640              	.LCFI294:
 3641              		.cfi_restore 7
 3642              		.cfi_def_cfa_offset 0
 3643 006e 7047     		bx	lr
 3644              	.L223:
 3645              		.align	2
 3646              	.L222:
 3647 0070 00380240 		.word	1073887232
 3648              		.cfi_endproc
 3649              	.LFE179:
 3651              		.section	.text.RCC_ClearFlag,"ax",%progbits
 3652              		.align	1
 3653              		.global	RCC_ClearFlag
 3654              		.syntax unified
 3655              		.thumb
 3656              		.thumb_func
 3658              	RCC_ClearFlag:
 3659              	.LFB180:
3104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
3106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC reset flags.
3107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST,  RCC_FLAG_SFTRST,
3108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
3109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 119


3110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
3111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
3112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ClearFlag(void)
3113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3660              		.loc 1 3113 1
 3661              		.cfi_startproc
 3662              		@ args = 0, pretend = 0, frame = 0
 3663              		@ frame_needed = 1, uses_anonymous_args = 0
 3664              		@ link register save eliminated.
 3665 0000 80B4     		push	{r7}
 3666              	.LCFI295:
 3667              		.cfi_def_cfa_offset 4
 3668              		.cfi_offset 7, -4
 3669 0002 00AF     		add	r7, sp, #0
 3670              	.LCFI296:
 3671              		.cfi_def_cfa_register 7
3114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set RMVF bit to clear the reset flags */
3115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 3672              		.loc 1 3115 12
 3673 0004 054B     		ldr	r3, .L225
 3674 0006 5B6F     		ldr	r3, [r3, #116]
 3675 0008 044A     		ldr	r2, .L225
 3676 000a 43F08073 		orr	r3, r3, #16777216
 3677 000e 5367     		str	r3, [r2, #116]
3116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3678              		.loc 1 3116 1
 3679 0010 00BF     		nop
 3680 0012 BD46     		mov	sp, r7
 3681              	.LCFI297:
 3682              		.cfi_def_cfa_register 13
 3683              		@ sp needed
 3684 0014 5DF8047B 		ldr	r7, [sp], #4
 3685              	.LCFI298:
 3686              		.cfi_restore 7
 3687              		.cfi_def_cfa_offset 0
 3688 0018 7047     		bx	lr
 3689              	.L226:
 3690 001a 00BF     		.align	2
 3691              	.L225:
 3692 001c 00380240 		.word	1073887232
 3693              		.cfi_endproc
 3694              	.LFE180:
 3696              		.section	.text.RCC_GetITStatus,"ax",%progbits
 3697              		.align	1
 3698              		.global	RCC_GetITStatus
 3699              		.syntax unified
 3700              		.thumb
 3701              		.thumb_func
 3703              	RCC_GetITStatus:
 3704              	.LFB181:
3117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
3119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
3120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
3121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
3122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 120


3124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
3128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI clock ready interrupt (only for STM32F42xxx/43xxx/446x
3129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
3130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
3131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
3132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
3133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3705              		.loc 1 3133 1
 3706              		.cfi_startproc
 3707              		@ args = 0, pretend = 0, frame = 16
 3708              		@ frame_needed = 1, uses_anonymous_args = 0
 3709              		@ link register save eliminated.
 3710 0000 80B4     		push	{r7}
 3711              	.LCFI299:
 3712              		.cfi_def_cfa_offset 4
 3713              		.cfi_offset 7, -4
 3714 0002 85B0     		sub	sp, sp, #20
 3715              	.LCFI300:
 3716              		.cfi_def_cfa_offset 24
 3717 0004 00AF     		add	r7, sp, #0
 3718              	.LCFI301:
 3719              		.cfi_def_cfa_register 7
 3720 0006 0346     		mov	r3, r0
 3721 0008 FB71     		strb	r3, [r7, #7]
3134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ITStatus bitstatus = RESET;
 3722              		.loc 1 3134 12
 3723 000a 0023     		movs	r3, #0
 3724 000c FB73     		strb	r3, [r7, #15]
3135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
3138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the status of the specified RCC interrupt */
3140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 3725              		.loc 1 3140 11
 3726 000e 094B     		ldr	r3, .L231
 3727 0010 DA68     		ldr	r2, [r3, #12]
 3728              		.loc 1 3140 17
 3729 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3730 0014 1340     		ands	r3, r3, r2
 3731              		.loc 1 3140 6
 3732 0016 002B     		cmp	r3, #0
 3733 0018 02D0     		beq	.L228
3141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 3734              		.loc 1 3142 15
 3735 001a 0123     		movs	r3, #1
 3736 001c FB73     		strb	r3, [r7, #15]
 3737 001e 01E0     		b	.L229
 3738              	.L228:
3143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
3145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
3146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 121


 3739              		.loc 1 3146 15
 3740 0020 0023     		movs	r3, #0
 3741 0022 FB73     		strb	r3, [r7, #15]
 3742              	.L229:
3147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
3148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Return the RCC_IT status */
3149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return  bitstatus;
 3743              		.loc 1 3149 11
 3744 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
3150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3745              		.loc 1 3150 1
 3746 0026 1846     		mov	r0, r3
 3747 0028 1437     		adds	r7, r7, #20
 3748              	.LCFI302:
 3749              		.cfi_def_cfa_offset 4
 3750 002a BD46     		mov	sp, r7
 3751              	.LCFI303:
 3752              		.cfi_def_cfa_register 13
 3753              		@ sp needed
 3754 002c 5DF8047B 		ldr	r7, [sp], #4
 3755              	.LCFI304:
 3756              		.cfi_restore 7
 3757              		.cfi_def_cfa_offset 0
 3758 0030 7047     		bx	lr
 3759              	.L232:
 3760 0032 00BF     		.align	2
 3761              	.L231:
 3762 0034 00380240 		.word	1073887232
 3763              		.cfi_endproc
 3764              	.LFE181:
 3766              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 3767              		.align	1
 3768              		.global	RCC_ClearITPendingBit
 3769              		.syntax unified
 3770              		.thumb
 3771              		.thumb_func
 3773              	RCC_ClearITPendingBit:
 3774              	.LFB182:
3151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
3153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
3154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
3155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
3156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt  
3162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
3163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
3164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
3165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
3166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
3167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 3775              		.loc 1 3167 1
 3776              		.cfi_startproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 122


 3777              		@ args = 0, pretend = 0, frame = 8
 3778              		@ frame_needed = 1, uses_anonymous_args = 0
 3779              		@ link register save eliminated.
 3780 0000 80B4     		push	{r7}
 3781              	.LCFI305:
 3782              		.cfi_def_cfa_offset 4
 3783              		.cfi_offset 7, -4
 3784 0002 83B0     		sub	sp, sp, #12
 3785              	.LCFI306:
 3786              		.cfi_def_cfa_offset 16
 3787 0004 00AF     		add	r7, sp, #0
 3788              	.LCFI307:
 3789              		.cfi_def_cfa_register 7
 3790 0006 0346     		mov	r3, r0
 3791 0008 FB71     		strb	r3, [r7, #7]
3168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
3170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
3171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
3172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      pending bits */
3173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 3792              		.loc 1 3173 3
 3793 000a 044A     		ldr	r2, .L234
 3794              		.loc 1 3173 39
 3795 000c FB79     		ldrb	r3, [r7, #7]
 3796 000e 1370     		strb	r3, [r2]
3174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 3797              		.loc 1 3174 1
 3798 0010 00BF     		nop
 3799 0012 0C37     		adds	r7, r7, #12
 3800              	.LCFI308:
 3801              		.cfi_def_cfa_offset 4
 3802 0014 BD46     		mov	sp, r7
 3803              	.LCFI309:
 3804              		.cfi_def_cfa_register 13
 3805              		@ sp needed
 3806 0016 5DF8047B 		ldr	r7, [sp], #4
 3807              	.LCFI310:
 3808              		.cfi_restore 7
 3809              		.cfi_def_cfa_offset 0
 3810 001a 7047     		bx	lr
 3811              	.L235:
 3812              		.align	2
 3813              	.L234:
 3814 001c 0E380240 		.word	1073887246
 3815              		.cfi_endproc
 3816              	.LFE182:
 3818              		.text
 3819              	.Letext0:
 3820              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 3821              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 3822              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3823              		.file 5 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 123


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_rcc.c
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:20     .data.APBAHBPrescTable:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:23     .data.APBAHBPrescTable:00000000 APBAHBPrescTable
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:27     .text.RCC_DeInit:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:33     .text.RCC_DeInit:00000000 RCC_DeInit
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:111    .text.RCC_DeInit:00000060 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:119    .text.RCC_HSEConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:125    .text.RCC_HSEConfig:00000000 RCC_HSEConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:171    .text.RCC_HSEConfig:00000024 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:176    .text.RCC_WaitForHSEStartUp:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:182    .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3544   .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:260    .text.RCC_AdjustHSICalibrationValue:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:266    .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:327    .text.RCC_AdjustHSICalibrationValue:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:332    .text.RCC_HSICmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:338    .text.RCC_HSICmd:00000000 RCC_HSICmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:380    .text.RCC_HSICmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:385    .text.RCC_LSEConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:391    .text.RCC_LSEConfig:00000000 RCC_LSEConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:462    .text.RCC_LSEConfig:00000040 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:467    .text.RCC_LSICmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:473    .text.RCC_LSICmd:00000000 RCC_LSICmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:515    .text.RCC_LSICmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:520    .text.RCC_PLLConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:526    .text.RCC_PLLConfig:00000000 RCC_PLLConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:591    .text.RCC_PLLConfig:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:596    .text.RCC_PLLCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:602    .text.RCC_PLLCmd:00000000 RCC_PLLCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:644    .text.RCC_PLLCmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:649    .text.RCC_PLLI2SConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:655    .text.RCC_PLLI2SConfig:00000000 RCC_PLLI2SConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:703    .text.RCC_PLLI2SConfig:00000028 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:708    .text.RCC_PLLI2SCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:714    .text.RCC_PLLI2SCmd:00000000 RCC_PLLI2SCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:756    .text.RCC_PLLI2SCmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:761    .text.RCC_PLLSAIConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:767    .text.RCC_PLLSAIConfig:00000000 RCC_PLLSAIConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:821    .text.RCC_PLLSAIConfig:00000030 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:826    .text.RCC_PLLSAICmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:832    .text.RCC_PLLSAICmd:00000000 RCC_PLLSAICmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:874    .text.RCC_PLLSAICmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:879    .text.RCC_ClockSecuritySystemCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:885    .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:927    .text.RCC_ClockSecuritySystemCmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:932    .text.RCC_MCO1Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:938    .text.RCC_MCO1Config:00000000 RCC_MCO1Config
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:999    .text.RCC_MCO1Config:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1004   .text.RCC_MCO2Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1010   .text.RCC_MCO2Config:00000000 RCC_MCO2Config
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1071   .text.RCC_MCO2Config:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1076   .text.RCC_SYSCLKConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1082   .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1139   .text.RCC_SYSCLKConfig:00000034 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1144   .text.RCC_GetSYSCLKSource:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1150   .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 124


C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1185   .text.RCC_GetSYSCLKSource:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1190   .text.RCC_HCLKConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1196   .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1253   .text.RCC_HCLKConfig:00000034 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1258   .text.RCC_PCLK1Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1264   .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1321   .text.RCC_PCLK1Config:00000034 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1326   .text.RCC_PCLK2Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1332   .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1391   .text.RCC_PCLK2Config:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1396   .text.RCC_GetClocksFreq:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1402   .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1646   .text.RCC_GetClocksFreq:0000014c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1654   .text.RCC_RTCCLKConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1660   .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1737   .text.RCC_RTCCLKConfig:00000058 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1742   .text.RCC_RTCCLKCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1748   .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1790   .text.RCC_RTCCLKCmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1795   .text.RCC_BackupResetCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1801   .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1843   .text.RCC_BackupResetCmd:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1848   .text.RCC_I2SCLKConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1854   .text.RCC_I2SCLKConfig:00000000 RCC_I2SCLKConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1894   .text.RCC_I2SCLKConfig:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1899   .text.RCC_SAIBlockACLKConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1905   .text.RCC_SAIBlockACLKConfig:00000000 RCC_SAIBlockACLKConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1962   .text.RCC_SAIBlockACLKConfig:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1967   .text.RCC_SAIBlockBCLKConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:1973   .text.RCC_SAIBlockBCLKConfig:00000000 RCC_SAIBlockBCLKConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2030   .text.RCC_SAIBlockBCLKConfig:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2035   .text.RCC_SAIPLLI2SClkDivConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2041   .text.RCC_SAIPLLI2SClkDivConfig:00000000 RCC_SAIPLLI2SClkDivConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2100   .text.RCC_SAIPLLI2SClkDivConfig:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2105   .text.RCC_SAIPLLSAIClkDivConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2111   .text.RCC_SAIPLLSAIClkDivConfig:00000000 RCC_SAIPLLSAIClkDivConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2172   .text.RCC_SAIPLLSAIClkDivConfig:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2177   .text.RCC_LTDCCLKDivConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2183   .text.RCC_LTDCCLKDivConfig:00000000 RCC_LTDCCLKDivConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2240   .text.RCC_LTDCCLKDivConfig:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2245   .text.RCC_TIMCLKPresConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2251   .text.RCC_TIMCLKPresConfig:00000000 RCC_TIMCLKPresConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2291   .text.RCC_TIMCLKPresConfig:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2296   .text.RCC_AHB1PeriphClockCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2302   .text.RCC_AHB1PeriphClockCmd:00000000 RCC_AHB1PeriphClockCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2364   .text.RCC_AHB1PeriphClockCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2369   .text.RCC_AHB2PeriphClockCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2375   .text.RCC_AHB2PeriphClockCmd:00000000 RCC_AHB2PeriphClockCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2437   .text.RCC_AHB2PeriphClockCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2442   .text.RCC_AHB3PeriphClockCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2448   .text.RCC_AHB3PeriphClockCmd:00000000 RCC_AHB3PeriphClockCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2510   .text.RCC_AHB3PeriphClockCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2515   .text.RCC_APB1PeriphClockCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2521   .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2583   .text.RCC_APB1PeriphClockCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2588   .text.RCC_APB2PeriphClockCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2594   .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s 			page 125


C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2656   .text.RCC_APB2PeriphClockCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2661   .text.RCC_AHB1PeriphResetCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2667   .text.RCC_AHB1PeriphResetCmd:00000000 RCC_AHB1PeriphResetCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2729   .text.RCC_AHB1PeriphResetCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2734   .text.RCC_AHB2PeriphResetCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2740   .text.RCC_AHB2PeriphResetCmd:00000000 RCC_AHB2PeriphResetCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2802   .text.RCC_AHB2PeriphResetCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2807   .text.RCC_AHB3PeriphResetCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2813   .text.RCC_AHB3PeriphResetCmd:00000000 RCC_AHB3PeriphResetCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2875   .text.RCC_AHB3PeriphResetCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2880   .text.RCC_APB1PeriphResetCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2886   .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2948   .text.RCC_APB1PeriphResetCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2953   .text.RCC_APB2PeriphResetCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:2959   .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3021   .text.RCC_APB2PeriphResetCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3026   .text.RCC_AHB1PeriphClockLPModeCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3032   .text.RCC_AHB1PeriphClockLPModeCmd:00000000 RCC_AHB1PeriphClockLPModeCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3094   .text.RCC_AHB1PeriphClockLPModeCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3099   .text.RCC_AHB2PeriphClockLPModeCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3105   .text.RCC_AHB2PeriphClockLPModeCmd:00000000 RCC_AHB2PeriphClockLPModeCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3167   .text.RCC_AHB2PeriphClockLPModeCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3172   .text.RCC_AHB3PeriphClockLPModeCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3178   .text.RCC_AHB3PeriphClockLPModeCmd:00000000 RCC_AHB3PeriphClockLPModeCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3240   .text.RCC_AHB3PeriphClockLPModeCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3245   .text.RCC_APB1PeriphClockLPModeCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3251   .text.RCC_APB1PeriphClockLPModeCmd:00000000 RCC_APB1PeriphClockLPModeCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3313   .text.RCC_APB1PeriphClockLPModeCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3318   .text.RCC_APB2PeriphClockLPModeCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3324   .text.RCC_APB2PeriphClockLPModeCmd:00000000 RCC_APB2PeriphClockLPModeCmd
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3386   .text.RCC_APB2PeriphClockLPModeCmd:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3391   .text.RCC_LSEModeConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3397   .text.RCC_LSEModeConfig:00000000 RCC_LSEModeConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3453   .text.RCC_LSEModeConfig:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3458   .text.RCC_ITConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3464   .text.RCC_ITConfig:00000000 RCC_ITConfig
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3533   .text.RCC_ITConfig:00000048 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3538   .text.RCC_GetFlagStatus:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3647   .text.RCC_GetFlagStatus:00000070 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3652   .text.RCC_ClearFlag:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3658   .text.RCC_ClearFlag:00000000 RCC_ClearFlag
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3692   .text.RCC_ClearFlag:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3697   .text.RCC_GetITStatus:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3703   .text.RCC_GetITStatus:00000000 RCC_GetITStatus
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3762   .text.RCC_GetITStatus:00000034 $d
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3767   .text.RCC_ClearITPendingBit:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3773   .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
C:\Users\Admin\AppData\Local\Temp\ccrsvZb0.s:3814   .text.RCC_ClearITPendingBit:0000001c $d

NO UNDEFINED SYMBOLS
