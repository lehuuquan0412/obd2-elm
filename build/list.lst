ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"list.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.vListInitialise,"ax",%progbits
  20              		.align	1
  21              		.global	vListInitialise
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	vListInitialise:
  27              	.LFB5:
  28              		.file 1 "ThirdParty/FreeRTOS/list.c"
   1:ThirdParty/FreeRTOS/list.c **** /*
   2:ThirdParty/FreeRTOS/list.c ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/list.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/list.c ****  *
   5:ThirdParty/FreeRTOS/list.c ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/list.c ****  *
   7:ThirdParty/FreeRTOS/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/list.c ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/list.c ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/list.c ****  *
  14:ThirdParty/FreeRTOS/list.c ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/list.c ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/list.c ****  *
  17:ThirdParty/FreeRTOS/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/list.c ****  *
  24:ThirdParty/FreeRTOS/list.c ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/list.c ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/list.c ****  *
  27:ThirdParty/FreeRTOS/list.c ****  */
  28:ThirdParty/FreeRTOS/list.c **** 
  29:ThirdParty/FreeRTOS/list.c **** 
  30:ThirdParty/FreeRTOS/list.c **** #include <stdlib.h>
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 2


  31:ThirdParty/FreeRTOS/list.c **** 
  32:ThirdParty/FreeRTOS/list.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:ThirdParty/FreeRTOS/list.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:ThirdParty/FreeRTOS/list.c ****  * task.h is included from an application file. */
  35:ThirdParty/FreeRTOS/list.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:ThirdParty/FreeRTOS/list.c **** 
  37:ThirdParty/FreeRTOS/list.c **** #include "FreeRTOS.h"
  38:ThirdParty/FreeRTOS/list.c **** #include "list.h"
  39:ThirdParty/FreeRTOS/list.c **** 
  40:ThirdParty/FreeRTOS/list.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  41:ThirdParty/FreeRTOS/list.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be
  42:ThirdParty/FreeRTOS/list.c ****  * defined for the header files above, but not in this file, in order to
  43:ThirdParty/FreeRTOS/list.c ****  * generate the correct privileged Vs unprivileged linkage and placement. */
  44:ThirdParty/FreeRTOS/list.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  45:ThirdParty/FreeRTOS/list.c **** 
  46:ThirdParty/FreeRTOS/list.c **** /*-----------------------------------------------------------
  47:ThirdParty/FreeRTOS/list.c **** * PUBLIC LIST API documented in list.h
  48:ThirdParty/FreeRTOS/list.c **** *----------------------------------------------------------*/
  49:ThirdParty/FreeRTOS/list.c **** 
  50:ThirdParty/FreeRTOS/list.c **** void vListInitialise( List_t * const pxList )
  51:ThirdParty/FreeRTOS/list.c **** {
  29              		.loc 1 51 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  52:ThirdParty/FreeRTOS/list.c ****     /* The list structure contains a list item which is used to mark the
  53:ThirdParty/FreeRTOS/list.c ****      * end of the list.  To initialise the list the list end is inserted
  54:ThirdParty/FreeRTOS/list.c ****      * as the only list entry. */
  55:ThirdParty/FreeRTOS/list.c ****     pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini li
  45              		.loc 1 55 40
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 03F10802 		add	r2, r3, #8
  48              		.loc 1 55 21
  49 000e 7B68     		ldr	r3, [r7, #4]
  50 0010 5A60     		str	r2, [r3, #4]
  56:ThirdParty/FreeRTOS/list.c **** 
  57:ThirdParty/FreeRTOS/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
  58:ThirdParty/FreeRTOS/list.c **** 
  59:ThirdParty/FreeRTOS/list.c ****     /* The list end value is the highest possible value in the list to
  60:ThirdParty/FreeRTOS/list.c ****      * ensure it remains at the end of the list. */
  61:ThirdParty/FreeRTOS/list.c ****     pxList->xListEnd.xItemValue = portMAX_DELAY;
  51              		.loc 1 61 33
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 4FF0FF32 		mov	r2, #-1
  54 0018 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 3


  62:ThirdParty/FreeRTOS/list.c **** 
  63:ThirdParty/FreeRTOS/list.c ****     /* The list end next and previous pointers point to itself so we know
  64:ThirdParty/FreeRTOS/list.c ****      * when the list is empty. */
  65:ThirdParty/FreeRTOS/list.c ****     pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087
  55              		.loc 1 65 48
  56 001a 7B68     		ldr	r3, [r7, #4]
  57 001c 03F10802 		add	r2, r3, #8
  58              		.loc 1 65 29
  59 0020 7B68     		ldr	r3, [r7, #4]
  60 0022 DA60     		str	r2, [r3, #12]
  66:ThirdParty/FreeRTOS/list.c ****     pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087
  61              		.loc 1 66 52
  62 0024 7B68     		ldr	r3, [r7, #4]
  63 0026 03F10802 		add	r2, r3, #8
  64              		.loc 1 66 33
  65 002a 7B68     		ldr	r3, [r7, #4]
  66 002c 1A61     		str	r2, [r3, #16]
  67:ThirdParty/FreeRTOS/list.c **** 
  68:ThirdParty/FreeRTOS/list.c ****     /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
  69:ThirdParty/FreeRTOS/list.c ****     #if ( configUSE_MINI_LIST_ITEM == 0 )
  70:ThirdParty/FreeRTOS/list.c ****     {
  71:ThirdParty/FreeRTOS/list.c ****         pxList->xListEnd.pvOwner = NULL;
  72:ThirdParty/FreeRTOS/list.c ****         pxList->xListEnd.pxContainer = NULL;
  73:ThirdParty/FreeRTOS/list.c ****         listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
  74:ThirdParty/FreeRTOS/list.c ****     }
  75:ThirdParty/FreeRTOS/list.c ****     #endif
  76:ThirdParty/FreeRTOS/list.c **** 
  77:ThirdParty/FreeRTOS/list.c ****     pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  67              		.loc 1 77 29
  68 002e 7B68     		ldr	r3, [r7, #4]
  69 0030 0022     		movs	r2, #0
  70 0032 1A60     		str	r2, [r3]
  78:ThirdParty/FreeRTOS/list.c **** 
  79:ThirdParty/FreeRTOS/list.c ****     /* Write known values into the list if
  80:ThirdParty/FreeRTOS/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  81:ThirdParty/FreeRTOS/list.c ****     listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  82:ThirdParty/FreeRTOS/list.c ****     listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  83:ThirdParty/FreeRTOS/list.c **** }
  71              		.loc 1 83 1
  72 0034 00BF     		nop
  73 0036 0C37     		adds	r7, r7, #12
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76 0038 BD46     		mov	sp, r7
  77              	.LCFI4:
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 003a 5DF8047B 		ldr	r7, [sp], #4
  81              	.LCFI5:
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 003e 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE5:
  88              		.section	.text.vListInitialiseItem,"ax",%progbits
  89              		.align	1
  90              		.global	vListInitialiseItem
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 4


  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	vListInitialiseItem:
  96              	.LFB6:
  84:ThirdParty/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
  85:ThirdParty/FreeRTOS/list.c **** 
  86:ThirdParty/FreeRTOS/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  87:ThirdParty/FreeRTOS/list.c **** {
  97              		.loc 1 87 1
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 8
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 80B4     		push	{r7}
 103              	.LCFI6:
 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 83B0     		sub	sp, sp, #12
 107              	.LCFI7:
 108              		.cfi_def_cfa_offset 16
 109 0004 00AF     		add	r7, sp, #0
 110              	.LCFI8:
 111              		.cfi_def_cfa_register 7
 112 0006 7860     		str	r0, [r7, #4]
  88:ThirdParty/FreeRTOS/list.c ****     /* Make sure the list item is not recorded as being on a list. */
  89:ThirdParty/FreeRTOS/list.c ****     pxItem->pxContainer = NULL;
 113              		.loc 1 89 25
 114 0008 7B68     		ldr	r3, [r7, #4]
 115 000a 0022     		movs	r2, #0
 116 000c 1A61     		str	r2, [r3, #16]
  90:ThirdParty/FreeRTOS/list.c **** 
  91:ThirdParty/FreeRTOS/list.c ****     /* Write known values into the list item if
  92:ThirdParty/FreeRTOS/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  93:ThirdParty/FreeRTOS/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  94:ThirdParty/FreeRTOS/list.c ****     listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  95:ThirdParty/FreeRTOS/list.c **** }
 117              		.loc 1 95 1
 118 000e 00BF     		nop
 119 0010 0C37     		adds	r7, r7, #12
 120              	.LCFI9:
 121              		.cfi_def_cfa_offset 4
 122 0012 BD46     		mov	sp, r7
 123              	.LCFI10:
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 0014 5DF8047B 		ldr	r7, [sp], #4
 127              	.LCFI11:
 128              		.cfi_restore 7
 129              		.cfi_def_cfa_offset 0
 130 0018 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE6:
 134              		.section	.text.vListInsertEnd,"ax",%progbits
 135              		.align	1
 136              		.global	vListInsertEnd
 137              		.syntax unified
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 5


 138              		.thumb
 139              		.thumb_func
 141              	vListInsertEnd:
 142              	.LFB7:
  96:ThirdParty/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
  97:ThirdParty/FreeRTOS/list.c **** 
  98:ThirdParty/FreeRTOS/list.c **** void vListInsertEnd( List_t * const pxList,
  99:ThirdParty/FreeRTOS/list.c ****                      ListItem_t * const pxNewListItem )
 100:ThirdParty/FreeRTOS/list.c **** {
 143              		.loc 1 100 1
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 16
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 80B4     		push	{r7}
 149              	.LCFI12:
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 7, -4
 152 0002 85B0     		sub	sp, sp, #20
 153              	.LCFI13:
 154              		.cfi_def_cfa_offset 24
 155 0004 00AF     		add	r7, sp, #0
 156              	.LCFI14:
 157              		.cfi_def_cfa_register 7
 158 0006 7860     		str	r0, [r7, #4]
 159 0008 3960     		str	r1, [r7]
 101:ThirdParty/FreeRTOS/list.c ****     ListItem_t * const pxIndex = pxList->pxIndex;
 160              		.loc 1 101 24
 161 000a 7B68     		ldr	r3, [r7, #4]
 162 000c 5B68     		ldr	r3, [r3, #4]
 163 000e FB60     		str	r3, [r7, #12]
 102:ThirdParty/FreeRTOS/list.c **** 
 103:ThirdParty/FreeRTOS/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 104:ThirdParty/FreeRTOS/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 105:ThirdParty/FreeRTOS/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 106:ThirdParty/FreeRTOS/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 107:ThirdParty/FreeRTOS/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 108:ThirdParty/FreeRTOS/list.c **** 
 109:ThirdParty/FreeRTOS/list.c ****     /* Insert a new list item into pxList, but rather than sort the list,
 110:ThirdParty/FreeRTOS/list.c ****      * makes the new list item the last item to be removed by a call to
 111:ThirdParty/FreeRTOS/list.c ****      * listGET_OWNER_OF_NEXT_ENTRY(). */
 112:ThirdParty/FreeRTOS/list.c ****     pxNewListItem->pxNext = pxIndex;
 164              		.loc 1 112 27
 165 0010 3B68     		ldr	r3, [r7]
 166 0012 FA68     		ldr	r2, [r7, #12]
 167 0014 5A60     		str	r2, [r3, #4]
 113:ThirdParty/FreeRTOS/list.c ****     pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 168              		.loc 1 113 40
 169 0016 FB68     		ldr	r3, [r7, #12]
 170 0018 9A68     		ldr	r2, [r3, #8]
 171              		.loc 1 113 31
 172 001a 3B68     		ldr	r3, [r7]
 173 001c 9A60     		str	r2, [r3, #8]
 114:ThirdParty/FreeRTOS/list.c **** 
 115:ThirdParty/FreeRTOS/list.c ****     /* Only used during decision coverage testing. */
 116:ThirdParty/FreeRTOS/list.c ****     mtCOVERAGE_TEST_DELAY();
 117:ThirdParty/FreeRTOS/list.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 6


 118:ThirdParty/FreeRTOS/list.c ****     pxIndex->pxPrevious->pxNext = pxNewListItem;
 174              		.loc 1 118 12
 175 001e FB68     		ldr	r3, [r7, #12]
 176 0020 9B68     		ldr	r3, [r3, #8]
 177              		.loc 1 118 33
 178 0022 3A68     		ldr	r2, [r7]
 179 0024 5A60     		str	r2, [r3, #4]
 119:ThirdParty/FreeRTOS/list.c ****     pxIndex->pxPrevious = pxNewListItem;
 180              		.loc 1 119 25
 181 0026 FB68     		ldr	r3, [r7, #12]
 182 0028 3A68     		ldr	r2, [r7]
 183 002a 9A60     		str	r2, [r3, #8]
 120:ThirdParty/FreeRTOS/list.c **** 
 121:ThirdParty/FreeRTOS/list.c ****     /* Remember which list the item is in. */
 122:ThirdParty/FreeRTOS/list.c ****     pxNewListItem->pxContainer = pxList;
 184              		.loc 1 122 32
 185 002c 3B68     		ldr	r3, [r7]
 186 002e 7A68     		ldr	r2, [r7, #4]
 187 0030 1A61     		str	r2, [r3, #16]
 123:ThirdParty/FreeRTOS/list.c **** 
 124:ThirdParty/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )++;
 188              		.loc 1 124 13
 189 0032 7B68     		ldr	r3, [r7, #4]
 190 0034 1B68     		ldr	r3, [r3]
 191              		.loc 1 124 32
 192 0036 5A1C     		adds	r2, r3, #1
 193 0038 7B68     		ldr	r3, [r7, #4]
 194 003a 1A60     		str	r2, [r3]
 125:ThirdParty/FreeRTOS/list.c **** }
 195              		.loc 1 125 1
 196 003c 00BF     		nop
 197 003e 1437     		adds	r7, r7, #20
 198              	.LCFI15:
 199              		.cfi_def_cfa_offset 4
 200 0040 BD46     		mov	sp, r7
 201              	.LCFI16:
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 0042 5DF8047B 		ldr	r7, [sp], #4
 205              	.LCFI17:
 206              		.cfi_restore 7
 207              		.cfi_def_cfa_offset 0
 208 0046 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE7:
 212              		.section	.text.vListInsert,"ax",%progbits
 213              		.align	1
 214              		.global	vListInsert
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 219              	vListInsert:
 220              	.LFB8:
 126:ThirdParty/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
 127:ThirdParty/FreeRTOS/list.c **** 
 128:ThirdParty/FreeRTOS/list.c **** void vListInsert( List_t * const pxList,
 129:ThirdParty/FreeRTOS/list.c ****                   ListItem_t * const pxNewListItem )
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 7


 130:ThirdParty/FreeRTOS/list.c **** {
 221              		.loc 1 130 1
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 16
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226 0000 80B4     		push	{r7}
 227              	.LCFI18:
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 85B0     		sub	sp, sp, #20
 231              	.LCFI19:
 232              		.cfi_def_cfa_offset 24
 233 0004 00AF     		add	r7, sp, #0
 234              	.LCFI20:
 235              		.cfi_def_cfa_register 7
 236 0006 7860     		str	r0, [r7, #4]
 237 0008 3960     		str	r1, [r7]
 131:ThirdParty/FreeRTOS/list.c ****     ListItem_t * pxIterator;
 132:ThirdParty/FreeRTOS/list.c ****     const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 238              		.loc 1 132 22
 239 000a 3B68     		ldr	r3, [r7]
 240 000c 1B68     		ldr	r3, [r3]
 241 000e BB60     		str	r3, [r7, #8]
 133:ThirdParty/FreeRTOS/list.c **** 
 134:ThirdParty/FreeRTOS/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 135:ThirdParty/FreeRTOS/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 136:ThirdParty/FreeRTOS/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 137:ThirdParty/FreeRTOS/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 138:ThirdParty/FreeRTOS/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 139:ThirdParty/FreeRTOS/list.c **** 
 140:ThirdParty/FreeRTOS/list.c ****     /* Insert the new list item into the list, sorted in xItemValue order.
 141:ThirdParty/FreeRTOS/list.c ****      *
 142:ThirdParty/FreeRTOS/list.c ****      * If the list already contains a list item with the same item value then the
 143:ThirdParty/FreeRTOS/list.c ****      * new list item should be placed after it.  This ensures that TCBs which are
 144:ThirdParty/FreeRTOS/list.c ****      * stored in ready lists (all of which have the same xItemValue value) get a
 145:ThirdParty/FreeRTOS/list.c ****      * share of the CPU.  However, if the xItemValue is the same as the back marker
 146:ThirdParty/FreeRTOS/list.c ****      * the iteration loop below will not end.  Therefore the value is checked
 147:ThirdParty/FreeRTOS/list.c ****      * first, and the algorithm slightly modified if necessary. */
 148:ThirdParty/FreeRTOS/list.c ****     if( xValueOfInsertion == portMAX_DELAY )
 242              		.loc 1 148 7
 243 0010 BB68     		ldr	r3, [r7, #8]
 244 0012 B3F1FF3F 		cmp	r3, #-1
 245 0016 03D1     		bne	.L5
 149:ThirdParty/FreeRTOS/list.c ****     {
 150:ThirdParty/FreeRTOS/list.c ****         pxIterator = pxList->xListEnd.pxPrevious;
 246              		.loc 1 150 20
 247 0018 7B68     		ldr	r3, [r7, #4]
 248 001a 1B69     		ldr	r3, [r3, #16]
 249 001c FB60     		str	r3, [r7, #12]
 250 001e 0CE0     		b	.L6
 251              	.L5:
 151:ThirdParty/FreeRTOS/list.c ****     }
 152:ThirdParty/FreeRTOS/list.c ****     else
 153:ThirdParty/FreeRTOS/list.c ****     {
 154:ThirdParty/FreeRTOS/list.c ****         /* *** NOTE ***********************************************************
 155:ThirdParty/FreeRTOS/list.c ****         *  If you find your application is crashing here then likely causes are
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 8


 156:ThirdParty/FreeRTOS/list.c ****         *  listed below.  In addition see https://www.FreeRTOS.org/FAQHelp.html for
 157:ThirdParty/FreeRTOS/list.c ****         *  more tips, and ensure configASSERT() is defined!
 158:ThirdParty/FreeRTOS/list.c ****         *  https://www.FreeRTOS.org/a00110.html#configASSERT
 159:ThirdParty/FreeRTOS/list.c ****         *
 160:ThirdParty/FreeRTOS/list.c ****         *   1) Stack overflow -
 161:ThirdParty/FreeRTOS/list.c ****         *      see https://www.FreeRTOS.org/Stacks-and-stack-overflow-checking.html
 162:ThirdParty/FreeRTOS/list.c ****         *   2) Incorrect interrupt priority assignment, especially on Cortex-M
 163:ThirdParty/FreeRTOS/list.c ****         *      parts where numerically high priority values denote low actual
 164:ThirdParty/FreeRTOS/list.c ****         *      interrupt priorities, which can seem counter intuitive.  See
 165:ThirdParty/FreeRTOS/list.c ****         *      https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html and the definition
 166:ThirdParty/FreeRTOS/list.c ****         *      of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 167:ThirdParty/FreeRTOS/list.c ****         *      https://www.FreeRTOS.org/a00110.html
 168:ThirdParty/FreeRTOS/list.c ****         *   3) Calling an API function from within a critical section or when
 169:ThirdParty/FreeRTOS/list.c ****         *      the scheduler is suspended, or calling an API function that does
 170:ThirdParty/FreeRTOS/list.c ****         *      not end in "FromISR" from an interrupt.
 171:ThirdParty/FreeRTOS/list.c ****         *   4) Using a queue or semaphore before it has been initialised or
 172:ThirdParty/FreeRTOS/list.c ****         *      before the scheduler has been started (are interrupts firing
 173:ThirdParty/FreeRTOS/list.c ****         *      before vTaskStartScheduler() has been called?).
 174:ThirdParty/FreeRTOS/list.c ****         *   5) If the FreeRTOS port supports interrupt nesting then ensure that
 175:ThirdParty/FreeRTOS/list.c ****         *      the priority of the tick interrupt is at or below
 176:ThirdParty/FreeRTOS/list.c ****         *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
 177:ThirdParty/FreeRTOS/list.c ****         **********************************************************************/
 178:ThirdParty/FreeRTOS/list.c **** 
 179:ThirdParty/FreeRTOS/list.c ****         for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <=
 252              		.loc 1 179 25
 253 0020 7B68     		ldr	r3, [r7, #4]
 254 0022 0833     		adds	r3, r3, #8
 255 0024 FB60     		str	r3, [r7, #12]
 256              		.loc 1 179 9
 257 0026 02E0     		b	.L7
 258              	.L8:
 259              		.loc 1 179 131 discriminator 3
 260 0028 FB68     		ldr	r3, [r7, #12]
 261 002a 5B68     		ldr	r3, [r3, #4]
 262 002c FB60     		str	r3, [r7, #12]
 263              	.L7:
 264              		.loc 1 179 77 discriminator 1
 265 002e FB68     		ldr	r3, [r7, #12]
 266 0030 5B68     		ldr	r3, [r3, #4]
 267              		.loc 1 179 85 discriminator 1
 268 0032 1B68     		ldr	r3, [r3]
 269              		.loc 1 179 9 discriminator 1
 270 0034 BA68     		ldr	r2, [r7, #8]
 271 0036 9A42     		cmp	r2, r3
 272 0038 F6D2     		bcs	.L8
 273              	.L6:
 180:ThirdParty/FreeRTOS/list.c ****         {
 181:ThirdParty/FreeRTOS/list.c ****             /* There is nothing to do here, just iterating to the wanted
 182:ThirdParty/FreeRTOS/list.c ****              * insertion position. */
 183:ThirdParty/FreeRTOS/list.c ****         }
 184:ThirdParty/FreeRTOS/list.c ****     }
 185:ThirdParty/FreeRTOS/list.c **** 
 186:ThirdParty/FreeRTOS/list.c ****     pxNewListItem->pxNext = pxIterator->pxNext;
 274              		.loc 1 186 39
 275 003a FB68     		ldr	r3, [r7, #12]
 276 003c 5A68     		ldr	r2, [r3, #4]
 277              		.loc 1 186 27
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 9


 278 003e 3B68     		ldr	r3, [r7]
 279 0040 5A60     		str	r2, [r3, #4]
 187:ThirdParty/FreeRTOS/list.c ****     pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 280              		.loc 1 187 18
 281 0042 3B68     		ldr	r3, [r7]
 282 0044 5B68     		ldr	r3, [r3, #4]
 283              		.loc 1 187 39
 284 0046 3A68     		ldr	r2, [r7]
 285 0048 9A60     		str	r2, [r3, #8]
 188:ThirdParty/FreeRTOS/list.c ****     pxNewListItem->pxPrevious = pxIterator;
 286              		.loc 1 188 31
 287 004a 3B68     		ldr	r3, [r7]
 288 004c FA68     		ldr	r2, [r7, #12]
 289 004e 9A60     		str	r2, [r3, #8]
 189:ThirdParty/FreeRTOS/list.c ****     pxIterator->pxNext = pxNewListItem;
 290              		.loc 1 189 24
 291 0050 FB68     		ldr	r3, [r7, #12]
 292 0052 3A68     		ldr	r2, [r7]
 293 0054 5A60     		str	r2, [r3, #4]
 190:ThirdParty/FreeRTOS/list.c **** 
 191:ThirdParty/FreeRTOS/list.c ****     /* Remember which list the item is in.  This allows fast removal of the
 192:ThirdParty/FreeRTOS/list.c ****      * item later. */
 193:ThirdParty/FreeRTOS/list.c ****     pxNewListItem->pxContainer = pxList;
 294              		.loc 1 193 32
 295 0056 3B68     		ldr	r3, [r7]
 296 0058 7A68     		ldr	r2, [r7, #4]
 297 005a 1A61     		str	r2, [r3, #16]
 194:ThirdParty/FreeRTOS/list.c **** 
 195:ThirdParty/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )++;
 298              		.loc 1 195 13
 299 005c 7B68     		ldr	r3, [r7, #4]
 300 005e 1B68     		ldr	r3, [r3]
 301              		.loc 1 195 32
 302 0060 5A1C     		adds	r2, r3, #1
 303 0062 7B68     		ldr	r3, [r7, #4]
 304 0064 1A60     		str	r2, [r3]
 196:ThirdParty/FreeRTOS/list.c **** }
 305              		.loc 1 196 1
 306 0066 00BF     		nop
 307 0068 1437     		adds	r7, r7, #20
 308              	.LCFI21:
 309              		.cfi_def_cfa_offset 4
 310 006a BD46     		mov	sp, r7
 311              	.LCFI22:
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 006c 5DF8047B 		ldr	r7, [sp], #4
 315              	.LCFI23:
 316              		.cfi_restore 7
 317              		.cfi_def_cfa_offset 0
 318 0070 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE8:
 322              		.section	.text.uxListRemove,"ax",%progbits
 323              		.align	1
 324              		.global	uxListRemove
 325              		.syntax unified
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 10


 326              		.thumb
 327              		.thumb_func
 329              	uxListRemove:
 330              	.LFB9:
 197:ThirdParty/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
 198:ThirdParty/FreeRTOS/list.c **** 
 199:ThirdParty/FreeRTOS/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 200:ThirdParty/FreeRTOS/list.c **** {
 331              		.loc 1 200 1
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 16
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336 0000 80B4     		push	{r7}
 337              	.LCFI24:
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 85B0     		sub	sp, sp, #20
 341              	.LCFI25:
 342              		.cfi_def_cfa_offset 24
 343 0004 00AF     		add	r7, sp, #0
 344              	.LCFI26:
 345              		.cfi_def_cfa_register 7
 346 0006 7860     		str	r0, [r7, #4]
 201:ThirdParty/FreeRTOS/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 202:ThirdParty/FreeRTOS/list.c ****  * item. */
 203:ThirdParty/FreeRTOS/list.c ****     List_t * const pxList = pxItemToRemove->pxContainer;
 347              		.loc 1 203 20
 348 0008 7B68     		ldr	r3, [r7, #4]
 349 000a 1B69     		ldr	r3, [r3, #16]
 350 000c FB60     		str	r3, [r7, #12]
 204:ThirdParty/FreeRTOS/list.c **** 
 205:ThirdParty/FreeRTOS/list.c ****     pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 351              		.loc 1 205 19
 352 000e 7B68     		ldr	r3, [r7, #4]
 353 0010 5B68     		ldr	r3, [r3, #4]
 354              		.loc 1 205 56
 355 0012 7A68     		ldr	r2, [r7, #4]
 356 0014 9268     		ldr	r2, [r2, #8]
 357              		.loc 1 205 40
 358 0016 9A60     		str	r2, [r3, #8]
 206:ThirdParty/FreeRTOS/list.c ****     pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 359              		.loc 1 206 19
 360 0018 7B68     		ldr	r3, [r7, #4]
 361 001a 9B68     		ldr	r3, [r3, #8]
 362              		.loc 1 206 56
 363 001c 7A68     		ldr	r2, [r7, #4]
 364 001e 5268     		ldr	r2, [r2, #4]
 365              		.loc 1 206 40
 366 0020 5A60     		str	r2, [r3, #4]
 207:ThirdParty/FreeRTOS/list.c **** 
 208:ThirdParty/FreeRTOS/list.c ****     /* Only used during decision coverage testing. */
 209:ThirdParty/FreeRTOS/list.c ****     mtCOVERAGE_TEST_DELAY();
 210:ThirdParty/FreeRTOS/list.c **** 
 211:ThirdParty/FreeRTOS/list.c ****     /* Make sure the index is left pointing to a valid item. */
 212:ThirdParty/FreeRTOS/list.c ****     if( pxList->pxIndex == pxItemToRemove )
 367              		.loc 1 212 15
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 11


 368 0022 FB68     		ldr	r3, [r7, #12]
 369 0024 5B68     		ldr	r3, [r3, #4]
 370              		.loc 1 212 7
 371 0026 7A68     		ldr	r2, [r7, #4]
 372 0028 9A42     		cmp	r2, r3
 373 002a 03D1     		bne	.L10
 213:ThirdParty/FreeRTOS/list.c ****     {
 214:ThirdParty/FreeRTOS/list.c ****         pxList->pxIndex = pxItemToRemove->pxPrevious;
 374              		.loc 1 214 41
 375 002c 7B68     		ldr	r3, [r7, #4]
 376 002e 9A68     		ldr	r2, [r3, #8]
 377              		.loc 1 214 25
 378 0030 FB68     		ldr	r3, [r7, #12]
 379 0032 5A60     		str	r2, [r3, #4]
 380              	.L10:
 215:ThirdParty/FreeRTOS/list.c ****     }
 216:ThirdParty/FreeRTOS/list.c ****     else
 217:ThirdParty/FreeRTOS/list.c ****     {
 218:ThirdParty/FreeRTOS/list.c ****         mtCOVERAGE_TEST_MARKER();
 219:ThirdParty/FreeRTOS/list.c ****     }
 220:ThirdParty/FreeRTOS/list.c **** 
 221:ThirdParty/FreeRTOS/list.c ****     pxItemToRemove->pxContainer = NULL;
 381              		.loc 1 221 33
 382 0034 7B68     		ldr	r3, [r7, #4]
 383 0036 0022     		movs	r2, #0
 384 0038 1A61     		str	r2, [r3, #16]
 222:ThirdParty/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )--;
 385              		.loc 1 222 13
 386 003a FB68     		ldr	r3, [r7, #12]
 387 003c 1B68     		ldr	r3, [r3]
 388              		.loc 1 222 32
 389 003e 5A1E     		subs	r2, r3, #1
 390 0040 FB68     		ldr	r3, [r7, #12]
 391 0042 1A60     		str	r2, [r3]
 223:ThirdParty/FreeRTOS/list.c **** 
 224:ThirdParty/FreeRTOS/list.c ****     return pxList->uxNumberOfItems;
 392              		.loc 1 224 18
 393 0044 FB68     		ldr	r3, [r7, #12]
 394 0046 1B68     		ldr	r3, [r3]
 225:ThirdParty/FreeRTOS/list.c **** }
 395              		.loc 1 225 1
 396 0048 1846     		mov	r0, r3
 397 004a 1437     		adds	r7, r7, #20
 398              	.LCFI27:
 399              		.cfi_def_cfa_offset 4
 400 004c BD46     		mov	sp, r7
 401              	.LCFI28:
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 004e 5DF8047B 		ldr	r7, [sp], #4
 405              	.LCFI29:
 406              		.cfi_restore 7
 407              		.cfi_def_cfa_offset 0
 408 0052 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE9:
 412              		.text
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 12


 413              	.Letext0:
 414              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 415              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 416              		.file 4 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
 417              		.file 5 "ThirdParty/FreeRTOS/include/list.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 list.c
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:20     .text.vListInitialise:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:26     .text.vListInitialise:00000000 vListInitialise
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:89     .text.vListInitialiseItem:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:95     .text.vListInitialiseItem:00000000 vListInitialiseItem
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:135    .text.vListInsertEnd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:141    .text.vListInsertEnd:00000000 vListInsertEnd
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:213    .text.vListInsert:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:219    .text.vListInsert:00000000 vListInsert
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:323    .text.uxListRemove:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc4hk2dV.s:329    .text.uxListRemove:00000000 uxListRemove

NO UNDEFINED SYMBOLS
